{"version":3,"sources":["../src/methods.ts"],"sourcesContent":["import type { EVMWalletClient } from \"@goat-sdk/core\";\nimport { formatUnits, parseUnits } from \"viem\";\nimport type { z } from \"zod\";\nimport { ERC20_ABI } from \"./abi\";\nimport type {\n\tgetBalanceParametersSchema,\n\ttransferParametersSchema,\n} from \"./parameters\";\nimport type { ChainSpecificToken } from \"./token\";\n\nexport async function balanceOf(\n\twalletClient: EVMWalletClient,\n\ttoken: ChainSpecificToken,\n\tparameters: z.infer<typeof getBalanceParametersSchema>,\n): Promise<string> {\n\ttry {\n\t\tconst resolvedWalletAddress = await walletClient.resolveAddress(\n\t\t\tparameters.wallet,\n\t\t);\n\n\t\tconst rawBalance = await walletClient.read({\n\t\t\taddress: token.contractAddress,\n\t\t\tabi: ERC20_ABI,\n\t\t\tfunctionName: \"balanceOf\",\n\t\t\targs: [resolvedWalletAddress],\n\t\t});\n\n\t\treturn formatUnits(rawBalance.value as bigint, token.decimals);\n\t} catch (error) {\n\t\tthrow Error(`Failed to fetch balance: ${error}`);\n\t}\n}\n\nexport async function transfer(\n\twalletClient: EVMWalletClient,\n\ttoken: ChainSpecificToken,\n\tparameters: z.infer<typeof transferParametersSchema>,\n): Promise<string> {\n\ttry {\n\t\tconst amountInBaseUnits = parseUnits(parameters.amount, token.decimals);\n\n\t\tconst resolvedRecipientAddress = await walletClient.resolveAddress(\n\t\t\tparameters.to,\n\t\t);\n\n\t\tconst hash = await walletClient.sendTransaction({\n\t\t\tto: token.contractAddress,\n\t\t\tabi: ERC20_ABI,\n\t\t\tfunctionName: \"transfer\",\n\t\t\targs: [resolvedRecipientAddress, amountInBaseUnits],\n\t\t});\n\n\t\treturn hash.hash;\n\t} catch (error) {\n\t\tthrow Error(`Failed to transfer: ${error}`);\n\t}\n}\n"],"mappings":";;;;;AACA,SAAS,aAAa,kBAAkB;AASxC,eAAsB,UACrB,cACA,OACA,YACkB;AAClB,MAAI;AACH,UAAM,wBAAwB,MAAM,aAAa;AAAA,MAChD,WAAW;AAAA,IACZ;AAEA,UAAM,aAAa,MAAM,aAAa,KAAK;AAAA,MAC1C,SAAS,MAAM;AAAA,MACf,KAAK;AAAA,MACL,cAAc;AAAA,MACd,MAAM,CAAC,qBAAqB;AAAA,IAC7B,CAAC;AAED,WAAO,YAAY,WAAW,OAAiB,MAAM,QAAQ;AAAA,EAC9D,SAAS,OAAO;AACf,UAAM,MAAM,4BAA4B,KAAK,EAAE;AAAA,EAChD;AACD;AAEA,eAAsB,SACrB,cACA,OACA,YACkB;AAClB,MAAI;AACH,UAAM,oBAAoB,WAAW,WAAW,QAAQ,MAAM,QAAQ;AAEtE,UAAM,2BAA2B,MAAM,aAAa;AAAA,MACnD,WAAW;AAAA,IACZ;AAEA,UAAM,OAAO,MAAM,aAAa,gBAAgB;AAAA,MAC/C,IAAI,MAAM;AAAA,MACV,KAAK;AAAA,MACL,cAAc;AAAA,MACd,MAAM,CAAC,0BAA0B,iBAAiB;AAAA,IACnD,CAAC;AAED,WAAO,KAAK;AAAA,EACb,SAAS,OAAO;AACf,UAAM,MAAM,uBAAuB,KAAK,EAAE;AAAA,EAC3C;AACD;","names":[]}