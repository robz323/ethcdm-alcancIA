{"version":3,"sources":["/Users/0xaguspunk/github.com/crossmint/goat/typescript/packages/plugins/erc20/dist/chunk-NII4GPXI.js","../src/tools.ts"],"names":[],"mappings":"AAAA;AACE;AACA;AACF,sDAA4B;AAC5B;AACE;AACA;AACF,sDAA4B;AAC5B;AACA;ACCO,SAAS,QAAA,CACZ,SAAA,EAC+B;AAC/B,EAAA,MAAM,MAAA,EAAyC,CAAC,CAAA;AAEhD,EAAA,IAAA,CAAA,MAAW,MAAA,GAAS,SAAA,EAAW;AAC3B,IAAA,MAAM,YAAA,EAA6C;AAAA,MAC/C,IAAA,EAAM,CAAA,IAAA,EAAO,KAAA,CAAM,MAAM,CAAA,QAAA,CAAA;AAAA,MACzB,WAAA,EAAa,CAAA,kCAAA,EAAqC,KAAA,CAAM,MAAM,CAAA,CAAA;AAClD,MAAA;AAIiB,MAAA;AACjC,IAAA;AAEoD,IAAA;AAClB,MAAA;AACsB,MAAA;AACxC,MAAA;AAIgB,MAAA;AAChC,IAAA;AAEoC,IAAA;AACxC,EAAA;AAEO,EAAA;AACX;ADXqE;AACA;AACA;AACA","file":"/Users/0xaguspunk/github.com/crossmint/goat/typescript/packages/plugins/erc20/dist/chunk-NII4GPXI.js","sourcesContent":[null,"import { balanceOf, transfer } from \"./methods\";\nimport {\n    getBalanceParametersSchema,\n    transferParametersSchema,\n} from \"./parameters\";\n\nimport type { DeferredTool, EVMWalletClient } from \"@goat-sdk/core\";\nimport type { z } from \"zod\";\nimport type { ChainSpecificToken } from \"./token\";\n\nexport function getTools(\n    tokenList: ChainSpecificToken[]\n): DeferredTool<EVMWalletClient>[] {\n    const tools: DeferredTool<EVMWalletClient>[] = [];\n\n    for (const token of tokenList) {\n        const balanceTool: DeferredTool<EVMWalletClient> = {\n            name: `get_${token.symbol}_balance`,\n            description: `This {{tool}} gets the balance of ${token.symbol}`,\n            parameters: getBalanceParametersSchema,\n            method: (\n                walletClient: EVMWalletClient,\n                parameters: z.infer<typeof getBalanceParametersSchema>\n            ) => balanceOf(walletClient, token, parameters),\n        };\n\n        const transferTool: DeferredTool<EVMWalletClient> = {\n            name: `transfer_${token.symbol}`,\n            description: `This {{tool}} transfers ${token.symbol} to the specified address`,\n            parameters: transferParametersSchema,\n            method: (\n                walletClient: EVMWalletClient,\n                parameters: z.infer<typeof transferParametersSchema>\n            ) => transfer(walletClient, token, parameters),\n        };\n\n        tools.push(balanceTool, transferTool);\n    }\n\n    return tools;\n}\n"]}