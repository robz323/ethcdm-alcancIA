import {
  ERC20_ABI
} from "./chunk-24QAL6ZP.mjs";

// src/methods.ts
import { formatUnits, parseUnits } from "viem";
async function balanceOf(walletClient, token, parameters) {
  try {
    const resolvedWalletAddress = await walletClient.resolveAddress(
      parameters.wallet
    );
    const rawBalance = await walletClient.read({
      address: token.contractAddress,
      abi: ERC20_ABI,
      functionName: "balanceOf",
      args: [resolvedWalletAddress]
    });
    return formatUnits(rawBalance.value, token.decimals);
  } catch (error) {
    throw Error(`Failed to fetch balance: ${error}`);
  }
}
async function transfer(walletClient, token, parameters) {
  try {
    const amountInBaseUnits = parseUnits(parameters.amount, token.decimals);
    const resolvedRecipientAddress = await walletClient.resolveAddress(
      parameters.to
    );
    const hash = await walletClient.sendTransaction({
      to: token.contractAddress,
      abi: ERC20_ABI,
      functionName: "transfer",
      args: [resolvedRecipientAddress, amountInBaseUnits]
    });
    return hash.hash;
  } catch (error) {
    throw Error(`Failed to transfer: ${error}`);
  }
}

export {
  balanceOf,
  transfer
};
//# sourceMappingURL=chunk-T3IAETW7.mjs.map