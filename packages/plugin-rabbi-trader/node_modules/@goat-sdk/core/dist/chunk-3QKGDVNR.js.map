{"version":3,"sources":["/Users/0xaguspunk/github.com/crossmint/goat/typescript/packages/core/dist/chunk-3QKGDVNR.js","../src/solana/methods.ts"],"names":[],"mappings":"AAAA;ACAA,4BAA4B;AAQrB,SAAS,UAAA,CACf,YAAA,EACA,UAAA,EACS;AACT,EAAA,OAAO,YAAA,CAAa,UAAA,CAAW,CAAA;AAChC;AAEA,MAAA,SAAsB,UAAA,CACrB,YAAA,EACA,UAAA,EACkB;AAClB,EAAA,IAAI;AACH,IAAA,MAAM,QAAA,EAAU,MAAM,YAAA,CAAa,SAAA;AAAA,uBAClC,UAAA,CAAW,OAAA,UAAW,UAAA,CAAW,YAAA,EAAc,CAAC,CAAC;AAAA,IAClD,CAAA;AAEA,IAAA,OAAO,+BAAA,OAAY,CAAQ,KAAA,EAAO,OAAA,CAAQ,QAAQ,CAAA;AAAA,EACnD,EAAA,MAAA,CAAS,KAAA,EAAO;AACf,IAAA,MAAM,IAAI,KAAA,CAAM,CAAA,yBAAA,EAA4B,KAAK,CAAA,CAAA;AAClD,EAAA;AACD;ADbsD;AACA;AACA;AACA;AACA","file":"/Users/0xaguspunk/github.com/crossmint/goat/typescript/packages/core/dist/chunk-3QKGDVNR.js","sourcesContent":[null,"import { formatUnits } from \"viem\";\nimport type { z } from \"zod\";\nimport type { SolanaWalletClient } from \"../wallets\";\nimport type {\n\tgetAddressParametersSchema,\n\tgetSOLBalanceParametersSchema,\n} from \"./parameters\";\n\nexport function getAddress(\n\twalletClient: SolanaWalletClient,\n\tparameters: z.infer<typeof getAddressParametersSchema>,\n): string {\n\treturn walletClient.getAddress();\n}\n\nexport async function getBalance(\n\twalletClient: SolanaWalletClient,\n\tparameters: z.infer<typeof getSOLBalanceParametersSchema>,\n): Promise<string> {\n\ttry {\n\t\tconst balance = await walletClient.balanceOf(\n\t\t\tparameters.address ?? getAddress(walletClient, {}),\n\t\t);\n\n\t\treturn formatUnits(balance.value, balance.decimals);\n\t} catch (error) {\n\t\tthrow new Error(`Failed to fetch balance: ${error}`);\n\t}\n}\n"]}