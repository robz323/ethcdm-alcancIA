"use strict";Object.defineProperty(exports, "__esModule", {value: true});

var _chunkJ6C7SYNGjs = require('./chunk-J6C7SYNG.js');



var _chunkJOKZ77ZLjs = require('./chunk-JOKZ77ZL.js');


var _chunkIGGB5EF7js = require('./chunk-IGGB5EF7.js');


var _chunkVX7PVRBVjs = require('./chunk-VX7PVRBV.js');


var _chunkKKHRPQBPjs = require('./chunk-KKHRPQBP.js');

// src/tools.ts
async function getTools({
  wallet,
  plugins = [],
  wordForTool
}) {
  const chain = wallet.getChain();
  const tools = await getDeferredTools({
    chain,
    plugins,
    supportsSmartWallets: _chunkIGGB5EF7js.isEVMSmartWalletClient.call(void 0, wallet),
    wordForTool
  });
  return tools.map((tool) => ({
    ...tool,
    method: (parameters) => tool.method(wallet, parameters)
  }));
}
async function getDeferredTools({
  chain,
  supportsSmartWallets = false,
  wordForTool = "tool",
  plugins = []
}) {
  const tools = [];
  if (_chunkJOKZ77ZLjs.isEVMChain.call(void 0, chain)) {
    tools.push(
      ..._chunkKKHRPQBPjs.deferredEVMCoreTools
    );
  } else if (_chunkJOKZ77ZLjs.isSolanaChain.call(void 0, chain)) {
    tools.push(
      ..._chunkJ6C7SYNGjs.deferredSolanaTools
    );
  } else {
    throw new Error(`Unsupported chain type: ${chain.type}`);
  }
  for (const plugin of plugins) {
    if (!plugin.supportsChain(chain)) {
      console.warn(
        `Plugin ${plugin.name} does not support chain ${chain.type}. Skipping.`
      );
      continue;
    }
    if (!plugin.supportsSmartWallets() && supportsSmartWallets) {
      console.warn(
        `Plugin ${plugin.name} does not support smart wallets. Skipping.`
      );
      continue;
    }
    const pluginTools = await plugin.getTools(chain);
    if (pluginTools.length === 0) {
      console.warn(`Plugin ${plugin.name} returned no tools. Skipping.`);
      continue;
    }
    tools.push(...pluginTools);
  }
  return tools.map((tool) => ({
    ...tool,
    description: _chunkVX7PVRBVjs.replaceToolPlaceholder.call(void 0, tool.description, wordForTool)
  }));
}




exports.getTools = getTools; exports.getDeferredTools = getDeferredTools;
//# sourceMappingURL=chunk-ZJEH2AZK.js.map