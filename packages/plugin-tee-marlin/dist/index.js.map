{"version":3,"sources":["../src/actions/remoteAttestation.ts","../src/index.ts"],"sourcesContent":["import type { IAgentRuntime, Memory, State, HandlerCallback } from \"@elizaos/core\";\n\nexport const remoteAttestationAction = {\n    name: \"REMOTE_ATTESTATION\",\n    similes: [\"REMOTE_ATTESTATION\", \"TEE_REMOTE_ATTESTATION\", \"TEE_ATTESTATION\"],\n    description: \"Generate a remote attestation to prove that the agent is running in a TEE\",\n    handler: async (\n        runtime: IAgentRuntime,\n        message: Memory,\n        _state: State,\n        _options: any,\n        callback: HandlerCallback,\n    ) => {\n        try {\n            const endpoint = runtime.getSetting(\"TEE_MARLIN_ATTESTATION_ENDPOINT\") ?? \"http://127.0.0.1:1350\";\n            const response = await fetch(`${endpoint}/attestation/hex`);\n            callback({\n                text: `Here you go - ${await response.text()}`,\n                action: \"NONE\",\n            });\n            return true;\n        } catch (error) {\n            console.error(\"Failed to fetch remote attestation: \", error);\n            return false;\n        }\n    },\n    validate: async (_runtime: IAgentRuntime) => {\n        return true;\n    },\n    examples: [\n        [\n            {\n                user: \"user\",\n                content: {\n                    text: \"Attest yourself\",\n                    action: \"REMOTE_ATTESTATION\",\n                },\n            },\n            {\n                user: \"user\",\n                content: {\n                    text: \"Generate a remote attestation\",\n                    action: \"REMOTE_ATTESTATION\",\n                },\n            },\n        ],\n    ],\n};\n","import { Plugin } from \"@elizaos/core\";\nimport { remoteAttestationAction } from \"./actions/remoteAttestation\";\n\nexport const teeMarlinPlugin: Plugin = {\n    name: \"Marlin TEE Plugin\",\n    description:\n        \"TEE plugin with actions to generate remote attestations\",\n    actions: [\n        /* custom actions */\n        remoteAttestationAction,\n    ],\n    evaluators: [\n        /* custom evaluators */\n    ],\n    providers: [\n        /* custom providers */\n    ],\n    services: [\n        /* custom services */\n    ],\n};\n"],"mappings":";AAEO,IAAM,0BAA0B;AAAA,EACnC,MAAM;AAAA,EACN,SAAS,CAAC,sBAAsB,0BAA0B,iBAAiB;AAAA,EAC3E,aAAa;AAAA,EACb,SAAS,OACL,SACA,SACA,QACA,UACA,aACC;AACD,QAAI;AACA,YAAM,WAAW,QAAQ,WAAW,iCAAiC,KAAK;AAC1E,YAAM,WAAW,MAAM,MAAM,GAAG,QAAQ,kBAAkB;AAC1D,eAAS;AAAA,QACL,MAAM,iBAAiB,MAAM,SAAS,KAAK,CAAC;AAAA,QAC5C,QAAQ;AAAA,MACZ,CAAC;AACD,aAAO;AAAA,IACX,SAAS,OAAO;AACZ,cAAQ,MAAM,wCAAwC,KAAK;AAC3D,aAAO;AAAA,IACX;AAAA,EACJ;AAAA,EACA,UAAU,OAAO,aAA4B;AACzC,WAAO;AAAA,EACX;AAAA,EACA,UAAU;AAAA,IACN;AAAA,MACI;AAAA,QACI,MAAM;AAAA,QACN,SAAS;AAAA,UACL,MAAM;AAAA,UACN,QAAQ;AAAA,QACZ;AAAA,MACJ;AAAA,MACA;AAAA,QACI,MAAM;AAAA,QACN,SAAS;AAAA,UACL,MAAM;AAAA,UACN,QAAQ;AAAA,QACZ;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACJ;;;AC5CO,IAAM,kBAA0B;AAAA,EACnC,MAAM;AAAA,EACN,aACI;AAAA,EACJ,SAAS;AAAA;AAAA,IAEL;AAAA,EACJ;AAAA,EACA,YAAY;AAAA;AAAA,EAEZ;AAAA,EACA,WAAW;AAAA;AAAA,EAEX;AAAA,EACA,UAAU;AAAA;AAAA,EAEV;AACJ;","names":[]}