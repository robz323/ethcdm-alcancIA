import { MsgInit, MsgExecute } from "./tx";
export const registry = [["/cosmos.accounts.v1.MsgInit", MsgInit], ["/cosmos.accounts.v1.MsgExecute", MsgExecute]];
export const load = (protoRegistry) => {
    registry.forEach(([typeUrl, mod]) => {
        protoRegistry.register(typeUrl, mod);
    });
};
export const MessageComposer = {
    encoded: {
        init(value) {
            return {
                typeUrl: "/cosmos.accounts.v1.MsgInit",
                value: MsgInit.encode(value).finish()
            };
        },
        execute(value) {
            return {
                typeUrl: "/cosmos.accounts.v1.MsgExecute",
                value: MsgExecute.encode(value).finish()
            };
        }
    },
    withTypeUrl: {
        init(value) {
            return {
                typeUrl: "/cosmos.accounts.v1.MsgInit",
                value
            };
        },
        execute(value) {
            return {
                typeUrl: "/cosmos.accounts.v1.MsgExecute",
                value
            };
        }
    },
    fromPartial: {
        init(value) {
            return {
                typeUrl: "/cosmos.accounts.v1.MsgInit",
                value: MsgInit.fromPartial(value)
            };
        },
        execute(value) {
            return {
                typeUrl: "/cosmos.accounts.v1.MsgExecute",
                value: MsgExecute.fromPartial(value)
            };
        }
    }
};
//# sourceMappingURL=tx.registry.js.map