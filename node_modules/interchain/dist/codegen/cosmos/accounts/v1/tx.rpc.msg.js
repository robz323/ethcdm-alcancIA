import { BinaryReader } from "../../../binary";
import { MsgInit, MsgInitResponse, MsgExecute, MsgExecuteResponse } from "./tx";
export class MsgClientImpl {
    rpc;
    constructor(rpc) {
        this.rpc = rpc;
    }
    /* Init creates a new account in the chain. */
    init = async (request) => {
        const data = MsgInit.encode(request).finish();
        const promise = this.rpc.request("cosmos.accounts.v1.Msg", "Init", data);
        return promise.then(data => MsgInitResponse.decode(new BinaryReader(data)));
    };
    /* Execute executes a message to the target account. */
    execute = async (request) => {
        const data = MsgExecute.encode(request).finish();
        const promise = this.rpc.request("cosmos.accounts.v1.Msg", "Execute", data);
        return promise.then(data => MsgExecuteResponse.decode(new BinaryReader(data)));
    };
}
//# sourceMappingURL=tx.rpc.msg.js.map