import * as _1 from "./accounts/module/v1/module";
import * as _2 from "./accounts/v1/query";
import * as _3 from "./accounts/v1/tx";
import * as _4 from "./app/runtime/v1alpha1/module";
import * as _5 from "./auth/module/v1/module";
import * as _6 from "./auth/v1beta1/auth";
import * as _7 from "./auth/v1beta1/genesis";
import * as _8 from "./auth/v1beta1/query";
import * as _9 from "./auth/v1beta1/tx";
import * as _10 from "./authz/module/v1/module";
import * as _11 from "./authz/v1beta1/authz";
import * as _12 from "./authz/v1beta1/event";
import * as _13 from "./authz/v1beta1/genesis";
import * as _14 from "./authz/v1beta1/query";
import * as _15 from "./authz/v1beta1/tx";
import * as _16 from "./bank/module/v1/module";
import * as _17 from "./bank/v1beta1/authz";
import * as _18 from "./bank/v1beta1/bank";
import * as _19 from "./bank/v1beta1/genesis";
import * as _20 from "./bank/v1beta1/query";
import * as _21 from "./bank/v1beta1/tx";
import * as _22 from "./base/abci/v1beta1/abci";
import * as _23 from "./base/node/v1beta1/query";
import * as _24 from "./base/query/v1beta1/pagination";
import * as _25 from "./base/reflection/v2alpha1/reflection";
import * as _26 from "./base/v1beta1/coin";
import * as _27 from "./circuit/module/v1/module";
import * as _28 from "./circuit/v1/query";
import * as _29 from "./circuit/v1/tx";
import * as _30 from "./circuit/v1/types";
import * as _31 from "./consensus/module/v1/module";
import * as _32 from "./consensus/v1/query";
import * as _33 from "./consensus/v1/tx";
import * as _34 from "./crisis/module/v1/module";
import * as _35 from "./crypto/ed25519/keys";
import * as _36 from "./crypto/hd/v1/hd";
import * as _37 from "./crypto/keyring/v1/record";
import * as _38 from "./crypto/multisig/keys";
import * as _39 from "./crypto/secp256k1/keys";
import * as _40 from "./crypto/secp256r1/keys";
import * as _41 from "./distribution/module/v1/module";
import * as _42 from "./distribution/v1beta1/distribution";
import * as _43 from "./distribution/v1beta1/genesis";
import * as _44 from "./distribution/v1beta1/query";
import * as _45 from "./distribution/v1beta1/tx";
import * as _46 from "./evidence/module/v1/module";
import * as _47 from "./feegrant/module/v1/module";
import * as _48 from "./feegrant/v1beta1/feegrant";
import * as _49 from "./feegrant/v1beta1/genesis";
import * as _50 from "./feegrant/v1beta1/query";
import * as _51 from "./feegrant/v1beta1/tx";
import * as _52 from "./genutil/module/v1/module";
import * as _53 from "./gov/module/v1/module";
import * as _54 from "./gov/v1/genesis";
import * as _55 from "./gov/v1/gov";
import * as _56 from "./gov/v1/query";
import * as _57 from "./gov/v1/tx";
import * as _58 from "./gov/v1beta1/genesis";
import * as _59 from "./gov/v1beta1/gov";
import * as _60 from "./gov/v1beta1/query";
import * as _61 from "./gov/v1beta1/tx";
import * as _62 from "./group/module/v1/module";
import * as _63 from "./group/v1/events";
import * as _64 from "./group/v1/genesis";
import * as _65 from "./group/v1/query";
import * as _66 from "./group/v1/tx";
import * as _67 from "./group/v1/types";
import * as _68 from "./mint/module/v1/module";
import * as _69 from "./mint/v1beta1/genesis";
import * as _70 from "./mint/v1beta1/mint";
import * as _71 from "./mint/v1beta1/query";
import * as _72 from "./mint/v1beta1/tx";
import * as _74 from "./nft/module/v1/module";
import * as _75 from "./orm/module/v1alpha1/module";
import * as _76 from "./orm/query/v1alpha1/query";
import * as _77 from "./params/module/v1/module";
import * as _78 from "./params/v1beta1/params";
import * as _79 from "./params/v1beta1/query";
import * as _81 from "./reflection/v1/reflection";
import * as _82 from "./slashing/module/v1/module";
import * as _83 from "./staking/module/v1/module";
import * as _84 from "./staking/v1beta1/authz";
import * as _85 from "./staking/v1beta1/genesis";
import * as _86 from "./staking/v1beta1/query";
import * as _87 from "./staking/v1beta1/staking";
import * as _88 from "./staking/v1beta1/tx";
import * as _89 from "./store/internal/kv/v1beta1/kv";
import * as _90 from "./store/snapshots/v1/snapshot";
import * as _91 from "./store/streaming/abci/grpc";
import * as _92 from "./store/v1beta1/commit_info";
import * as _93 from "./store/v1beta1/listening";
import * as _94 from "./tx/config/v1/config";
import * as _95 from "./tx/signing/v1beta1/signing";
import * as _96 from "./tx/v1beta1/service";
import * as _97 from "./tx/v1beta1/tx";
import * as _98 from "./upgrade/module/v1/module";
import * as _99 from "./upgrade/v1beta1/query";
import * as _100 from "./upgrade/v1beta1/tx";
import * as _101 from "./upgrade/v1beta1/upgrade";
import * as _102 from "./vesting/module/v1/module";
import * as _103 from "./vesting/v1beta1/tx";
import * as _104 from "./vesting/v1beta1/vesting";
import * as _105 from "./ics23/v1/proofs";
import * as _194 from "./auth/v1beta1/query.lcd";
import * as _195 from "./authz/v1beta1/query.lcd";
import * as _196 from "./bank/v1beta1/query.lcd";
import * as _197 from "./base/node/v1beta1/query.lcd";
import * as _198 from "./circuit/v1/query.lcd";
import * as _199 from "./consensus/v1/query.lcd";
import * as _200 from "./distribution/v1beta1/query.lcd";
import * as _201 from "./feegrant/v1beta1/query.lcd";
import * as _202 from "./gov/v1/query.lcd";
import * as _203 from "./gov/v1beta1/query.lcd";
import * as _204 from "./group/v1/query.lcd";
import * as _205 from "./mint/v1beta1/query.lcd";
import * as _206 from "./params/v1beta1/query.lcd";
import * as _207 from "./staking/v1beta1/query.lcd";
import * as _208 from "./tx/v1beta1/service.lcd";
import * as _209 from "./upgrade/v1beta1/query.lcd";
import * as _210 from "./accounts/v1/query.rpc.Query";
import * as _211 from "./auth/v1beta1/query.rpc.Query";
import * as _212 from "./authz/v1beta1/query.rpc.Query";
import * as _213 from "./bank/v1beta1/query.rpc.Query";
import * as _214 from "./base/node/v1beta1/query.rpc.Service";
import * as _215 from "./circuit/v1/query.rpc.Query";
import * as _216 from "./consensus/v1/query.rpc.Query";
import * as _217 from "./distribution/v1beta1/query.rpc.Query";
import * as _218 from "./feegrant/v1beta1/query.rpc.Query";
import * as _219 from "./gov/v1/query.rpc.Query";
import * as _220 from "./gov/v1beta1/query.rpc.Query";
import * as _221 from "./group/v1/query.rpc.Query";
import * as _222 from "./mint/v1beta1/query.rpc.Query";
import * as _223 from "./orm/query/v1alpha1/query.rpc.Query";
import * as _224 from "./params/v1beta1/query.rpc.Query";
import * as _225 from "./staking/v1beta1/query.rpc.Query";
import * as _226 from "./tx/v1beta1/service.rpc.Service";
import * as _227 from "./upgrade/v1beta1/query.rpc.Query";
import * as _228 from "./accounts/v1/tx.rpc.msg";
import * as _229 from "./auth/v1beta1/tx.rpc.msg";
import * as _230 from "./authz/v1beta1/tx.rpc.msg";
import * as _231 from "./bank/v1beta1/tx.rpc.msg";
import * as _232 from "./circuit/v1/tx.rpc.msg";
import * as _233 from "./consensus/v1/tx.rpc.msg";
import * as _234 from "./distribution/v1beta1/tx.rpc.msg";
import * as _235 from "./feegrant/v1beta1/tx.rpc.msg";
import * as _236 from "./gov/v1/tx.rpc.msg";
import * as _237 from "./gov/v1beta1/tx.rpc.msg";
import * as _238 from "./group/v1/tx.rpc.msg";
import * as _239 from "./mint/v1beta1/tx.rpc.msg";
import * as _240 from "./staking/v1beta1/tx.rpc.msg";
import * as _241 from "./upgrade/v1beta1/tx.rpc.msg";
import * as _242 from "./vesting/v1beta1/tx.rpc.msg";
export declare namespace cosmos {
    namespace accounts {
        namespace module {
            const v1: {
                Module: {
                    typeUrl: string;
                    aminoType: string;
                    encode(_: _1.Module, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _1.Module;
                    fromPartial(_: {}): _1.Module;
                    fromAmino(_: _1.ModuleAmino): _1.Module;
                    toAmino(_: _1.Module): _1.ModuleAmino;
                    fromAminoMsg(object: _1.ModuleAminoMsg): _1.Module;
                    toAminoMsg(message: _1.Module): _1.ModuleAminoMsg;
                    fromProtoMsg(message: _1.ModuleProtoMsg): _1.Module;
                    toProto(message: _1.Module): Uint8Array;
                    toProtoMsg(message: _1.Module): _1.ModuleProtoMsg;
                };
            };
        }
        const v1: {
            MsgClientImpl: typeof _228.MsgClientImpl;
            QueryClientImpl: typeof _210.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                accountQuery(request: _2.AccountQueryRequest): Promise<_2.AccountQueryResponse>;
            };
            registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
            load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
            MessageComposer: {
                encoded: {
                    init(value: _3.MsgInit): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    execute(value: _3.MsgExecute): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                };
                withTypeUrl: {
                    init(value: _3.MsgInit): {
                        typeUrl: string;
                        value: _3.MsgInit;
                    };
                    execute(value: _3.MsgExecute): {
                        typeUrl: string;
                        value: _3.MsgExecute;
                    };
                };
                fromPartial: {
                    init(value: _3.MsgInit): {
                        typeUrl: string;
                        value: _3.MsgInit;
                    };
                    execute(value: _3.MsgExecute): {
                        typeUrl: string;
                        value: _3.MsgExecute;
                    };
                };
            };
            AminoConverter: {
                "/cosmos.accounts.v1.MsgInit": {
                    aminoType: string;
                    toAmino: (message: _3.MsgInit) => _3.MsgInitAmino;
                    fromAmino: (object: _3.MsgInitAmino) => _3.MsgInit;
                };
                "/cosmos.accounts.v1.MsgExecute": {
                    aminoType: string;
                    toAmino: (message: _3.MsgExecute) => _3.MsgExecuteAmino;
                    fromAmino: (object: _3.MsgExecuteAmino) => _3.MsgExecute;
                };
            };
            MsgInit: {
                typeUrl: string;
                aminoType: string;
                encode(message: _3.MsgInit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _3.MsgInit;
                fromPartial(object: {
                    sender?: string;
                    accountType?: string;
                    message?: Uint8Array;
                }): _3.MsgInit;
                fromAmino(object: _3.MsgInitAmino): _3.MsgInit;
                toAmino(message: _3.MsgInit): _3.MsgInitAmino;
                fromAminoMsg(object: _3.MsgInitAminoMsg): _3.MsgInit;
                toAminoMsg(message: _3.MsgInit): _3.MsgInitAminoMsg;
                fromProtoMsg(message: _3.MsgInitProtoMsg): _3.MsgInit;
                toProto(message: _3.MsgInit): Uint8Array;
                toProtoMsg(message: _3.MsgInit): _3.MsgInitProtoMsg;
            };
            MsgInitResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _3.MsgInitResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _3.MsgInitResponse;
                fromPartial(object: {
                    accountAddress?: string;
                    response?: Uint8Array;
                }): _3.MsgInitResponse;
                fromAmino(object: _3.MsgInitResponseAmino): _3.MsgInitResponse;
                toAmino(message: _3.MsgInitResponse): _3.MsgInitResponseAmino;
                fromAminoMsg(object: _3.MsgInitResponseAminoMsg): _3.MsgInitResponse;
                toAminoMsg(message: _3.MsgInitResponse): _3.MsgInitResponseAminoMsg;
                fromProtoMsg(message: _3.MsgInitResponseProtoMsg): _3.MsgInitResponse;
                toProto(message: _3.MsgInitResponse): Uint8Array;
                toProtoMsg(message: _3.MsgInitResponse): _3.MsgInitResponseProtoMsg;
            };
            MsgExecute: {
                typeUrl: string;
                aminoType: string;
                encode(message: _3.MsgExecute, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _3.MsgExecute;
                fromPartial(object: {
                    sender?: string;
                    target?: string;
                    message?: Uint8Array;
                }): _3.MsgExecute;
                fromAmino(object: _3.MsgExecuteAmino): _3.MsgExecute;
                toAmino(message: _3.MsgExecute): _3.MsgExecuteAmino;
                fromAminoMsg(object: _3.MsgExecuteAminoMsg): _3.MsgExecute;
                toAminoMsg(message: _3.MsgExecute): _3.MsgExecuteAminoMsg;
                fromProtoMsg(message: _3.MsgExecuteProtoMsg): _3.MsgExecute;
                toProto(message: _3.MsgExecute): Uint8Array;
                toProtoMsg(message: _3.MsgExecute): _3.MsgExecuteProtoMsg;
            };
            MsgExecuteResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _3.MsgExecuteResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _3.MsgExecuteResponse;
                fromPartial(object: {
                    response?: Uint8Array;
                }): _3.MsgExecuteResponse;
                fromAmino(object: _3.MsgExecuteResponseAmino): _3.MsgExecuteResponse;
                toAmino(message: _3.MsgExecuteResponse): _3.MsgExecuteResponseAmino;
                fromAminoMsg(object: _3.MsgExecuteResponseAminoMsg): _3.MsgExecuteResponse;
                toAminoMsg(message: _3.MsgExecuteResponse): _3.MsgExecuteResponseAminoMsg;
                fromProtoMsg(message: _3.MsgExecuteResponseProtoMsg): _3.MsgExecuteResponse;
                toProto(message: _3.MsgExecuteResponse): Uint8Array;
                toProtoMsg(message: _3.MsgExecuteResponse): _3.MsgExecuteResponseProtoMsg;
            };
            AccountQueryRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _2.AccountQueryRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _2.AccountQueryRequest;
                fromPartial(object: {
                    target?: string;
                    request?: Uint8Array;
                }): _2.AccountQueryRequest;
                fromAmino(object: _2.AccountQueryRequestAmino): _2.AccountQueryRequest;
                toAmino(message: _2.AccountQueryRequest): _2.AccountQueryRequestAmino;
                fromAminoMsg(object: _2.AccountQueryRequestAminoMsg): _2.AccountQueryRequest;
                toAminoMsg(message: _2.AccountQueryRequest): _2.AccountQueryRequestAminoMsg;
                fromProtoMsg(message: _2.AccountQueryRequestProtoMsg): _2.AccountQueryRequest;
                toProto(message: _2.AccountQueryRequest): Uint8Array;
                toProtoMsg(message: _2.AccountQueryRequest): _2.AccountQueryRequestProtoMsg;
            };
            AccountQueryResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _2.AccountQueryResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _2.AccountQueryResponse;
                fromPartial(object: {
                    response?: Uint8Array;
                }): _2.AccountQueryResponse;
                fromAmino(object: _2.AccountQueryResponseAmino): _2.AccountQueryResponse;
                toAmino(message: _2.AccountQueryResponse): _2.AccountQueryResponseAmino;
                fromAminoMsg(object: _2.AccountQueryResponseAminoMsg): _2.AccountQueryResponse;
                toAminoMsg(message: _2.AccountQueryResponse): _2.AccountQueryResponseAminoMsg;
                fromProtoMsg(message: _2.AccountQueryResponseProtoMsg): _2.AccountQueryResponse;
                toProto(message: _2.AccountQueryResponse): Uint8Array;
                toProtoMsg(message: _2.AccountQueryResponse): _2.AccountQueryResponseProtoMsg;
            };
        };
    }
    namespace app {
        namespace runtime {
            const v1alpha1: {
                Module: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _4.Module, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _4.Module;
                    fromPartial(object: {
                        appName?: string;
                        beginBlockers?: string[];
                        endBlockers?: string[];
                        initGenesis?: string[];
                        exportGenesis?: string[];
                        overrideStoreKeys?: {
                            moduleName?: string;
                            kvStoreKey?: string;
                        }[];
                        orderMigrations?: string[];
                        precommiters?: string[];
                        prepareCheckStaters?: string[];
                        preBlockers?: string[];
                    }): _4.Module;
                    fromAmino(object: _4.ModuleAmino): _4.Module;
                    toAmino(message: _4.Module): _4.ModuleAmino;
                    fromAminoMsg(object: _4.ModuleAminoMsg): _4.Module;
                    toAminoMsg(message: _4.Module): _4.ModuleAminoMsg;
                    fromProtoMsg(message: _4.ModuleProtoMsg): _4.Module;
                    toProto(message: _4.Module): Uint8Array;
                    toProtoMsg(message: _4.Module): _4.ModuleProtoMsg;
                };
                StoreKeyConfig: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _4.StoreKeyConfig, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _4.StoreKeyConfig;
                    fromPartial(object: {
                        moduleName?: string;
                        kvStoreKey?: string;
                    }): _4.StoreKeyConfig;
                    fromAmino(object: _4.StoreKeyConfigAmino): _4.StoreKeyConfig;
                    toAmino(message: _4.StoreKeyConfig): _4.StoreKeyConfigAmino;
                    fromAminoMsg(object: _4.StoreKeyConfigAminoMsg): _4.StoreKeyConfig;
                    toAminoMsg(message: _4.StoreKeyConfig): _4.StoreKeyConfigAminoMsg;
                    fromProtoMsg(message: _4.StoreKeyConfigProtoMsg): _4.StoreKeyConfig;
                    toProto(message: _4.StoreKeyConfig): Uint8Array;
                    toProtoMsg(message: _4.StoreKeyConfig): _4.StoreKeyConfigProtoMsg;
                };
            };
        }
    }
    namespace auth {
        namespace module {
            const v1: {
                Module: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _5.Module, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _5.Module;
                    fromPartial(object: {
                        bech32Prefix?: string;
                        moduleAccountPermissions?: {
                            account?: string;
                            permissions?: string[];
                        }[];
                        authority?: string;
                    }): _5.Module;
                    fromAmino(object: _5.ModuleAmino): _5.Module;
                    toAmino(message: _5.Module): _5.ModuleAmino;
                    fromAminoMsg(object: _5.ModuleAminoMsg): _5.Module;
                    toAminoMsg(message: _5.Module): _5.ModuleAminoMsg;
                    fromProtoMsg(message: _5.ModuleProtoMsg): _5.Module;
                    toProto(message: _5.Module): Uint8Array;
                    toProtoMsg(message: _5.Module): _5.ModuleProtoMsg;
                };
                ModuleAccountPermission: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _5.ModuleAccountPermission, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _5.ModuleAccountPermission;
                    fromPartial(object: {
                        account?: string;
                        permissions?: string[];
                    }): _5.ModuleAccountPermission;
                    fromAmino(object: _5.ModuleAccountPermissionAmino): _5.ModuleAccountPermission;
                    toAmino(message: _5.ModuleAccountPermission): _5.ModuleAccountPermissionAmino;
                    fromAminoMsg(object: _5.ModuleAccountPermissionAminoMsg): _5.ModuleAccountPermission;
                    toAminoMsg(message: _5.ModuleAccountPermission): _5.ModuleAccountPermissionAminoMsg;
                    fromProtoMsg(message: _5.ModuleAccountPermissionProtoMsg): _5.ModuleAccountPermission;
                    toProto(message: _5.ModuleAccountPermission): Uint8Array;
                    toProtoMsg(message: _5.ModuleAccountPermission): _5.ModuleAccountPermissionProtoMsg;
                };
            };
        }
        const v1beta1: {
            MsgClientImpl: typeof _229.MsgClientImpl;
            QueryClientImpl: typeof _211.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                accounts(request?: _8.QueryAccountsRequest): Promise<_8.QueryAccountsResponse>;
                account(request: _8.QueryAccountRequest): Promise<_8.QueryAccountResponse>;
                accountAddressByID(request: _8.QueryAccountAddressByIDRequest): Promise<_8.QueryAccountAddressByIDResponse>;
                params(request?: _8.QueryParamsRequest): Promise<_8.QueryParamsResponse>;
                moduleAccounts(request?: _8.QueryModuleAccountsRequest): Promise<_8.QueryModuleAccountsResponse>;
                moduleAccountByName(request: _8.QueryModuleAccountByNameRequest): Promise<_8.QueryModuleAccountByNameResponse>;
                bech32Prefix(request?: _8.Bech32PrefixRequest): Promise<_8.Bech32PrefixResponse>;
                addressBytesToString(request: _8.AddressBytesToStringRequest): Promise<_8.AddressBytesToStringResponse>;
                addressStringToBytes(request: _8.AddressStringToBytesRequest): Promise<_8.AddressStringToBytesResponse>;
                accountInfo(request: _8.QueryAccountInfoRequest): Promise<_8.QueryAccountInfoResponse>;
            };
            LCDQueryClient: typeof _194.LCDQueryClient;
            registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
            load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
            MessageComposer: {
                encoded: {
                    updateParams(value: _9.MsgUpdateParams): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                };
                withTypeUrl: {
                    updateParams(value: _9.MsgUpdateParams): {
                        typeUrl: string;
                        value: _9.MsgUpdateParams;
                    };
                };
                fromPartial: {
                    updateParams(value: _9.MsgUpdateParams): {
                        typeUrl: string;
                        value: _9.MsgUpdateParams;
                    };
                };
            };
            AminoConverter: {
                "/cosmos.auth.v1beta1.MsgUpdateParams": {
                    aminoType: string;
                    toAmino: (message: _9.MsgUpdateParams) => _9.MsgUpdateParamsAmino;
                    fromAmino: (object: _9.MsgUpdateParamsAmino) => _9.MsgUpdateParams;
                };
            };
            MsgUpdateParams: {
                typeUrl: string;
                aminoType: string;
                encode(message: _9.MsgUpdateParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _9.MsgUpdateParams;
                fromPartial(object: {
                    authority?: string;
                    params?: {
                        maxMemoCharacters?: bigint;
                        txSigLimit?: bigint;
                        txSizeCostPerByte?: bigint;
                        sigVerifyCostEd25519?: bigint;
                        sigVerifyCostSecp256k1?: bigint;
                    };
                }): _9.MsgUpdateParams;
                fromAmino(object: _9.MsgUpdateParamsAmino): _9.MsgUpdateParams;
                toAmino(message: _9.MsgUpdateParams): _9.MsgUpdateParamsAmino;
                fromAminoMsg(object: _9.MsgUpdateParamsAminoMsg): _9.MsgUpdateParams;
                toAminoMsg(message: _9.MsgUpdateParams): _9.MsgUpdateParamsAminoMsg;
                fromProtoMsg(message: _9.MsgUpdateParamsProtoMsg): _9.MsgUpdateParams;
                toProto(message: _9.MsgUpdateParams): Uint8Array;
                toProtoMsg(message: _9.MsgUpdateParams): _9.MsgUpdateParamsProtoMsg;
            };
            MsgUpdateParamsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _9.MsgUpdateParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _9.MsgUpdateParamsResponse;
                fromPartial(_: {}): _9.MsgUpdateParamsResponse;
                fromAmino(_: _9.MsgUpdateParamsResponseAmino): _9.MsgUpdateParamsResponse;
                toAmino(_: _9.MsgUpdateParamsResponse): _9.MsgUpdateParamsResponseAmino;
                fromAminoMsg(object: _9.MsgUpdateParamsResponseAminoMsg): _9.MsgUpdateParamsResponse;
                toAminoMsg(message: _9.MsgUpdateParamsResponse): _9.MsgUpdateParamsResponseAminoMsg;
                fromProtoMsg(message: _9.MsgUpdateParamsResponseProtoMsg): _9.MsgUpdateParamsResponse;
                toProto(message: _9.MsgUpdateParamsResponse): Uint8Array;
                toProtoMsg(message: _9.MsgUpdateParamsResponse): _9.MsgUpdateParamsResponseProtoMsg;
            };
            QueryAccountsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _8.QueryAccountsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _8.QueryAccountsRequest;
                fromPartial(object: {
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _8.QueryAccountsRequest;
                fromAmino(object: _8.QueryAccountsRequestAmino): _8.QueryAccountsRequest;
                toAmino(message: _8.QueryAccountsRequest): _8.QueryAccountsRequestAmino;
                fromAminoMsg(object: _8.QueryAccountsRequestAminoMsg): _8.QueryAccountsRequest;
                toAminoMsg(message: _8.QueryAccountsRequest): _8.QueryAccountsRequestAminoMsg;
                fromProtoMsg(message: _8.QueryAccountsRequestProtoMsg): _8.QueryAccountsRequest;
                toProto(message: _8.QueryAccountsRequest): Uint8Array;
                toProtoMsg(message: _8.QueryAccountsRequest): _8.QueryAccountsRequestProtoMsg;
            };
            QueryAccountsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _8.QueryAccountsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _8.QueryAccountsResponse;
                fromPartial(object: {
                    accounts?: {
                        $typeUrl?: string;
                        typeUrl?: string;
                        value?: Uint8Array;
                    }[] | ({
                        $typeUrl?: string;
                        typeUrl?: string;
                        value?: Uint8Array;
                    } | {
                        $typeUrl?: "/cosmos.auth.v1beta1.BaseAccount";
                        address?: string;
                        pubKey?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        accountNumber?: bigint;
                        sequence?: bigint;
                    })[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _8.QueryAccountsResponse;
                fromAmino(object: _8.QueryAccountsResponseAmino): _8.QueryAccountsResponse;
                toAmino(message: _8.QueryAccountsResponse): _8.QueryAccountsResponseAmino;
                fromAminoMsg(object: _8.QueryAccountsResponseAminoMsg): _8.QueryAccountsResponse;
                toAminoMsg(message: _8.QueryAccountsResponse): _8.QueryAccountsResponseAminoMsg;
                fromProtoMsg(message: _8.QueryAccountsResponseProtoMsg): _8.QueryAccountsResponse;
                toProto(message: _8.QueryAccountsResponse): Uint8Array;
                toProtoMsg(message: _8.QueryAccountsResponse): _8.QueryAccountsResponseProtoMsg;
            };
            QueryAccountRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _8.QueryAccountRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _8.QueryAccountRequest;
                fromPartial(object: {
                    address?: string;
                }): _8.QueryAccountRequest;
                fromAmino(object: _8.QueryAccountRequestAmino): _8.QueryAccountRequest;
                toAmino(message: _8.QueryAccountRequest): _8.QueryAccountRequestAmino;
                fromAminoMsg(object: _8.QueryAccountRequestAminoMsg): _8.QueryAccountRequest;
                toAminoMsg(message: _8.QueryAccountRequest): _8.QueryAccountRequestAminoMsg;
                fromProtoMsg(message: _8.QueryAccountRequestProtoMsg): _8.QueryAccountRequest;
                toProto(message: _8.QueryAccountRequest): Uint8Array;
                toProtoMsg(message: _8.QueryAccountRequest): _8.QueryAccountRequestProtoMsg;
            };
            QueryAccountResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _8.QueryAccountResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _8.QueryAccountResponse;
                fromPartial(object: {
                    account?: {
                        $typeUrl?: string;
                        typeUrl?: string;
                        value?: Uint8Array;
                    } | {
                        $typeUrl?: "/cosmos.auth.v1beta1.BaseAccount";
                        address?: string;
                        pubKey?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        accountNumber?: bigint;
                        sequence?: bigint;
                    };
                }): _8.QueryAccountResponse;
                fromAmino(object: _8.QueryAccountResponseAmino): _8.QueryAccountResponse;
                toAmino(message: _8.QueryAccountResponse): _8.QueryAccountResponseAmino;
                fromAminoMsg(object: _8.QueryAccountResponseAminoMsg): _8.QueryAccountResponse;
                toAminoMsg(message: _8.QueryAccountResponse): _8.QueryAccountResponseAminoMsg;
                fromProtoMsg(message: _8.QueryAccountResponseProtoMsg): _8.QueryAccountResponse;
                toProto(message: _8.QueryAccountResponse): Uint8Array;
                toProtoMsg(message: _8.QueryAccountResponse): _8.QueryAccountResponseProtoMsg;
            };
            QueryParamsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(_: _8.QueryParamsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _8.QueryParamsRequest;
                fromPartial(_: {}): _8.QueryParamsRequest;
                fromAmino(_: _8.QueryParamsRequestAmino): _8.QueryParamsRequest;
                toAmino(_: _8.QueryParamsRequest): _8.QueryParamsRequestAmino;
                fromAminoMsg(object: _8.QueryParamsRequestAminoMsg): _8.QueryParamsRequest;
                toAminoMsg(message: _8.QueryParamsRequest): _8.QueryParamsRequestAminoMsg;
                fromProtoMsg(message: _8.QueryParamsRequestProtoMsg): _8.QueryParamsRequest;
                toProto(message: _8.QueryParamsRequest): Uint8Array;
                toProtoMsg(message: _8.QueryParamsRequest): _8.QueryParamsRequestProtoMsg;
            };
            QueryParamsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _8.QueryParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _8.QueryParamsResponse;
                fromPartial(object: {
                    params?: {
                        maxMemoCharacters?: bigint;
                        txSigLimit?: bigint;
                        txSizeCostPerByte?: bigint;
                        sigVerifyCostEd25519?: bigint;
                        sigVerifyCostSecp256k1?: bigint;
                    };
                }): _8.QueryParamsResponse;
                fromAmino(object: _8.QueryParamsResponseAmino): _8.QueryParamsResponse;
                toAmino(message: _8.QueryParamsResponse): _8.QueryParamsResponseAmino;
                fromAminoMsg(object: _8.QueryParamsResponseAminoMsg): _8.QueryParamsResponse;
                toAminoMsg(message: _8.QueryParamsResponse): _8.QueryParamsResponseAminoMsg;
                fromProtoMsg(message: _8.QueryParamsResponseProtoMsg): _8.QueryParamsResponse;
                toProto(message: _8.QueryParamsResponse): Uint8Array;
                toProtoMsg(message: _8.QueryParamsResponse): _8.QueryParamsResponseProtoMsg;
            };
            QueryModuleAccountsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(_: _8.QueryModuleAccountsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _8.QueryModuleAccountsRequest;
                fromPartial(_: {}): _8.QueryModuleAccountsRequest;
                fromAmino(_: _8.QueryModuleAccountsRequestAmino): _8.QueryModuleAccountsRequest;
                toAmino(_: _8.QueryModuleAccountsRequest): _8.QueryModuleAccountsRequestAmino;
                fromAminoMsg(object: _8.QueryModuleAccountsRequestAminoMsg): _8.QueryModuleAccountsRequest;
                toAminoMsg(message: _8.QueryModuleAccountsRequest): _8.QueryModuleAccountsRequestAminoMsg;
                fromProtoMsg(message: _8.QueryModuleAccountsRequestProtoMsg): _8.QueryModuleAccountsRequest;
                toProto(message: _8.QueryModuleAccountsRequest): Uint8Array;
                toProtoMsg(message: _8.QueryModuleAccountsRequest): _8.QueryModuleAccountsRequestProtoMsg;
            };
            QueryModuleAccountsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _8.QueryModuleAccountsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _8.QueryModuleAccountsResponse;
                fromPartial(object: {
                    accounts?: {
                        $typeUrl?: string;
                        typeUrl?: string;
                        value?: Uint8Array;
                    }[] | ({
                        $typeUrl?: string;
                        typeUrl?: string;
                        value?: Uint8Array;
                    } | {
                        $typeUrl?: "/cosmos.auth.v1beta1.ModuleAccount";
                        baseAccount?: {
                            $typeUrl?: "/cosmos.auth.v1beta1.BaseAccount";
                            address?: string;
                            pubKey?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            };
                            accountNumber?: bigint;
                            sequence?: bigint;
                        };
                        name?: string;
                        permissions?: string[];
                    })[];
                }): _8.QueryModuleAccountsResponse;
                fromAmino(object: _8.QueryModuleAccountsResponseAmino): _8.QueryModuleAccountsResponse;
                toAmino(message: _8.QueryModuleAccountsResponse): _8.QueryModuleAccountsResponseAmino;
                fromAminoMsg(object: _8.QueryModuleAccountsResponseAminoMsg): _8.QueryModuleAccountsResponse;
                toAminoMsg(message: _8.QueryModuleAccountsResponse): _8.QueryModuleAccountsResponseAminoMsg;
                fromProtoMsg(message: _8.QueryModuleAccountsResponseProtoMsg): _8.QueryModuleAccountsResponse;
                toProto(message: _8.QueryModuleAccountsResponse): Uint8Array;
                toProtoMsg(message: _8.QueryModuleAccountsResponse): _8.QueryModuleAccountsResponseProtoMsg;
            };
            QueryModuleAccountByNameRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _8.QueryModuleAccountByNameRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _8.QueryModuleAccountByNameRequest;
                fromPartial(object: {
                    name?: string;
                }): _8.QueryModuleAccountByNameRequest;
                fromAmino(object: _8.QueryModuleAccountByNameRequestAmino): _8.QueryModuleAccountByNameRequest;
                toAmino(message: _8.QueryModuleAccountByNameRequest): _8.QueryModuleAccountByNameRequestAmino;
                fromAminoMsg(object: _8.QueryModuleAccountByNameRequestAminoMsg): _8.QueryModuleAccountByNameRequest;
                toAminoMsg(message: _8.QueryModuleAccountByNameRequest): _8.QueryModuleAccountByNameRequestAminoMsg;
                fromProtoMsg(message: _8.QueryModuleAccountByNameRequestProtoMsg): _8.QueryModuleAccountByNameRequest;
                toProto(message: _8.QueryModuleAccountByNameRequest): Uint8Array;
                toProtoMsg(message: _8.QueryModuleAccountByNameRequest): _8.QueryModuleAccountByNameRequestProtoMsg;
            };
            QueryModuleAccountByNameResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _8.QueryModuleAccountByNameResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _8.QueryModuleAccountByNameResponse;
                fromPartial(object: {
                    account?: {
                        $typeUrl?: string;
                        typeUrl?: string;
                        value?: Uint8Array;
                    } | {
                        $typeUrl?: "/cosmos.auth.v1beta1.ModuleAccount";
                        baseAccount?: {
                            $typeUrl?: "/cosmos.auth.v1beta1.BaseAccount";
                            address?: string;
                            pubKey?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            };
                            accountNumber?: bigint;
                            sequence?: bigint;
                        };
                        name?: string;
                        permissions?: string[];
                    };
                }): _8.QueryModuleAccountByNameResponse;
                fromAmino(object: _8.QueryModuleAccountByNameResponseAmino): _8.QueryModuleAccountByNameResponse;
                toAmino(message: _8.QueryModuleAccountByNameResponse): _8.QueryModuleAccountByNameResponseAmino;
                fromAminoMsg(object: _8.QueryModuleAccountByNameResponseAminoMsg): _8.QueryModuleAccountByNameResponse;
                toAminoMsg(message: _8.QueryModuleAccountByNameResponse): _8.QueryModuleAccountByNameResponseAminoMsg;
                fromProtoMsg(message: _8.QueryModuleAccountByNameResponseProtoMsg): _8.QueryModuleAccountByNameResponse;
                toProto(message: _8.QueryModuleAccountByNameResponse): Uint8Array;
                toProtoMsg(message: _8.QueryModuleAccountByNameResponse): _8.QueryModuleAccountByNameResponseProtoMsg;
            };
            Bech32PrefixRequest: {
                typeUrl: string;
                aminoType: string;
                encode(_: _8.Bech32PrefixRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _8.Bech32PrefixRequest;
                fromPartial(_: {}): _8.Bech32PrefixRequest;
                fromAmino(_: _8.Bech32PrefixRequestAmino): _8.Bech32PrefixRequest;
                toAmino(_: _8.Bech32PrefixRequest): _8.Bech32PrefixRequestAmino;
                fromAminoMsg(object: _8.Bech32PrefixRequestAminoMsg): _8.Bech32PrefixRequest;
                toAminoMsg(message: _8.Bech32PrefixRequest): _8.Bech32PrefixRequestAminoMsg;
                fromProtoMsg(message: _8.Bech32PrefixRequestProtoMsg): _8.Bech32PrefixRequest;
                toProto(message: _8.Bech32PrefixRequest): Uint8Array;
                toProtoMsg(message: _8.Bech32PrefixRequest): _8.Bech32PrefixRequestProtoMsg;
            };
            Bech32PrefixResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _8.Bech32PrefixResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _8.Bech32PrefixResponse;
                fromPartial(object: {
                    bech32Prefix?: string;
                }): _8.Bech32PrefixResponse;
                fromAmino(object: _8.Bech32PrefixResponseAmino): _8.Bech32PrefixResponse;
                toAmino(message: _8.Bech32PrefixResponse): _8.Bech32PrefixResponseAmino;
                fromAminoMsg(object: _8.Bech32PrefixResponseAminoMsg): _8.Bech32PrefixResponse;
                toAminoMsg(message: _8.Bech32PrefixResponse): _8.Bech32PrefixResponseAminoMsg;
                fromProtoMsg(message: _8.Bech32PrefixResponseProtoMsg): _8.Bech32PrefixResponse;
                toProto(message: _8.Bech32PrefixResponse): Uint8Array;
                toProtoMsg(message: _8.Bech32PrefixResponse): _8.Bech32PrefixResponseProtoMsg;
            };
            AddressBytesToStringRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _8.AddressBytesToStringRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _8.AddressBytesToStringRequest;
                fromPartial(object: {
                    addressBytes?: Uint8Array;
                }): _8.AddressBytesToStringRequest;
                fromAmino(object: _8.AddressBytesToStringRequestAmino): _8.AddressBytesToStringRequest;
                toAmino(message: _8.AddressBytesToStringRequest): _8.AddressBytesToStringRequestAmino;
                fromAminoMsg(object: _8.AddressBytesToStringRequestAminoMsg): _8.AddressBytesToStringRequest;
                toAminoMsg(message: _8.AddressBytesToStringRequest): _8.AddressBytesToStringRequestAminoMsg;
                fromProtoMsg(message: _8.AddressBytesToStringRequestProtoMsg): _8.AddressBytesToStringRequest;
                toProto(message: _8.AddressBytesToStringRequest): Uint8Array;
                toProtoMsg(message: _8.AddressBytesToStringRequest): _8.AddressBytesToStringRequestProtoMsg;
            };
            AddressBytesToStringResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _8.AddressBytesToStringResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _8.AddressBytesToStringResponse;
                fromPartial(object: {
                    addressString?: string;
                }): _8.AddressBytesToStringResponse;
                fromAmino(object: _8.AddressBytesToStringResponseAmino): _8.AddressBytesToStringResponse;
                toAmino(message: _8.AddressBytesToStringResponse): _8.AddressBytesToStringResponseAmino;
                fromAminoMsg(object: _8.AddressBytesToStringResponseAminoMsg): _8.AddressBytesToStringResponse;
                toAminoMsg(message: _8.AddressBytesToStringResponse): _8.AddressBytesToStringResponseAminoMsg;
                fromProtoMsg(message: _8.AddressBytesToStringResponseProtoMsg): _8.AddressBytesToStringResponse;
                toProto(message: _8.AddressBytesToStringResponse): Uint8Array;
                toProtoMsg(message: _8.AddressBytesToStringResponse): _8.AddressBytesToStringResponseProtoMsg;
            };
            AddressStringToBytesRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _8.AddressStringToBytesRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _8.AddressStringToBytesRequest;
                fromPartial(object: {
                    addressString?: string;
                }): _8.AddressStringToBytesRequest;
                fromAmino(object: _8.AddressStringToBytesRequestAmino): _8.AddressStringToBytesRequest;
                toAmino(message: _8.AddressStringToBytesRequest): _8.AddressStringToBytesRequestAmino;
                fromAminoMsg(object: _8.AddressStringToBytesRequestAminoMsg): _8.AddressStringToBytesRequest;
                toAminoMsg(message: _8.AddressStringToBytesRequest): _8.AddressStringToBytesRequestAminoMsg;
                fromProtoMsg(message: _8.AddressStringToBytesRequestProtoMsg): _8.AddressStringToBytesRequest;
                toProto(message: _8.AddressStringToBytesRequest): Uint8Array;
                toProtoMsg(message: _8.AddressStringToBytesRequest): _8.AddressStringToBytesRequestProtoMsg;
            };
            AddressStringToBytesResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _8.AddressStringToBytesResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _8.AddressStringToBytesResponse;
                fromPartial(object: {
                    addressBytes?: Uint8Array;
                }): _8.AddressStringToBytesResponse;
                fromAmino(object: _8.AddressStringToBytesResponseAmino): _8.AddressStringToBytesResponse;
                toAmino(message: _8.AddressStringToBytesResponse): _8.AddressStringToBytesResponseAmino;
                fromAminoMsg(object: _8.AddressStringToBytesResponseAminoMsg): _8.AddressStringToBytesResponse;
                toAminoMsg(message: _8.AddressStringToBytesResponse): _8.AddressStringToBytesResponseAminoMsg;
                fromProtoMsg(message: _8.AddressStringToBytesResponseProtoMsg): _8.AddressStringToBytesResponse;
                toProto(message: _8.AddressStringToBytesResponse): Uint8Array;
                toProtoMsg(message: _8.AddressStringToBytesResponse): _8.AddressStringToBytesResponseProtoMsg;
            };
            QueryAccountAddressByIDRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _8.QueryAccountAddressByIDRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _8.QueryAccountAddressByIDRequest;
                fromPartial(object: {
                    id?: bigint;
                    accountId?: bigint;
                }): _8.QueryAccountAddressByIDRequest;
                fromAmino(object: _8.QueryAccountAddressByIDRequestAmino): _8.QueryAccountAddressByIDRequest;
                toAmino(message: _8.QueryAccountAddressByIDRequest): _8.QueryAccountAddressByIDRequestAmino;
                fromAminoMsg(object: _8.QueryAccountAddressByIDRequestAminoMsg): _8.QueryAccountAddressByIDRequest;
                toAminoMsg(message: _8.QueryAccountAddressByIDRequest): _8.QueryAccountAddressByIDRequestAminoMsg;
                fromProtoMsg(message: _8.QueryAccountAddressByIDRequestProtoMsg): _8.QueryAccountAddressByIDRequest;
                toProto(message: _8.QueryAccountAddressByIDRequest): Uint8Array;
                toProtoMsg(message: _8.QueryAccountAddressByIDRequest): _8.QueryAccountAddressByIDRequestProtoMsg;
            };
            QueryAccountAddressByIDResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _8.QueryAccountAddressByIDResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _8.QueryAccountAddressByIDResponse;
                fromPartial(object: {
                    accountAddress?: string;
                }): _8.QueryAccountAddressByIDResponse;
                fromAmino(object: _8.QueryAccountAddressByIDResponseAmino): _8.QueryAccountAddressByIDResponse;
                toAmino(message: _8.QueryAccountAddressByIDResponse): _8.QueryAccountAddressByIDResponseAmino;
                fromAminoMsg(object: _8.QueryAccountAddressByIDResponseAminoMsg): _8.QueryAccountAddressByIDResponse;
                toAminoMsg(message: _8.QueryAccountAddressByIDResponse): _8.QueryAccountAddressByIDResponseAminoMsg;
                fromProtoMsg(message: _8.QueryAccountAddressByIDResponseProtoMsg): _8.QueryAccountAddressByIDResponse;
                toProto(message: _8.QueryAccountAddressByIDResponse): Uint8Array;
                toProtoMsg(message: _8.QueryAccountAddressByIDResponse): _8.QueryAccountAddressByIDResponseProtoMsg;
            };
            QueryAccountInfoRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _8.QueryAccountInfoRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _8.QueryAccountInfoRequest;
                fromPartial(object: {
                    address?: string;
                }): _8.QueryAccountInfoRequest;
                fromAmino(object: _8.QueryAccountInfoRequestAmino): _8.QueryAccountInfoRequest;
                toAmino(message: _8.QueryAccountInfoRequest): _8.QueryAccountInfoRequestAmino;
                fromAminoMsg(object: _8.QueryAccountInfoRequestAminoMsg): _8.QueryAccountInfoRequest;
                toAminoMsg(message: _8.QueryAccountInfoRequest): _8.QueryAccountInfoRequestAminoMsg;
                fromProtoMsg(message: _8.QueryAccountInfoRequestProtoMsg): _8.QueryAccountInfoRequest;
                toProto(message: _8.QueryAccountInfoRequest): Uint8Array;
                toProtoMsg(message: _8.QueryAccountInfoRequest): _8.QueryAccountInfoRequestProtoMsg;
            };
            QueryAccountInfoResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _8.QueryAccountInfoResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _8.QueryAccountInfoResponse;
                fromPartial(object: {
                    info?: {
                        $typeUrl?: "/cosmos.auth.v1beta1.BaseAccount";
                        address?: string;
                        pubKey?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        accountNumber?: bigint;
                        sequence?: bigint;
                    };
                }): _8.QueryAccountInfoResponse;
                fromAmino(object: _8.QueryAccountInfoResponseAmino): _8.QueryAccountInfoResponse;
                toAmino(message: _8.QueryAccountInfoResponse): _8.QueryAccountInfoResponseAmino;
                fromAminoMsg(object: _8.QueryAccountInfoResponseAminoMsg): _8.QueryAccountInfoResponse;
                toAminoMsg(message: _8.QueryAccountInfoResponse): _8.QueryAccountInfoResponseAminoMsg;
                fromProtoMsg(message: _8.QueryAccountInfoResponseProtoMsg): _8.QueryAccountInfoResponse;
                toProto(message: _8.QueryAccountInfoResponse): Uint8Array;
                toProtoMsg(message: _8.QueryAccountInfoResponse): _8.QueryAccountInfoResponseProtoMsg;
            };
            Cosmos_authv1beta1AccountI_InterfaceDecoder: (input: Uint8Array | import("..").BinaryReader) => import("../google/protobuf/any").Any | _6.BaseAccount;
            Cosmos_authv1beta1AccountI_FromAmino: (content: import("../google/protobuf/any").AnyAmino) => import("../google/protobuf/any").Any;
            Cosmos_authv1beta1AccountI_ToAmino: (content: import("../google/protobuf/any").Any) => import("../google/protobuf/any").AnyAmino;
            Cosmos_authv1beta1ModuleAccountI_InterfaceDecoder: (input: Uint8Array | import("..").BinaryReader) => import("../google/protobuf/any").Any | _6.ModuleAccount;
            Cosmos_authv1beta1ModuleAccountI_FromAmino: (content: import("../google/protobuf/any").AnyAmino) => import("../google/protobuf/any").Any;
            Cosmos_authv1beta1ModuleAccountI_ToAmino: (content: import("../google/protobuf/any").Any) => import("../google/protobuf/any").AnyAmino;
            GenesisState: {
                typeUrl: string;
                aminoType: string;
                encode(message: _7.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _7.GenesisState;
                fromPartial(object: {
                    params?: {
                        maxMemoCharacters?: bigint;
                        txSigLimit?: bigint;
                        txSizeCostPerByte?: bigint;
                        sigVerifyCostEd25519?: bigint;
                        sigVerifyCostSecp256k1?: bigint;
                    };
                    accounts?: {
                        $typeUrl?: string;
                        typeUrl?: string;
                        value?: Uint8Array;
                    }[];
                }): _7.GenesisState;
                fromAmino(object: _7.GenesisStateAmino): _7.GenesisState;
                toAmino(message: _7.GenesisState): _7.GenesisStateAmino;
                fromAminoMsg(object: _7.GenesisStateAminoMsg): _7.GenesisState;
                toAminoMsg(message: _7.GenesisState): _7.GenesisStateAminoMsg;
                fromProtoMsg(message: _7.GenesisStateProtoMsg): _7.GenesisState;
                toProto(message: _7.GenesisState): Uint8Array;
                toProtoMsg(message: _7.GenesisState): _7.GenesisStateProtoMsg;
            };
            BaseAccount: {
                typeUrl: string;
                aminoType: string;
                encode(message: _6.BaseAccount, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _6.BaseAccount;
                fromPartial(object: {
                    $typeUrl?: "/cosmos.auth.v1beta1.BaseAccount";
                    address?: string;
                    pubKey?: {
                        $typeUrl?: string;
                        typeUrl?: string;
                        value?: Uint8Array;
                    };
                    accountNumber?: bigint;
                    sequence?: bigint;
                }): _6.BaseAccount;
                fromAmino(object: _6.BaseAccountAmino): _6.BaseAccount;
                toAmino(message: _6.BaseAccount): _6.BaseAccountAmino;
                fromAminoMsg(object: _6.BaseAccountAminoMsg): _6.BaseAccount;
                toAminoMsg(message: _6.BaseAccount): _6.BaseAccountAminoMsg;
                fromProtoMsg(message: _6.BaseAccountProtoMsg): _6.BaseAccount;
                toProto(message: _6.BaseAccount): Uint8Array;
                toProtoMsg(message: _6.BaseAccount): _6.BaseAccountProtoMsg;
            };
            ModuleAccount: {
                typeUrl: string;
                aminoType: string;
                encode(message: _6.ModuleAccount, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _6.ModuleAccount;
                fromPartial(object: {
                    $typeUrl?: "/cosmos.auth.v1beta1.ModuleAccount";
                    baseAccount?: {
                        $typeUrl?: "/cosmos.auth.v1beta1.BaseAccount";
                        address?: string;
                        pubKey?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        accountNumber?: bigint;
                        sequence?: bigint;
                    };
                    name?: string;
                    permissions?: string[];
                }): _6.ModuleAccount;
                fromAmino(object: _6.ModuleAccountAmino): _6.ModuleAccount;
                toAmino(message: _6.ModuleAccount): _6.ModuleAccountAmino;
                fromAminoMsg(object: _6.ModuleAccountAminoMsg): _6.ModuleAccount;
                toAminoMsg(message: _6.ModuleAccount): _6.ModuleAccountAminoMsg;
                fromProtoMsg(message: _6.ModuleAccountProtoMsg): _6.ModuleAccount;
                toProto(message: _6.ModuleAccount): Uint8Array;
                toProtoMsg(message: _6.ModuleAccount): _6.ModuleAccountProtoMsg;
            };
            ModuleCredential: {
                typeUrl: string;
                aminoType: string;
                encode(message: _6.ModuleCredential, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _6.ModuleCredential;
                fromPartial(object: {
                    moduleName?: string;
                    derivationKeys?: Uint8Array[];
                }): _6.ModuleCredential;
                fromAmino(object: _6.ModuleCredentialAmino): _6.ModuleCredential;
                toAmino(message: _6.ModuleCredential): _6.ModuleCredentialAmino;
                fromAminoMsg(object: _6.ModuleCredentialAminoMsg): _6.ModuleCredential;
                toAminoMsg(message: _6.ModuleCredential): _6.ModuleCredentialAminoMsg;
                fromProtoMsg(message: _6.ModuleCredentialProtoMsg): _6.ModuleCredential;
                toProto(message: _6.ModuleCredential): Uint8Array;
                toProtoMsg(message: _6.ModuleCredential): _6.ModuleCredentialProtoMsg;
            };
            Params: {
                typeUrl: string;
                aminoType: string;
                encode(message: _6.Params, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _6.Params;
                fromPartial(object: {
                    maxMemoCharacters?: bigint;
                    txSigLimit?: bigint;
                    txSizeCostPerByte?: bigint;
                    sigVerifyCostEd25519?: bigint;
                    sigVerifyCostSecp256k1?: bigint;
                }): _6.Params;
                fromAmino(object: _6.ParamsAmino): _6.Params;
                toAmino(message: _6.Params): _6.ParamsAmino;
                fromAminoMsg(object: _6.ParamsAminoMsg): _6.Params;
                toAminoMsg(message: _6.Params): _6.ParamsAminoMsg;
                fromProtoMsg(message: _6.ParamsProtoMsg): _6.Params;
                toProto(message: _6.Params): Uint8Array;
                toProtoMsg(message: _6.Params): _6.ParamsProtoMsg;
            };
        };
    }
    namespace authz {
        namespace module {
            const v1: {
                Module: {
                    typeUrl: string;
                    aminoType: string;
                    encode(_: _10.Module, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _10.Module;
                    fromPartial(_: {}): _10.Module;
                    fromAmino(_: _10.ModuleAmino): _10.Module;
                    toAmino(_: _10.Module): _10.ModuleAmino;
                    fromAminoMsg(object: _10.ModuleAminoMsg): _10.Module;
                    toAminoMsg(message: _10.Module): _10.ModuleAminoMsg;
                    fromProtoMsg(message: _10.ModuleProtoMsg): _10.Module;
                    toProto(message: _10.Module): Uint8Array;
                    toProtoMsg(message: _10.Module): _10.ModuleProtoMsg;
                };
            };
        }
        const v1beta1: {
            MsgClientImpl: typeof _230.MsgClientImpl;
            QueryClientImpl: typeof _212.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                grants(request: _14.QueryGrantsRequest): Promise<_14.QueryGrantsResponse>;
                granterGrants(request: _14.QueryGranterGrantsRequest): Promise<_14.QueryGranterGrantsResponse>;
                granteeGrants(request: _14.QueryGranteeGrantsRequest): Promise<_14.QueryGranteeGrantsResponse>;
            };
            LCDQueryClient: typeof _195.LCDQueryClient;
            MsgGrant: {
                typeUrl: string;
                aminoType: string;
                encode(message: _15.MsgGrant, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _15.MsgGrant;
                fromPartial(object: {
                    granter?: string;
                    grantee?: string;
                    grant?: {
                        authorization?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        } | {
                            $typeUrl?: "/cosmos.bank.v1beta1.SendAuthorization";
                            spendLimit?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            allowList?: string[];
                        } | {
                            $typeUrl?: "/cosmos.staking.v1beta1.StakeAuthorization";
                            maxTokens?: {
                                denom?: string;
                                amount?: string;
                            };
                            allowList?: {
                                address?: string[];
                            };
                            denyList?: {
                                address?: string[];
                            };
                            authorizationType?: _84.AuthorizationType;
                        } | {
                            $typeUrl?: "/ibc.applications.transfer.v1.TransferAuthorization";
                            allocations?: {
                                sourcePort?: string;
                                sourceChannel?: string;
                                spendLimit?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                allowList?: string[];
                            }[];
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.StoreCodeAuthorization";
                            grants?: {
                                codeHash?: Uint8Array;
                                instantiatePermission?: {
                                    permission?: import("../cosmwasm/wasm/v1/types").AccessType;
                                    addresses?: string[];
                                };
                            }[];
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.ContractExecutionAuthorization";
                            grants?: {
                                contract?: string;
                                limit?: {
                                    $typeUrl?: string;
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.MaxCallsLimit";
                                    remaining?: bigint;
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.MaxFundsLimit";
                                    amounts?: {
                                        denom?: string;
                                        amount?: string;
                                    }[];
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.CombinedLimit";
                                    callsRemaining?: bigint;
                                    amounts?: {
                                        denom?: string;
                                        amount?: string;
                                    }[];
                                };
                                filter?: {
                                    $typeUrl?: string;
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.AllowAllMessagesFilter";
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.AcceptedMessageKeysFilter";
                                    keys?: string[];
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.AcceptedMessagesFilter";
                                    messages?: Uint8Array[];
                                };
                            }[];
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.ContractMigrationAuthorization";
                            grants?: {
                                contract?: string;
                                limit?: {
                                    $typeUrl?: string;
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.MaxCallsLimit";
                                    remaining?: bigint;
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.MaxFundsLimit";
                                    amounts?: {
                                        denom?: string;
                                        amount?: string;
                                    }[];
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.CombinedLimit";
                                    callsRemaining?: bigint;
                                    amounts?: {
                                        denom?: string;
                                        amount?: string;
                                    }[];
                                };
                                filter?: {
                                    $typeUrl?: string;
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.AllowAllMessagesFilter";
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.AcceptedMessageKeysFilter";
                                    keys?: string[];
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.AcceptedMessagesFilter";
                                    messages?: Uint8Array[];
                                };
                            }[];
                        } | {
                            $typeUrl?: "/cosmos.authz.v1beta1.GenericAuthorization";
                            msg?: string;
                        };
                        expiration?: Date;
                    };
                }): _15.MsgGrant;
                fromAmino(object: _15.MsgGrantAmino): _15.MsgGrant;
                toAmino(message: _15.MsgGrant): _15.MsgGrantAmino;
                fromAminoMsg(object: _15.MsgGrantAminoMsg): _15.MsgGrant;
                toAminoMsg(message: _15.MsgGrant): _15.MsgGrantAminoMsg;
                fromProtoMsg(message: _15.MsgGrantProtoMsg): _15.MsgGrant;
                toProto(message: _15.MsgGrant): Uint8Array;
                toProtoMsg(message: _15.MsgGrant): _15.MsgGrantProtoMsg;
            };
            MsgGrantResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _15.MsgGrantResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _15.MsgGrantResponse;
                fromPartial(_: {}): _15.MsgGrantResponse;
                fromAmino(_: _15.MsgGrantResponseAmino): _15.MsgGrantResponse;
                toAmino(_: _15.MsgGrantResponse): _15.MsgGrantResponseAmino;
                fromAminoMsg(object: _15.MsgGrantResponseAminoMsg): _15.MsgGrantResponse;
                toAminoMsg(message: _15.MsgGrantResponse): _15.MsgGrantResponseAminoMsg;
                fromProtoMsg(message: _15.MsgGrantResponseProtoMsg): _15.MsgGrantResponse;
                toProto(message: _15.MsgGrantResponse): Uint8Array;
                toProtoMsg(message: _15.MsgGrantResponse): _15.MsgGrantResponseProtoMsg;
            };
            MsgExec: {
                typeUrl: string;
                aminoType: string;
                encode(message: _15.MsgExec, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _15.MsgExec;
                fromPartial(object: {
                    grantee?: string;
                    msgs?: {
                        $typeUrl?: string;
                        typeUrl?: string;
                        value?: Uint8Array;
                    }[];
                }): _15.MsgExec;
                fromAmino(object: _15.MsgExecAmino): _15.MsgExec;
                toAmino(message: _15.MsgExec): _15.MsgExecAmino;
                fromAminoMsg(object: _15.MsgExecAminoMsg): _15.MsgExec;
                toAminoMsg(message: _15.MsgExec): _15.MsgExecAminoMsg;
                fromProtoMsg(message: _15.MsgExecProtoMsg): _15.MsgExec;
                toProto(message: _15.MsgExec): Uint8Array;
                toProtoMsg(message: _15.MsgExec): _15.MsgExecProtoMsg;
            };
            MsgExecResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _15.MsgExecResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _15.MsgExecResponse;
                fromPartial(object: {
                    results?: Uint8Array[];
                }): _15.MsgExecResponse;
                fromAmino(object: _15.MsgExecResponseAmino): _15.MsgExecResponse;
                toAmino(message: _15.MsgExecResponse): _15.MsgExecResponseAmino;
                fromAminoMsg(object: _15.MsgExecResponseAminoMsg): _15.MsgExecResponse;
                toAminoMsg(message: _15.MsgExecResponse): _15.MsgExecResponseAminoMsg;
                fromProtoMsg(message: _15.MsgExecResponseProtoMsg): _15.MsgExecResponse;
                toProto(message: _15.MsgExecResponse): Uint8Array;
                toProtoMsg(message: _15.MsgExecResponse): _15.MsgExecResponseProtoMsg;
            };
            MsgRevoke: {
                typeUrl: string;
                aminoType: string;
                encode(message: _15.MsgRevoke, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _15.MsgRevoke;
                fromPartial(object: {
                    granter?: string;
                    grantee?: string;
                    msgTypeUrl?: string;
                }): _15.MsgRevoke;
                fromAmino(object: _15.MsgRevokeAmino): _15.MsgRevoke;
                toAmino(message: _15.MsgRevoke): _15.MsgRevokeAmino;
                fromAminoMsg(object: _15.MsgRevokeAminoMsg): _15.MsgRevoke;
                toAminoMsg(message: _15.MsgRevoke): _15.MsgRevokeAminoMsg;
                fromProtoMsg(message: _15.MsgRevokeProtoMsg): _15.MsgRevoke;
                toProto(message: _15.MsgRevoke): Uint8Array;
                toProtoMsg(message: _15.MsgRevoke): _15.MsgRevokeProtoMsg;
            };
            MsgRevokeResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _15.MsgRevokeResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _15.MsgRevokeResponse;
                fromPartial(_: {}): _15.MsgRevokeResponse;
                fromAmino(_: _15.MsgRevokeResponseAmino): _15.MsgRevokeResponse;
                toAmino(_: _15.MsgRevokeResponse): _15.MsgRevokeResponseAmino;
                fromAminoMsg(object: _15.MsgRevokeResponseAminoMsg): _15.MsgRevokeResponse;
                toAminoMsg(message: _15.MsgRevokeResponse): _15.MsgRevokeResponseAminoMsg;
                fromProtoMsg(message: _15.MsgRevokeResponseProtoMsg): _15.MsgRevokeResponse;
                toProto(message: _15.MsgRevokeResponse): Uint8Array;
                toProtoMsg(message: _15.MsgRevokeResponse): _15.MsgRevokeResponseProtoMsg;
            };
            Cosmos_basev1beta1Msg_InterfaceDecoder: (input: Uint8Array | import("..").BinaryReader) => import("../google/protobuf/any").Any;
            Cosmos_basev1beta1Msg_FromAmino: (content: import("../google/protobuf/any").AnyAmino) => import("../google/protobuf/any").Any;
            Cosmos_basev1beta1Msg_ToAmino: (content: import("../google/protobuf/any").Any) => import("../google/protobuf/any").AnyAmino;
            QueryGrantsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _14.QueryGrantsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _14.QueryGrantsRequest;
                fromPartial(object: {
                    granter?: string;
                    grantee?: string;
                    msgTypeUrl?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _14.QueryGrantsRequest;
                fromAmino(object: _14.QueryGrantsRequestAmino): _14.QueryGrantsRequest;
                toAmino(message: _14.QueryGrantsRequest): _14.QueryGrantsRequestAmino;
                fromAminoMsg(object: _14.QueryGrantsRequestAminoMsg): _14.QueryGrantsRequest;
                toAminoMsg(message: _14.QueryGrantsRequest): _14.QueryGrantsRequestAminoMsg;
                fromProtoMsg(message: _14.QueryGrantsRequestProtoMsg): _14.QueryGrantsRequest;
                toProto(message: _14.QueryGrantsRequest): Uint8Array;
                toProtoMsg(message: _14.QueryGrantsRequest): _14.QueryGrantsRequestProtoMsg;
            };
            QueryGrantsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _14.QueryGrantsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _14.QueryGrantsResponse;
                fromPartial(object: {
                    grants?: {
                        authorization?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        } | {
                            $typeUrl?: "/cosmos.bank.v1beta1.SendAuthorization";
                            spendLimit?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            allowList?: string[];
                        } | {
                            $typeUrl?: "/cosmos.staking.v1beta1.StakeAuthorization";
                            maxTokens?: {
                                denom?: string;
                                amount?: string;
                            };
                            allowList?: {
                                address?: string[];
                            };
                            denyList?: {
                                address?: string[];
                            };
                            authorizationType?: _84.AuthorizationType;
                        } | {
                            $typeUrl?: "/ibc.applications.transfer.v1.TransferAuthorization";
                            allocations?: {
                                sourcePort?: string;
                                sourceChannel?: string;
                                spendLimit?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                allowList?: string[];
                            }[];
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.StoreCodeAuthorization";
                            grants?: {
                                codeHash?: Uint8Array;
                                instantiatePermission?: {
                                    permission?: import("../cosmwasm/wasm/v1/types").AccessType;
                                    addresses?: string[];
                                };
                            }[];
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.ContractExecutionAuthorization";
                            grants?: {
                                contract?: string;
                                limit?: {
                                    $typeUrl?: string;
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.MaxCallsLimit";
                                    remaining?: bigint;
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.MaxFundsLimit";
                                    amounts?: {
                                        denom?: string;
                                        amount?: string;
                                    }[];
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.CombinedLimit";
                                    callsRemaining?: bigint;
                                    amounts?: {
                                        denom?: string;
                                        amount?: string;
                                    }[];
                                };
                                filter?: {
                                    $typeUrl?: string;
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.AllowAllMessagesFilter";
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.AcceptedMessageKeysFilter";
                                    keys?: string[];
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.AcceptedMessagesFilter";
                                    messages?: Uint8Array[];
                                };
                            }[];
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.ContractMigrationAuthorization";
                            grants?: {
                                contract?: string;
                                limit?: {
                                    $typeUrl?: string;
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.MaxCallsLimit";
                                    remaining?: bigint;
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.MaxFundsLimit";
                                    amounts?: {
                                        denom?: string;
                                        amount?: string;
                                    }[];
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.CombinedLimit";
                                    callsRemaining?: bigint;
                                    amounts?: {
                                        denom?: string;
                                        amount?: string;
                                    }[];
                                };
                                filter?: {
                                    $typeUrl?: string;
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.AllowAllMessagesFilter";
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.AcceptedMessageKeysFilter";
                                    keys?: string[];
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.AcceptedMessagesFilter";
                                    messages?: Uint8Array[];
                                };
                            }[];
                        } | {
                            $typeUrl?: "/cosmos.authz.v1beta1.GenericAuthorization";
                            msg?: string;
                        };
                        expiration?: Date;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _14.QueryGrantsResponse;
                fromAmino(object: _14.QueryGrantsResponseAmino): _14.QueryGrantsResponse;
                toAmino(message: _14.QueryGrantsResponse): _14.QueryGrantsResponseAmino;
                fromAminoMsg(object: _14.QueryGrantsResponseAminoMsg): _14.QueryGrantsResponse;
                toAminoMsg(message: _14.QueryGrantsResponse): _14.QueryGrantsResponseAminoMsg;
                fromProtoMsg(message: _14.QueryGrantsResponseProtoMsg): _14.QueryGrantsResponse;
                toProto(message: _14.QueryGrantsResponse): Uint8Array;
                toProtoMsg(message: _14.QueryGrantsResponse): _14.QueryGrantsResponseProtoMsg;
            };
            QueryGranterGrantsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _14.QueryGranterGrantsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _14.QueryGranterGrantsRequest;
                fromPartial(object: {
                    granter?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _14.QueryGranterGrantsRequest;
                fromAmino(object: _14.QueryGranterGrantsRequestAmino): _14.QueryGranterGrantsRequest;
                toAmino(message: _14.QueryGranterGrantsRequest): _14.QueryGranterGrantsRequestAmino;
                fromAminoMsg(object: _14.QueryGranterGrantsRequestAminoMsg): _14.QueryGranterGrantsRequest;
                toAminoMsg(message: _14.QueryGranterGrantsRequest): _14.QueryGranterGrantsRequestAminoMsg;
                fromProtoMsg(message: _14.QueryGranterGrantsRequestProtoMsg): _14.QueryGranterGrantsRequest;
                toProto(message: _14.QueryGranterGrantsRequest): Uint8Array;
                toProtoMsg(message: _14.QueryGranterGrantsRequest): _14.QueryGranterGrantsRequestProtoMsg;
            };
            QueryGranterGrantsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _14.QueryGranterGrantsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _14.QueryGranterGrantsResponse;
                fromPartial(object: {
                    grants?: {
                        granter?: string;
                        grantee?: string;
                        authorization?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        } | {
                            $typeUrl?: "/cosmos.bank.v1beta1.SendAuthorization";
                            spendLimit?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            allowList?: string[];
                        } | {
                            $typeUrl?: "/cosmos.staking.v1beta1.StakeAuthorization";
                            maxTokens?: {
                                denom?: string;
                                amount?: string;
                            };
                            allowList?: {
                                address?: string[];
                            };
                            denyList?: {
                                address?: string[];
                            };
                            authorizationType?: _84.AuthorizationType;
                        } | {
                            $typeUrl?: "/ibc.applications.transfer.v1.TransferAuthorization";
                            allocations?: {
                                sourcePort?: string;
                                sourceChannel?: string;
                                spendLimit?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                allowList?: string[];
                            }[];
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.StoreCodeAuthorization";
                            grants?: {
                                codeHash?: Uint8Array;
                                instantiatePermission?: {
                                    permission?: import("../cosmwasm/wasm/v1/types").AccessType;
                                    addresses?: string[];
                                };
                            }[];
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.ContractExecutionAuthorization";
                            grants?: {
                                contract?: string;
                                limit?: {
                                    $typeUrl?: string;
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.MaxCallsLimit";
                                    remaining?: bigint;
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.MaxFundsLimit";
                                    amounts?: {
                                        denom?: string;
                                        amount?: string;
                                    }[];
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.CombinedLimit";
                                    callsRemaining?: bigint;
                                    amounts?: {
                                        denom?: string;
                                        amount?: string;
                                    }[];
                                };
                                filter?: {
                                    $typeUrl?: string;
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.AllowAllMessagesFilter";
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.AcceptedMessageKeysFilter";
                                    keys?: string[];
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.AcceptedMessagesFilter";
                                    messages?: Uint8Array[];
                                };
                            }[];
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.ContractMigrationAuthorization";
                            grants?: {
                                contract?: string;
                                limit?: {
                                    $typeUrl?: string;
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.MaxCallsLimit";
                                    remaining?: bigint;
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.MaxFundsLimit";
                                    amounts?: {
                                        denom?: string;
                                        amount?: string;
                                    }[];
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.CombinedLimit";
                                    callsRemaining?: bigint;
                                    amounts?: {
                                        denom?: string;
                                        amount?: string;
                                    }[];
                                };
                                filter?: {
                                    $typeUrl?: string;
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.AllowAllMessagesFilter";
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.AcceptedMessageKeysFilter";
                                    keys?: string[];
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.AcceptedMessagesFilter";
                                    messages?: Uint8Array[];
                                };
                            }[];
                        } | {
                            $typeUrl?: "/cosmos.authz.v1beta1.GenericAuthorization";
                            msg?: string;
                        };
                        expiration?: Date;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _14.QueryGranterGrantsResponse;
                fromAmino(object: _14.QueryGranterGrantsResponseAmino): _14.QueryGranterGrantsResponse;
                toAmino(message: _14.QueryGranterGrantsResponse): _14.QueryGranterGrantsResponseAmino;
                fromAminoMsg(object: _14.QueryGranterGrantsResponseAminoMsg): _14.QueryGranterGrantsResponse;
                toAminoMsg(message: _14.QueryGranterGrantsResponse): _14.QueryGranterGrantsResponseAminoMsg;
                fromProtoMsg(message: _14.QueryGranterGrantsResponseProtoMsg): _14.QueryGranterGrantsResponse;
                toProto(message: _14.QueryGranterGrantsResponse): Uint8Array;
                toProtoMsg(message: _14.QueryGranterGrantsResponse): _14.QueryGranterGrantsResponseProtoMsg;
            };
            QueryGranteeGrantsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _14.QueryGranteeGrantsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _14.QueryGranteeGrantsRequest;
                fromPartial(object: {
                    grantee?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _14.QueryGranteeGrantsRequest;
                fromAmino(object: _14.QueryGranteeGrantsRequestAmino): _14.QueryGranteeGrantsRequest;
                toAmino(message: _14.QueryGranteeGrantsRequest): _14.QueryGranteeGrantsRequestAmino;
                fromAminoMsg(object: _14.QueryGranteeGrantsRequestAminoMsg): _14.QueryGranteeGrantsRequest;
                toAminoMsg(message: _14.QueryGranteeGrantsRequest): _14.QueryGranteeGrantsRequestAminoMsg;
                fromProtoMsg(message: _14.QueryGranteeGrantsRequestProtoMsg): _14.QueryGranteeGrantsRequest;
                toProto(message: _14.QueryGranteeGrantsRequest): Uint8Array;
                toProtoMsg(message: _14.QueryGranteeGrantsRequest): _14.QueryGranteeGrantsRequestProtoMsg;
            };
            QueryGranteeGrantsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _14.QueryGranteeGrantsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _14.QueryGranteeGrantsResponse;
                fromPartial(object: {
                    grants?: {
                        granter?: string;
                        grantee?: string;
                        authorization?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        } | {
                            $typeUrl?: "/cosmos.bank.v1beta1.SendAuthorization";
                            spendLimit?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            allowList?: string[];
                        } | {
                            $typeUrl?: "/cosmos.staking.v1beta1.StakeAuthorization";
                            maxTokens?: {
                                denom?: string;
                                amount?: string;
                            };
                            allowList?: {
                                address?: string[];
                            };
                            denyList?: {
                                address?: string[];
                            };
                            authorizationType?: _84.AuthorizationType;
                        } | {
                            $typeUrl?: "/ibc.applications.transfer.v1.TransferAuthorization";
                            allocations?: {
                                sourcePort?: string;
                                sourceChannel?: string;
                                spendLimit?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                allowList?: string[];
                            }[];
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.StoreCodeAuthorization";
                            grants?: {
                                codeHash?: Uint8Array;
                                instantiatePermission?: {
                                    permission?: import("../cosmwasm/wasm/v1/types").AccessType;
                                    addresses?: string[];
                                };
                            }[];
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.ContractExecutionAuthorization";
                            grants?: {
                                contract?: string;
                                limit?: {
                                    $typeUrl?: string;
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.MaxCallsLimit";
                                    remaining?: bigint;
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.MaxFundsLimit";
                                    amounts?: {
                                        denom?: string;
                                        amount?: string;
                                    }[];
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.CombinedLimit";
                                    callsRemaining?: bigint;
                                    amounts?: {
                                        denom?: string;
                                        amount?: string;
                                    }[];
                                };
                                filter?: {
                                    $typeUrl?: string;
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.AllowAllMessagesFilter";
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.AcceptedMessageKeysFilter";
                                    keys?: string[];
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.AcceptedMessagesFilter";
                                    messages?: Uint8Array[];
                                };
                            }[];
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.ContractMigrationAuthorization";
                            grants?: {
                                contract?: string;
                                limit?: {
                                    $typeUrl?: string;
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.MaxCallsLimit";
                                    remaining?: bigint;
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.MaxFundsLimit";
                                    amounts?: {
                                        denom?: string;
                                        amount?: string;
                                    }[];
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.CombinedLimit";
                                    callsRemaining?: bigint;
                                    amounts?: {
                                        denom?: string;
                                        amount?: string;
                                    }[];
                                };
                                filter?: {
                                    $typeUrl?: string;
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.AllowAllMessagesFilter";
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.AcceptedMessageKeysFilter";
                                    keys?: string[];
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.AcceptedMessagesFilter";
                                    messages?: Uint8Array[];
                                };
                            }[];
                        } | {
                            $typeUrl?: "/cosmos.authz.v1beta1.GenericAuthorization";
                            msg?: string;
                        };
                        expiration?: Date;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _14.QueryGranteeGrantsResponse;
                fromAmino(object: _14.QueryGranteeGrantsResponseAmino): _14.QueryGranteeGrantsResponse;
                toAmino(message: _14.QueryGranteeGrantsResponse): _14.QueryGranteeGrantsResponseAmino;
                fromAminoMsg(object: _14.QueryGranteeGrantsResponseAminoMsg): _14.QueryGranteeGrantsResponse;
                toAminoMsg(message: _14.QueryGranteeGrantsResponse): _14.QueryGranteeGrantsResponseAminoMsg;
                fromProtoMsg(message: _14.QueryGranteeGrantsResponseProtoMsg): _14.QueryGranteeGrantsResponse;
                toProto(message: _14.QueryGranteeGrantsResponse): Uint8Array;
                toProtoMsg(message: _14.QueryGranteeGrantsResponse): _14.QueryGranteeGrantsResponseProtoMsg;
            };
            GenesisState: {
                typeUrl: string;
                aminoType: string;
                encode(message: _13.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _13.GenesisState;
                fromPartial(object: {
                    authorization?: {
                        granter?: string;
                        grantee?: string;
                        authorization?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        } | {
                            $typeUrl?: "/cosmos.bank.v1beta1.SendAuthorization";
                            spendLimit?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            allowList?: string[];
                        } | {
                            $typeUrl?: "/cosmos.staking.v1beta1.StakeAuthorization";
                            maxTokens?: {
                                denom?: string;
                                amount?: string;
                            };
                            allowList?: {
                                address?: string[];
                            };
                            denyList?: {
                                address?: string[];
                            };
                            authorizationType?: _84.AuthorizationType;
                        } | {
                            $typeUrl?: "/ibc.applications.transfer.v1.TransferAuthorization";
                            allocations?: {
                                sourcePort?: string;
                                sourceChannel?: string;
                                spendLimit?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                allowList?: string[];
                            }[];
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.StoreCodeAuthorization";
                            grants?: {
                                codeHash?: Uint8Array;
                                instantiatePermission?: {
                                    permission?: import("../cosmwasm/wasm/v1/types").AccessType;
                                    addresses?: string[];
                                };
                            }[];
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.ContractExecutionAuthorization";
                            grants?: {
                                contract?: string;
                                limit?: {
                                    $typeUrl?: string;
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.MaxCallsLimit";
                                    remaining?: bigint;
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.MaxFundsLimit";
                                    amounts?: {
                                        denom?: string;
                                        amount?: string;
                                    }[];
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.CombinedLimit";
                                    callsRemaining?: bigint;
                                    amounts?: {
                                        denom?: string;
                                        amount?: string;
                                    }[];
                                };
                                filter?: {
                                    $typeUrl?: string;
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.AllowAllMessagesFilter";
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.AcceptedMessageKeysFilter";
                                    keys?: string[];
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.AcceptedMessagesFilter";
                                    messages?: Uint8Array[];
                                };
                            }[];
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.ContractMigrationAuthorization";
                            grants?: {
                                contract?: string;
                                limit?: {
                                    $typeUrl?: string;
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.MaxCallsLimit";
                                    remaining?: bigint;
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.MaxFundsLimit";
                                    amounts?: {
                                        denom?: string;
                                        amount?: string;
                                    }[];
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.CombinedLimit";
                                    callsRemaining?: bigint;
                                    amounts?: {
                                        denom?: string;
                                        amount?: string;
                                    }[];
                                };
                                filter?: {
                                    $typeUrl?: string;
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.AllowAllMessagesFilter";
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.AcceptedMessageKeysFilter";
                                    keys?: string[];
                                } | {
                                    $typeUrl?: "/cosmwasm.wasm.v1.AcceptedMessagesFilter";
                                    messages?: Uint8Array[];
                                };
                            }[];
                        } | {
                            $typeUrl?: "/cosmos.authz.v1beta1.GenericAuthorization";
                            msg?: string;
                        };
                        expiration?: Date;
                    }[];
                }): _13.GenesisState;
                fromAmino(object: _13.GenesisStateAmino): _13.GenesisState;
                toAmino(message: _13.GenesisState): _13.GenesisStateAmino;
                fromAminoMsg(object: _13.GenesisStateAminoMsg): _13.GenesisState;
                toAminoMsg(message: _13.GenesisState): _13.GenesisStateAminoMsg;
                fromProtoMsg(message: _13.GenesisStateProtoMsg): _13.GenesisState;
                toProto(message: _13.GenesisState): Uint8Array;
                toProtoMsg(message: _13.GenesisState): _13.GenesisStateProtoMsg;
            };
            EventGrant: {
                typeUrl: string;
                aminoType: string;
                encode(message: _12.EventGrant, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _12.EventGrant;
                fromPartial(object: {
                    msgTypeUrl?: string;
                    granter?: string;
                    grantee?: string;
                }): _12.EventGrant;
                fromAmino(object: _12.EventGrantAmino): _12.EventGrant;
                toAmino(message: _12.EventGrant): _12.EventGrantAmino;
                fromAminoMsg(object: _12.EventGrantAminoMsg): _12.EventGrant;
                toAminoMsg(message: _12.EventGrant): _12.EventGrantAminoMsg;
                fromProtoMsg(message: _12.EventGrantProtoMsg): _12.EventGrant;
                toProto(message: _12.EventGrant): Uint8Array;
                toProtoMsg(message: _12.EventGrant): _12.EventGrantProtoMsg;
            };
            EventRevoke: {
                typeUrl: string;
                aminoType: string;
                encode(message: _12.EventRevoke, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _12.EventRevoke;
                fromPartial(object: {
                    msgTypeUrl?: string;
                    granter?: string;
                    grantee?: string;
                }): _12.EventRevoke;
                fromAmino(object: _12.EventRevokeAmino): _12.EventRevoke;
                toAmino(message: _12.EventRevoke): _12.EventRevokeAmino;
                fromAminoMsg(object: _12.EventRevokeAminoMsg): _12.EventRevoke;
                toAminoMsg(message: _12.EventRevoke): _12.EventRevokeAminoMsg;
                fromProtoMsg(message: _12.EventRevokeProtoMsg): _12.EventRevoke;
                toProto(message: _12.EventRevoke): Uint8Array;
                toProtoMsg(message: _12.EventRevoke): _12.EventRevokeProtoMsg;
            };
            GenericAuthorization: {
                typeUrl: string;
                aminoType: string;
                encode(message: _11.GenericAuthorization, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _11.GenericAuthorization;
                fromPartial(object: {
                    $typeUrl?: "/cosmos.authz.v1beta1.GenericAuthorization";
                    msg?: string;
                }): _11.GenericAuthorization;
                fromAmino(object: _11.GenericAuthorizationAmino): _11.GenericAuthorization;
                toAmino(message: _11.GenericAuthorization): _11.GenericAuthorizationAmino;
                fromAminoMsg(object: _11.GenericAuthorizationAminoMsg): _11.GenericAuthorization;
                toAminoMsg(message: _11.GenericAuthorization): _11.GenericAuthorizationAminoMsg;
                fromProtoMsg(message: _11.GenericAuthorizationProtoMsg): _11.GenericAuthorization;
                toProto(message: _11.GenericAuthorization): Uint8Array;
                toProtoMsg(message: _11.GenericAuthorization): _11.GenericAuthorizationProtoMsg;
            };
            Grant: {
                typeUrl: string;
                aminoType: string;
                encode(message: _11.Grant, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _11.Grant;
                fromPartial(object: {
                    authorization?: {
                        $typeUrl?: string;
                        typeUrl?: string;
                        value?: Uint8Array;
                    } | {
                        $typeUrl?: "/cosmos.bank.v1beta1.SendAuthorization";
                        spendLimit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        allowList?: string[];
                    } | {
                        $typeUrl?: "/cosmos.staking.v1beta1.StakeAuthorization";
                        maxTokens?: {
                            denom?: string;
                            amount?: string;
                        };
                        allowList?: {
                            address?: string[];
                        };
                        denyList?: {
                            address?: string[];
                        };
                        authorizationType?: _84.AuthorizationType;
                    } | {
                        $typeUrl?: "/ibc.applications.transfer.v1.TransferAuthorization";
                        allocations?: {
                            sourcePort?: string;
                            sourceChannel?: string;
                            spendLimit?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            allowList?: string[];
                        }[];
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.StoreCodeAuthorization";
                        grants?: {
                            codeHash?: Uint8Array;
                            instantiatePermission?: {
                                permission?: import("../cosmwasm/wasm/v1/types").AccessType;
                                addresses?: string[];
                            };
                        }[];
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.ContractExecutionAuthorization";
                        grants?: {
                            contract?: string;
                            limit?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            } | {
                                $typeUrl?: "/cosmwasm.wasm.v1.MaxCallsLimit";
                                remaining?: bigint;
                            } | {
                                $typeUrl?: "/cosmwasm.wasm.v1.MaxFundsLimit";
                                amounts?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                            } | {
                                $typeUrl?: "/cosmwasm.wasm.v1.CombinedLimit";
                                callsRemaining?: bigint;
                                amounts?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                            };
                            filter?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            } | {
                                $typeUrl?: "/cosmwasm.wasm.v1.AllowAllMessagesFilter";
                            } | {
                                $typeUrl?: "/cosmwasm.wasm.v1.AcceptedMessageKeysFilter";
                                keys?: string[];
                            } | {
                                $typeUrl?: "/cosmwasm.wasm.v1.AcceptedMessagesFilter";
                                messages?: Uint8Array[];
                            };
                        }[];
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.ContractMigrationAuthorization";
                        grants?: {
                            contract?: string;
                            limit?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            } | {
                                $typeUrl?: "/cosmwasm.wasm.v1.MaxCallsLimit";
                                remaining?: bigint;
                            } | {
                                $typeUrl?: "/cosmwasm.wasm.v1.MaxFundsLimit";
                                amounts?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                            } | {
                                $typeUrl?: "/cosmwasm.wasm.v1.CombinedLimit";
                                callsRemaining?: bigint;
                                amounts?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                            };
                            filter?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            } | {
                                $typeUrl?: "/cosmwasm.wasm.v1.AllowAllMessagesFilter";
                            } | {
                                $typeUrl?: "/cosmwasm.wasm.v1.AcceptedMessageKeysFilter";
                                keys?: string[];
                            } | {
                                $typeUrl?: "/cosmwasm.wasm.v1.AcceptedMessagesFilter";
                                messages?: Uint8Array[];
                            };
                        }[];
                    } | {
                        $typeUrl?: "/cosmos.authz.v1beta1.GenericAuthorization";
                        msg?: string;
                    };
                    expiration?: Date;
                }): _11.Grant;
                fromAmino(object: _11.GrantAmino): _11.Grant;
                toAmino(message: _11.Grant): _11.GrantAmino;
                fromAminoMsg(object: _11.GrantAminoMsg): _11.Grant;
                toAminoMsg(message: _11.Grant): _11.GrantAminoMsg;
                fromProtoMsg(message: _11.GrantProtoMsg): _11.Grant;
                toProto(message: _11.Grant): Uint8Array;
                toProtoMsg(message: _11.Grant): _11.GrantProtoMsg;
            };
            GrantAuthorization: {
                typeUrl: string;
                aminoType: string;
                encode(message: _11.GrantAuthorization, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _11.GrantAuthorization;
                fromPartial(object: {
                    granter?: string;
                    grantee?: string;
                    authorization?: {
                        $typeUrl?: string;
                        typeUrl?: string;
                        value?: Uint8Array;
                    } | {
                        $typeUrl?: "/cosmos.bank.v1beta1.SendAuthorization";
                        spendLimit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        allowList?: string[];
                    } | {
                        $typeUrl?: "/cosmos.staking.v1beta1.StakeAuthorization";
                        maxTokens?: {
                            denom?: string;
                            amount?: string;
                        };
                        allowList?: {
                            address?: string[];
                        };
                        denyList?: {
                            address?: string[];
                        };
                        authorizationType?: _84.AuthorizationType;
                    } | {
                        $typeUrl?: "/ibc.applications.transfer.v1.TransferAuthorization";
                        allocations?: {
                            sourcePort?: string;
                            sourceChannel?: string;
                            spendLimit?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            allowList?: string[];
                        }[];
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.StoreCodeAuthorization";
                        grants?: {
                            codeHash?: Uint8Array;
                            instantiatePermission?: {
                                permission?: import("../cosmwasm/wasm/v1/types").AccessType;
                                addresses?: string[];
                            };
                        }[];
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.ContractExecutionAuthorization";
                        grants?: {
                            contract?: string;
                            limit?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            } | {
                                $typeUrl?: "/cosmwasm.wasm.v1.MaxCallsLimit";
                                remaining?: bigint;
                            } | {
                                $typeUrl?: "/cosmwasm.wasm.v1.MaxFundsLimit";
                                amounts?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                            } | {
                                $typeUrl?: "/cosmwasm.wasm.v1.CombinedLimit";
                                callsRemaining?: bigint;
                                amounts?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                            };
                            filter?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            } | {
                                $typeUrl?: "/cosmwasm.wasm.v1.AllowAllMessagesFilter";
                            } | {
                                $typeUrl?: "/cosmwasm.wasm.v1.AcceptedMessageKeysFilter";
                                keys?: string[];
                            } | {
                                $typeUrl?: "/cosmwasm.wasm.v1.AcceptedMessagesFilter";
                                messages?: Uint8Array[];
                            };
                        }[];
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.ContractMigrationAuthorization";
                        grants?: {
                            contract?: string;
                            limit?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            } | {
                                $typeUrl?: "/cosmwasm.wasm.v1.MaxCallsLimit";
                                remaining?: bigint;
                            } | {
                                $typeUrl?: "/cosmwasm.wasm.v1.MaxFundsLimit";
                                amounts?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                            } | {
                                $typeUrl?: "/cosmwasm.wasm.v1.CombinedLimit";
                                callsRemaining?: bigint;
                                amounts?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                            };
                            filter?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            } | {
                                $typeUrl?: "/cosmwasm.wasm.v1.AllowAllMessagesFilter";
                            } | {
                                $typeUrl?: "/cosmwasm.wasm.v1.AcceptedMessageKeysFilter";
                                keys?: string[];
                            } | {
                                $typeUrl?: "/cosmwasm.wasm.v1.AcceptedMessagesFilter";
                                messages?: Uint8Array[];
                            };
                        }[];
                    } | {
                        $typeUrl?: "/cosmos.authz.v1beta1.GenericAuthorization";
                        msg?: string;
                    };
                    expiration?: Date;
                }): _11.GrantAuthorization;
                fromAmino(object: _11.GrantAuthorizationAmino): _11.GrantAuthorization;
                toAmino(message: _11.GrantAuthorization): _11.GrantAuthorizationAmino;
                fromAminoMsg(object: _11.GrantAuthorizationAminoMsg): _11.GrantAuthorization;
                toAminoMsg(message: _11.GrantAuthorization): _11.GrantAuthorizationAminoMsg;
                fromProtoMsg(message: _11.GrantAuthorizationProtoMsg): _11.GrantAuthorization;
                toProto(message: _11.GrantAuthorization): Uint8Array;
                toProtoMsg(message: _11.GrantAuthorization): _11.GrantAuthorizationProtoMsg;
            };
            GrantQueueItem: {
                typeUrl: string;
                aminoType: string;
                encode(message: _11.GrantQueueItem, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _11.GrantQueueItem;
                fromPartial(object: {
                    msgTypeUrls?: string[];
                }): _11.GrantQueueItem;
                fromAmino(object: _11.GrantQueueItemAmino): _11.GrantQueueItem;
                toAmino(message: _11.GrantQueueItem): _11.GrantQueueItemAmino;
                fromAminoMsg(object: _11.GrantQueueItemAminoMsg): _11.GrantQueueItem;
                toAminoMsg(message: _11.GrantQueueItem): _11.GrantQueueItemAminoMsg;
                fromProtoMsg(message: _11.GrantQueueItemProtoMsg): _11.GrantQueueItem;
                toProto(message: _11.GrantQueueItem): Uint8Array;
                toProtoMsg(message: _11.GrantQueueItem): _11.GrantQueueItemProtoMsg;
            };
            Cosmos_authzv1beta1Authorization_InterfaceDecoder: (input: Uint8Array | import("..").BinaryReader) => import("../google/protobuf/any").Any | _17.SendAuthorization | _84.StakeAuthorization | import("../ibc/applications/transfer/v1/authz").TransferAuthorization | import("../cosmwasm/wasm/v1/authz").StoreCodeAuthorization | import("../cosmwasm/wasm/v1/authz").ContractExecutionAuthorization | import("../cosmwasm/wasm/v1/authz").ContractMigrationAuthorization | _11.GenericAuthorization;
            Cosmos_authzv1beta1Authorization_FromAmino: (content: import("../google/protobuf/any").AnyAmino) => import("../google/protobuf/any").Any;
            Cosmos_authzv1beta1Authorization_ToAmino: (content: import("../google/protobuf/any").Any) => import("../google/protobuf/any").AnyAmino;
        };
    }
    namespace bank {
        namespace module {
            const v1: {
                Module: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _16.Module, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _16.Module;
                    fromPartial(object: {
                        blockedModuleAccountsOverride?: string[];
                        authority?: string;
                    }): _16.Module;
                    fromAmino(object: _16.ModuleAmino): _16.Module;
                    toAmino(message: _16.Module): _16.ModuleAmino;
                    fromAminoMsg(object: _16.ModuleAminoMsg): _16.Module;
                    toAminoMsg(message: _16.Module): _16.ModuleAminoMsg;
                    fromProtoMsg(message: _16.ModuleProtoMsg): _16.Module;
                    toProto(message: _16.Module): Uint8Array;
                    toProtoMsg(message: _16.Module): _16.ModuleProtoMsg;
                };
            };
        }
        const v1beta1: {
            MsgClientImpl: typeof _231.MsgClientImpl;
            QueryClientImpl: typeof _213.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                balance(request: _20.QueryBalanceRequest): Promise<_20.QueryBalanceResponse>;
                allBalances(request: _20.QueryAllBalancesRequest): Promise<_20.QueryAllBalancesResponse>;
                spendableBalances(request: _20.QuerySpendableBalancesRequest): Promise<_20.QuerySpendableBalancesResponse>;
                spendableBalanceByDenom(request: _20.QuerySpendableBalanceByDenomRequest): Promise<_20.QuerySpendableBalanceByDenomResponse>;
                totalSupply(request?: _20.QueryTotalSupplyRequest): Promise<_20.QueryTotalSupplyResponse>;
                supplyOf(request: _20.QuerySupplyOfRequest): Promise<_20.QuerySupplyOfResponse>;
                params(request?: _20.QueryParamsRequest): Promise<_20.QueryParamsResponse>;
                denomMetadata(request: _20.QueryDenomMetadataRequest): Promise<_20.QueryDenomMetadataResponse>;
                denomMetadataByQueryString(request: _20.QueryDenomMetadataByQueryStringRequest): Promise<_20.QueryDenomMetadataByQueryStringResponse>;
                denomsMetadata(request?: _20.QueryDenomsMetadataRequest): Promise<_20.QueryDenomsMetadataResponse>;
                denomOwners(request: _20.QueryDenomOwnersRequest): Promise<_20.QueryDenomOwnersResponse>;
                sendEnabled(request: _20.QuerySendEnabledRequest): Promise<_20.QuerySendEnabledResponse>;
            };
            LCDQueryClient: typeof _196.LCDQueryClient;
            registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
            load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
            MessageComposer: {
                encoded: {
                    send(value: _21.MsgSend): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    multiSend(value: _21.MsgMultiSend): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    burn(value: _21.MsgBurn): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    updateParams(value: _21.MsgUpdateParams): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    setSendEnabled(value: _21.MsgSetSendEnabled): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                };
                withTypeUrl: {
                    send(value: _21.MsgSend): {
                        typeUrl: string;
                        value: _21.MsgSend;
                    };
                    multiSend(value: _21.MsgMultiSend): {
                        typeUrl: string;
                        value: _21.MsgMultiSend;
                    };
                    burn(value: _21.MsgBurn): {
                        typeUrl: string;
                        value: _21.MsgBurn;
                    };
                    updateParams(value: _21.MsgUpdateParams): {
                        typeUrl: string;
                        value: _21.MsgUpdateParams;
                    };
                    setSendEnabled(value: _21.MsgSetSendEnabled): {
                        typeUrl: string;
                        value: _21.MsgSetSendEnabled;
                    };
                };
                fromPartial: {
                    send(value: _21.MsgSend): {
                        typeUrl: string;
                        value: _21.MsgSend;
                    };
                    multiSend(value: _21.MsgMultiSend): {
                        typeUrl: string;
                        value: _21.MsgMultiSend;
                    };
                    burn(value: _21.MsgBurn): {
                        typeUrl: string;
                        value: _21.MsgBurn;
                    };
                    updateParams(value: _21.MsgUpdateParams): {
                        typeUrl: string;
                        value: _21.MsgUpdateParams;
                    };
                    setSendEnabled(value: _21.MsgSetSendEnabled): {
                        typeUrl: string;
                        value: _21.MsgSetSendEnabled;
                    };
                };
            };
            AminoConverter: {
                "/cosmos.bank.v1beta1.MsgSend": {
                    aminoType: string;
                    toAmino: (message: _21.MsgSend) => _21.MsgSendAmino;
                    fromAmino: (object: _21.MsgSendAmino) => _21.MsgSend;
                };
                "/cosmos.bank.v1beta1.MsgMultiSend": {
                    aminoType: string;
                    toAmino: (message: _21.MsgMultiSend) => _21.MsgMultiSendAmino;
                    fromAmino: (object: _21.MsgMultiSendAmino) => _21.MsgMultiSend;
                };
                "/cosmos.bank.v1beta1.MsgBurn": {
                    aminoType: string;
                    toAmino: (message: _21.MsgBurn) => _21.MsgBurnAmino;
                    fromAmino: (object: _21.MsgBurnAmino) => _21.MsgBurn;
                };
                "/cosmos.bank.v1beta1.MsgUpdateParams": {
                    aminoType: string;
                    toAmino: (message: _21.MsgUpdateParams) => _21.MsgUpdateParamsAmino;
                    fromAmino: (object: _21.MsgUpdateParamsAmino) => _21.MsgUpdateParams;
                };
                "/cosmos.bank.v1beta1.MsgSetSendEnabled": {
                    aminoType: string;
                    toAmino: (message: _21.MsgSetSendEnabled) => _21.MsgSetSendEnabledAmino;
                    fromAmino: (object: _21.MsgSetSendEnabledAmino) => _21.MsgSetSendEnabled;
                };
            };
            MsgSend: {
                typeUrl: string;
                aminoType: string;
                encode(message: _21.MsgSend, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _21.MsgSend;
                fromPartial(object: {
                    fromAddress?: string;
                    toAddress?: string;
                    amount?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _21.MsgSend;
                fromAmino(object: _21.MsgSendAmino): _21.MsgSend;
                toAmino(message: _21.MsgSend): _21.MsgSendAmino;
                fromAminoMsg(object: _21.MsgSendAminoMsg): _21.MsgSend;
                toAminoMsg(message: _21.MsgSend): _21.MsgSendAminoMsg;
                fromProtoMsg(message: _21.MsgSendProtoMsg): _21.MsgSend;
                toProto(message: _21.MsgSend): Uint8Array;
                toProtoMsg(message: _21.MsgSend): _21.MsgSendProtoMsg;
            };
            MsgSendResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _21.MsgSendResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _21.MsgSendResponse;
                fromPartial(_: {}): _21.MsgSendResponse;
                fromAmino(_: _21.MsgSendResponseAmino): _21.MsgSendResponse;
                toAmino(_: _21.MsgSendResponse): _21.MsgSendResponseAmino;
                fromAminoMsg(object: _21.MsgSendResponseAminoMsg): _21.MsgSendResponse;
                toAminoMsg(message: _21.MsgSendResponse): _21.MsgSendResponseAminoMsg;
                fromProtoMsg(message: _21.MsgSendResponseProtoMsg): _21.MsgSendResponse;
                toProto(message: _21.MsgSendResponse): Uint8Array;
                toProtoMsg(message: _21.MsgSendResponse): _21.MsgSendResponseProtoMsg;
            };
            MsgMultiSend: {
                typeUrl: string;
                aminoType: string;
                encode(message: _21.MsgMultiSend, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _21.MsgMultiSend;
                fromPartial(object: {
                    inputs?: {
                        address?: string;
                        coins?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    }[];
                    outputs?: {
                        address?: string;
                        coins?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    }[];
                }): _21.MsgMultiSend;
                fromAmino(object: _21.MsgMultiSendAmino): _21.MsgMultiSend;
                toAmino(message: _21.MsgMultiSend): _21.MsgMultiSendAmino;
                fromAminoMsg(object: _21.MsgMultiSendAminoMsg): _21.MsgMultiSend;
                toAminoMsg(message: _21.MsgMultiSend): _21.MsgMultiSendAminoMsg;
                fromProtoMsg(message: _21.MsgMultiSendProtoMsg): _21.MsgMultiSend;
                toProto(message: _21.MsgMultiSend): Uint8Array;
                toProtoMsg(message: _21.MsgMultiSend): _21.MsgMultiSendProtoMsg;
            };
            MsgMultiSendResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _21.MsgMultiSendResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _21.MsgMultiSendResponse;
                fromPartial(_: {}): _21.MsgMultiSendResponse;
                fromAmino(_: _21.MsgMultiSendResponseAmino): _21.MsgMultiSendResponse;
                toAmino(_: _21.MsgMultiSendResponse): _21.MsgMultiSendResponseAmino;
                fromAminoMsg(object: _21.MsgMultiSendResponseAminoMsg): _21.MsgMultiSendResponse;
                toAminoMsg(message: _21.MsgMultiSendResponse): _21.MsgMultiSendResponseAminoMsg;
                fromProtoMsg(message: _21.MsgMultiSendResponseProtoMsg): _21.MsgMultiSendResponse;
                toProto(message: _21.MsgMultiSendResponse): Uint8Array;
                toProtoMsg(message: _21.MsgMultiSendResponse): _21.MsgMultiSendResponseProtoMsg;
            };
            MsgUpdateParams: {
                typeUrl: string;
                aminoType: string;
                encode(message: _21.MsgUpdateParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _21.MsgUpdateParams;
                fromPartial(object: {
                    authority?: string;
                    params?: {
                        sendEnabled?: {
                            denom?: string;
                            enabled?: boolean;
                        }[];
                        defaultSendEnabled?: boolean;
                    };
                }): _21.MsgUpdateParams;
                fromAmino(object: _21.MsgUpdateParamsAmino): _21.MsgUpdateParams;
                toAmino(message: _21.MsgUpdateParams): _21.MsgUpdateParamsAmino;
                fromAminoMsg(object: _21.MsgUpdateParamsAminoMsg): _21.MsgUpdateParams;
                toAminoMsg(message: _21.MsgUpdateParams): _21.MsgUpdateParamsAminoMsg;
                fromProtoMsg(message: _21.MsgUpdateParamsProtoMsg): _21.MsgUpdateParams;
                toProto(message: _21.MsgUpdateParams): Uint8Array;
                toProtoMsg(message: _21.MsgUpdateParams): _21.MsgUpdateParamsProtoMsg;
            };
            MsgUpdateParamsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _21.MsgUpdateParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _21.MsgUpdateParamsResponse;
                fromPartial(_: {}): _21.MsgUpdateParamsResponse;
                fromAmino(_: _21.MsgUpdateParamsResponseAmino): _21.MsgUpdateParamsResponse;
                toAmino(_: _21.MsgUpdateParamsResponse): _21.MsgUpdateParamsResponseAmino;
                fromAminoMsg(object: _21.MsgUpdateParamsResponseAminoMsg): _21.MsgUpdateParamsResponse;
                toAminoMsg(message: _21.MsgUpdateParamsResponse): _21.MsgUpdateParamsResponseAminoMsg;
                fromProtoMsg(message: _21.MsgUpdateParamsResponseProtoMsg): _21.MsgUpdateParamsResponse;
                toProto(message: _21.MsgUpdateParamsResponse): Uint8Array;
                toProtoMsg(message: _21.MsgUpdateParamsResponse): _21.MsgUpdateParamsResponseProtoMsg;
            };
            MsgSetSendEnabled: {
                typeUrl: string;
                aminoType: string;
                encode(message: _21.MsgSetSendEnabled, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _21.MsgSetSendEnabled;
                fromPartial(object: {
                    authority?: string;
                    sendEnabled?: {
                        denom?: string;
                        enabled?: boolean;
                    }[];
                    useDefaultFor?: string[];
                }): _21.MsgSetSendEnabled;
                fromAmino(object: _21.MsgSetSendEnabledAmino): _21.MsgSetSendEnabled;
                toAmino(message: _21.MsgSetSendEnabled): _21.MsgSetSendEnabledAmino;
                fromAminoMsg(object: _21.MsgSetSendEnabledAminoMsg): _21.MsgSetSendEnabled;
                toAminoMsg(message: _21.MsgSetSendEnabled): _21.MsgSetSendEnabledAminoMsg;
                fromProtoMsg(message: _21.MsgSetSendEnabledProtoMsg): _21.MsgSetSendEnabled;
                toProto(message: _21.MsgSetSendEnabled): Uint8Array;
                toProtoMsg(message: _21.MsgSetSendEnabled): _21.MsgSetSendEnabledProtoMsg;
            };
            MsgSetSendEnabledResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _21.MsgSetSendEnabledResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _21.MsgSetSendEnabledResponse;
                fromPartial(_: {}): _21.MsgSetSendEnabledResponse;
                fromAmino(_: _21.MsgSetSendEnabledResponseAmino): _21.MsgSetSendEnabledResponse;
                toAmino(_: _21.MsgSetSendEnabledResponse): _21.MsgSetSendEnabledResponseAmino;
                fromAminoMsg(object: _21.MsgSetSendEnabledResponseAminoMsg): _21.MsgSetSendEnabledResponse;
                toAminoMsg(message: _21.MsgSetSendEnabledResponse): _21.MsgSetSendEnabledResponseAminoMsg;
                fromProtoMsg(message: _21.MsgSetSendEnabledResponseProtoMsg): _21.MsgSetSendEnabledResponse;
                toProto(message: _21.MsgSetSendEnabledResponse): Uint8Array;
                toProtoMsg(message: _21.MsgSetSendEnabledResponse): _21.MsgSetSendEnabledResponseProtoMsg;
            };
            MsgBurn: {
                typeUrl: string;
                aminoType: string;
                encode(message: _21.MsgBurn, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _21.MsgBurn;
                fromPartial(object: {
                    fromAddress?: string;
                    amount?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _21.MsgBurn;
                fromAmino(object: _21.MsgBurnAmino): _21.MsgBurn;
                toAmino(message: _21.MsgBurn): _21.MsgBurnAmino;
                fromAminoMsg(object: _21.MsgBurnAminoMsg): _21.MsgBurn;
                toAminoMsg(message: _21.MsgBurn): _21.MsgBurnAminoMsg;
                fromProtoMsg(message: _21.MsgBurnProtoMsg): _21.MsgBurn;
                toProto(message: _21.MsgBurn): Uint8Array;
                toProtoMsg(message: _21.MsgBurn): _21.MsgBurnProtoMsg;
            };
            MsgBurnResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _21.MsgBurnResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _21.MsgBurnResponse;
                fromPartial(_: {}): _21.MsgBurnResponse;
                fromAmino(_: _21.MsgBurnResponseAmino): _21.MsgBurnResponse;
                toAmino(_: _21.MsgBurnResponse): _21.MsgBurnResponseAmino;
                fromAminoMsg(object: _21.MsgBurnResponseAminoMsg): _21.MsgBurnResponse;
                toAminoMsg(message: _21.MsgBurnResponse): _21.MsgBurnResponseAminoMsg;
                fromProtoMsg(message: _21.MsgBurnResponseProtoMsg): _21.MsgBurnResponse;
                toProto(message: _21.MsgBurnResponse): Uint8Array;
                toProtoMsg(message: _21.MsgBurnResponse): _21.MsgBurnResponseProtoMsg;
            };
            QueryBalanceRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _20.QueryBalanceRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _20.QueryBalanceRequest;
                fromPartial(object: {
                    address?: string;
                    denom?: string;
                }): _20.QueryBalanceRequest;
                fromAmino(object: _20.QueryBalanceRequestAmino): _20.QueryBalanceRequest;
                toAmino(message: _20.QueryBalanceRequest): _20.QueryBalanceRequestAmino;
                fromAminoMsg(object: _20.QueryBalanceRequestAminoMsg): _20.QueryBalanceRequest;
                toAminoMsg(message: _20.QueryBalanceRequest): _20.QueryBalanceRequestAminoMsg;
                fromProtoMsg(message: _20.QueryBalanceRequestProtoMsg): _20.QueryBalanceRequest;
                toProto(message: _20.QueryBalanceRequest): Uint8Array;
                toProtoMsg(message: _20.QueryBalanceRequest): _20.QueryBalanceRequestProtoMsg;
            };
            QueryBalanceResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _20.QueryBalanceResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _20.QueryBalanceResponse;
                fromPartial(object: {
                    balance?: {
                        denom?: string;
                        amount?: string;
                    };
                }): _20.QueryBalanceResponse;
                fromAmino(object: _20.QueryBalanceResponseAmino): _20.QueryBalanceResponse;
                toAmino(message: _20.QueryBalanceResponse): _20.QueryBalanceResponseAmino;
                fromAminoMsg(object: _20.QueryBalanceResponseAminoMsg): _20.QueryBalanceResponse;
                toAminoMsg(message: _20.QueryBalanceResponse): _20.QueryBalanceResponseAminoMsg;
                fromProtoMsg(message: _20.QueryBalanceResponseProtoMsg): _20.QueryBalanceResponse;
                toProto(message: _20.QueryBalanceResponse): Uint8Array;
                toProtoMsg(message: _20.QueryBalanceResponse): _20.QueryBalanceResponseProtoMsg;
            };
            QueryAllBalancesRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _20.QueryAllBalancesRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _20.QueryAllBalancesRequest;
                fromPartial(object: {
                    address?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                    resolveDenom?: boolean;
                }): _20.QueryAllBalancesRequest;
                fromAmino(object: _20.QueryAllBalancesRequestAmino): _20.QueryAllBalancesRequest;
                toAmino(message: _20.QueryAllBalancesRequest): _20.QueryAllBalancesRequestAmino;
                fromAminoMsg(object: _20.QueryAllBalancesRequestAminoMsg): _20.QueryAllBalancesRequest;
                toAminoMsg(message: _20.QueryAllBalancesRequest): _20.QueryAllBalancesRequestAminoMsg;
                fromProtoMsg(message: _20.QueryAllBalancesRequestProtoMsg): _20.QueryAllBalancesRequest;
                toProto(message: _20.QueryAllBalancesRequest): Uint8Array;
                toProtoMsg(message: _20.QueryAllBalancesRequest): _20.QueryAllBalancesRequestProtoMsg;
            };
            QueryAllBalancesResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _20.QueryAllBalancesResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _20.QueryAllBalancesResponse;
                fromPartial(object: {
                    balances?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _20.QueryAllBalancesResponse;
                fromAmino(object: _20.QueryAllBalancesResponseAmino): _20.QueryAllBalancesResponse;
                toAmino(message: _20.QueryAllBalancesResponse): _20.QueryAllBalancesResponseAmino;
                fromAminoMsg(object: _20.QueryAllBalancesResponseAminoMsg): _20.QueryAllBalancesResponse;
                toAminoMsg(message: _20.QueryAllBalancesResponse): _20.QueryAllBalancesResponseAminoMsg;
                fromProtoMsg(message: _20.QueryAllBalancesResponseProtoMsg): _20.QueryAllBalancesResponse;
                toProto(message: _20.QueryAllBalancesResponse): Uint8Array;
                toProtoMsg(message: _20.QueryAllBalancesResponse): _20.QueryAllBalancesResponseProtoMsg;
            };
            QuerySpendableBalancesRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _20.QuerySpendableBalancesRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _20.QuerySpendableBalancesRequest;
                fromPartial(object: {
                    address?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _20.QuerySpendableBalancesRequest;
                fromAmino(object: _20.QuerySpendableBalancesRequestAmino): _20.QuerySpendableBalancesRequest;
                toAmino(message: _20.QuerySpendableBalancesRequest): _20.QuerySpendableBalancesRequestAmino;
                fromAminoMsg(object: _20.QuerySpendableBalancesRequestAminoMsg): _20.QuerySpendableBalancesRequest;
                toAminoMsg(message: _20.QuerySpendableBalancesRequest): _20.QuerySpendableBalancesRequestAminoMsg;
                fromProtoMsg(message: _20.QuerySpendableBalancesRequestProtoMsg): _20.QuerySpendableBalancesRequest;
                toProto(message: _20.QuerySpendableBalancesRequest): Uint8Array;
                toProtoMsg(message: _20.QuerySpendableBalancesRequest): _20.QuerySpendableBalancesRequestProtoMsg;
            };
            QuerySpendableBalancesResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _20.QuerySpendableBalancesResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _20.QuerySpendableBalancesResponse;
                fromPartial(object: {
                    balances?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _20.QuerySpendableBalancesResponse;
                fromAmino(object: _20.QuerySpendableBalancesResponseAmino): _20.QuerySpendableBalancesResponse;
                toAmino(message: _20.QuerySpendableBalancesResponse): _20.QuerySpendableBalancesResponseAmino;
                fromAminoMsg(object: _20.QuerySpendableBalancesResponseAminoMsg): _20.QuerySpendableBalancesResponse;
                toAminoMsg(message: _20.QuerySpendableBalancesResponse): _20.QuerySpendableBalancesResponseAminoMsg;
                fromProtoMsg(message: _20.QuerySpendableBalancesResponseProtoMsg): _20.QuerySpendableBalancesResponse;
                toProto(message: _20.QuerySpendableBalancesResponse): Uint8Array;
                toProtoMsg(message: _20.QuerySpendableBalancesResponse): _20.QuerySpendableBalancesResponseProtoMsg;
            };
            QuerySpendableBalanceByDenomRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _20.QuerySpendableBalanceByDenomRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _20.QuerySpendableBalanceByDenomRequest;
                fromPartial(object: {
                    address?: string;
                    denom?: string;
                }): _20.QuerySpendableBalanceByDenomRequest;
                fromAmino(object: _20.QuerySpendableBalanceByDenomRequestAmino): _20.QuerySpendableBalanceByDenomRequest;
                toAmino(message: _20.QuerySpendableBalanceByDenomRequest): _20.QuerySpendableBalanceByDenomRequestAmino;
                fromAminoMsg(object: _20.QuerySpendableBalanceByDenomRequestAminoMsg): _20.QuerySpendableBalanceByDenomRequest;
                toAminoMsg(message: _20.QuerySpendableBalanceByDenomRequest): _20.QuerySpendableBalanceByDenomRequestAminoMsg;
                fromProtoMsg(message: _20.QuerySpendableBalanceByDenomRequestProtoMsg): _20.QuerySpendableBalanceByDenomRequest;
                toProto(message: _20.QuerySpendableBalanceByDenomRequest): Uint8Array;
                toProtoMsg(message: _20.QuerySpendableBalanceByDenomRequest): _20.QuerySpendableBalanceByDenomRequestProtoMsg;
            };
            QuerySpendableBalanceByDenomResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _20.QuerySpendableBalanceByDenomResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _20.QuerySpendableBalanceByDenomResponse;
                fromPartial(object: {
                    balance?: {
                        denom?: string;
                        amount?: string;
                    };
                }): _20.QuerySpendableBalanceByDenomResponse;
                fromAmino(object: _20.QuerySpendableBalanceByDenomResponseAmino): _20.QuerySpendableBalanceByDenomResponse;
                toAmino(message: _20.QuerySpendableBalanceByDenomResponse): _20.QuerySpendableBalanceByDenomResponseAmino;
                fromAminoMsg(object: _20.QuerySpendableBalanceByDenomResponseAminoMsg): _20.QuerySpendableBalanceByDenomResponse;
                toAminoMsg(message: _20.QuerySpendableBalanceByDenomResponse): _20.QuerySpendableBalanceByDenomResponseAminoMsg;
                fromProtoMsg(message: _20.QuerySpendableBalanceByDenomResponseProtoMsg): _20.QuerySpendableBalanceByDenomResponse;
                toProto(message: _20.QuerySpendableBalanceByDenomResponse): Uint8Array;
                toProtoMsg(message: _20.QuerySpendableBalanceByDenomResponse): _20.QuerySpendableBalanceByDenomResponseProtoMsg;
            };
            QueryTotalSupplyRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _20.QueryTotalSupplyRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _20.QueryTotalSupplyRequest;
                fromPartial(object: {
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _20.QueryTotalSupplyRequest;
                fromAmino(object: _20.QueryTotalSupplyRequestAmino): _20.QueryTotalSupplyRequest;
                toAmino(message: _20.QueryTotalSupplyRequest): _20.QueryTotalSupplyRequestAmino;
                fromAminoMsg(object: _20.QueryTotalSupplyRequestAminoMsg): _20.QueryTotalSupplyRequest;
                toAminoMsg(message: _20.QueryTotalSupplyRequest): _20.QueryTotalSupplyRequestAminoMsg;
                fromProtoMsg(message: _20.QueryTotalSupplyRequestProtoMsg): _20.QueryTotalSupplyRequest;
                toProto(message: _20.QueryTotalSupplyRequest): Uint8Array;
                toProtoMsg(message: _20.QueryTotalSupplyRequest): _20.QueryTotalSupplyRequestProtoMsg;
            };
            QueryTotalSupplyResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _20.QueryTotalSupplyResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _20.QueryTotalSupplyResponse;
                fromPartial(object: {
                    supply?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _20.QueryTotalSupplyResponse;
                fromAmino(object: _20.QueryTotalSupplyResponseAmino): _20.QueryTotalSupplyResponse;
                toAmino(message: _20.QueryTotalSupplyResponse): _20.QueryTotalSupplyResponseAmino;
                fromAminoMsg(object: _20.QueryTotalSupplyResponseAminoMsg): _20.QueryTotalSupplyResponse;
                toAminoMsg(message: _20.QueryTotalSupplyResponse): _20.QueryTotalSupplyResponseAminoMsg;
                fromProtoMsg(message: _20.QueryTotalSupplyResponseProtoMsg): _20.QueryTotalSupplyResponse;
                toProto(message: _20.QueryTotalSupplyResponse): Uint8Array;
                toProtoMsg(message: _20.QueryTotalSupplyResponse): _20.QueryTotalSupplyResponseProtoMsg;
            };
            QuerySupplyOfRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _20.QuerySupplyOfRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _20.QuerySupplyOfRequest;
                fromPartial(object: {
                    denom?: string;
                }): _20.QuerySupplyOfRequest;
                fromAmino(object: _20.QuerySupplyOfRequestAmino): _20.QuerySupplyOfRequest;
                toAmino(message: _20.QuerySupplyOfRequest): _20.QuerySupplyOfRequestAmino;
                fromAminoMsg(object: _20.QuerySupplyOfRequestAminoMsg): _20.QuerySupplyOfRequest;
                toAminoMsg(message: _20.QuerySupplyOfRequest): _20.QuerySupplyOfRequestAminoMsg;
                fromProtoMsg(message: _20.QuerySupplyOfRequestProtoMsg): _20.QuerySupplyOfRequest;
                toProto(message: _20.QuerySupplyOfRequest): Uint8Array;
                toProtoMsg(message: _20.QuerySupplyOfRequest): _20.QuerySupplyOfRequestProtoMsg;
            };
            QuerySupplyOfResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _20.QuerySupplyOfResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _20.QuerySupplyOfResponse;
                fromPartial(object: {
                    amount?: {
                        denom?: string;
                        amount?: string;
                    };
                }): _20.QuerySupplyOfResponse;
                fromAmino(object: _20.QuerySupplyOfResponseAmino): _20.QuerySupplyOfResponse;
                toAmino(message: _20.QuerySupplyOfResponse): _20.QuerySupplyOfResponseAmino;
                fromAminoMsg(object: _20.QuerySupplyOfResponseAminoMsg): _20.QuerySupplyOfResponse;
                toAminoMsg(message: _20.QuerySupplyOfResponse): _20.QuerySupplyOfResponseAminoMsg;
                fromProtoMsg(message: _20.QuerySupplyOfResponseProtoMsg): _20.QuerySupplyOfResponse;
                toProto(message: _20.QuerySupplyOfResponse): Uint8Array;
                toProtoMsg(message: _20.QuerySupplyOfResponse): _20.QuerySupplyOfResponseProtoMsg;
            };
            QueryParamsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(_: _20.QueryParamsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _20.QueryParamsRequest;
                fromPartial(_: {}): _20.QueryParamsRequest;
                fromAmino(_: _20.QueryParamsRequestAmino): _20.QueryParamsRequest;
                toAmino(_: _20.QueryParamsRequest): _20.QueryParamsRequestAmino;
                fromAminoMsg(object: _20.QueryParamsRequestAminoMsg): _20.QueryParamsRequest;
                toAminoMsg(message: _20.QueryParamsRequest): _20.QueryParamsRequestAminoMsg;
                fromProtoMsg(message: _20.QueryParamsRequestProtoMsg): _20.QueryParamsRequest;
                toProto(message: _20.QueryParamsRequest): Uint8Array;
                toProtoMsg(message: _20.QueryParamsRequest): _20.QueryParamsRequestProtoMsg;
            };
            QueryParamsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _20.QueryParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _20.QueryParamsResponse;
                fromPartial(object: {
                    params?: {
                        sendEnabled?: {
                            denom?: string;
                            enabled?: boolean;
                        }[];
                        defaultSendEnabled?: boolean;
                    };
                }): _20.QueryParamsResponse;
                fromAmino(object: _20.QueryParamsResponseAmino): _20.QueryParamsResponse;
                toAmino(message: _20.QueryParamsResponse): _20.QueryParamsResponseAmino;
                fromAminoMsg(object: _20.QueryParamsResponseAminoMsg): _20.QueryParamsResponse;
                toAminoMsg(message: _20.QueryParamsResponse): _20.QueryParamsResponseAminoMsg;
                fromProtoMsg(message: _20.QueryParamsResponseProtoMsg): _20.QueryParamsResponse;
                toProto(message: _20.QueryParamsResponse): Uint8Array;
                toProtoMsg(message: _20.QueryParamsResponse): _20.QueryParamsResponseProtoMsg;
            };
            QueryDenomsMetadataRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _20.QueryDenomsMetadataRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _20.QueryDenomsMetadataRequest;
                fromPartial(object: {
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _20.QueryDenomsMetadataRequest;
                fromAmino(object: _20.QueryDenomsMetadataRequestAmino): _20.QueryDenomsMetadataRequest;
                toAmino(message: _20.QueryDenomsMetadataRequest): _20.QueryDenomsMetadataRequestAmino;
                fromAminoMsg(object: _20.QueryDenomsMetadataRequestAminoMsg): _20.QueryDenomsMetadataRequest;
                toAminoMsg(message: _20.QueryDenomsMetadataRequest): _20.QueryDenomsMetadataRequestAminoMsg;
                fromProtoMsg(message: _20.QueryDenomsMetadataRequestProtoMsg): _20.QueryDenomsMetadataRequest;
                toProto(message: _20.QueryDenomsMetadataRequest): Uint8Array;
                toProtoMsg(message: _20.QueryDenomsMetadataRequest): _20.QueryDenomsMetadataRequestProtoMsg;
            };
            QueryDenomsMetadataResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _20.QueryDenomsMetadataResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _20.QueryDenomsMetadataResponse;
                fromPartial(object: {
                    metadatas?: {
                        description?: string;
                        denomUnits?: {
                            denom?: string;
                            exponent?: number;
                            aliases?: string[];
                        }[];
                        base?: string;
                        display?: string;
                        name?: string;
                        symbol?: string;
                        uri?: string;
                        uriHash?: string;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _20.QueryDenomsMetadataResponse;
                fromAmino(object: _20.QueryDenomsMetadataResponseAmino): _20.QueryDenomsMetadataResponse;
                toAmino(message: _20.QueryDenomsMetadataResponse): _20.QueryDenomsMetadataResponseAmino;
                fromAminoMsg(object: _20.QueryDenomsMetadataResponseAminoMsg): _20.QueryDenomsMetadataResponse;
                toAminoMsg(message: _20.QueryDenomsMetadataResponse): _20.QueryDenomsMetadataResponseAminoMsg;
                fromProtoMsg(message: _20.QueryDenomsMetadataResponseProtoMsg): _20.QueryDenomsMetadataResponse;
                toProto(message: _20.QueryDenomsMetadataResponse): Uint8Array;
                toProtoMsg(message: _20.QueryDenomsMetadataResponse): _20.QueryDenomsMetadataResponseProtoMsg;
            };
            QueryDenomMetadataRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _20.QueryDenomMetadataRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _20.QueryDenomMetadataRequest;
                fromPartial(object: {
                    denom?: string;
                }): _20.QueryDenomMetadataRequest;
                fromAmino(object: _20.QueryDenomMetadataRequestAmino): _20.QueryDenomMetadataRequest;
                toAmino(message: _20.QueryDenomMetadataRequest): _20.QueryDenomMetadataRequestAmino;
                fromAminoMsg(object: _20.QueryDenomMetadataRequestAminoMsg): _20.QueryDenomMetadataRequest;
                toAminoMsg(message: _20.QueryDenomMetadataRequest): _20.QueryDenomMetadataRequestAminoMsg;
                fromProtoMsg(message: _20.QueryDenomMetadataRequestProtoMsg): _20.QueryDenomMetadataRequest;
                toProto(message: _20.QueryDenomMetadataRequest): Uint8Array;
                toProtoMsg(message: _20.QueryDenomMetadataRequest): _20.QueryDenomMetadataRequestProtoMsg;
            };
            QueryDenomMetadataResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _20.QueryDenomMetadataResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _20.QueryDenomMetadataResponse;
                fromPartial(object: {
                    metadata?: {
                        description?: string;
                        denomUnits?: {
                            denom?: string;
                            exponent?: number;
                            aliases?: string[];
                        }[];
                        base?: string;
                        display?: string;
                        name?: string;
                        symbol?: string;
                        uri?: string;
                        uriHash?: string;
                    };
                }): _20.QueryDenomMetadataResponse;
                fromAmino(object: _20.QueryDenomMetadataResponseAmino): _20.QueryDenomMetadataResponse;
                toAmino(message: _20.QueryDenomMetadataResponse): _20.QueryDenomMetadataResponseAmino;
                fromAminoMsg(object: _20.QueryDenomMetadataResponseAminoMsg): _20.QueryDenomMetadataResponse;
                toAminoMsg(message: _20.QueryDenomMetadataResponse): _20.QueryDenomMetadataResponseAminoMsg;
                fromProtoMsg(message: _20.QueryDenomMetadataResponseProtoMsg): _20.QueryDenomMetadataResponse;
                toProto(message: _20.QueryDenomMetadataResponse): Uint8Array;
                toProtoMsg(message: _20.QueryDenomMetadataResponse): _20.QueryDenomMetadataResponseProtoMsg;
            };
            QueryDenomMetadataByQueryStringRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _20.QueryDenomMetadataByQueryStringRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _20.QueryDenomMetadataByQueryStringRequest;
                fromPartial(object: {
                    denom?: string;
                }): _20.QueryDenomMetadataByQueryStringRequest;
                fromAmino(object: _20.QueryDenomMetadataByQueryStringRequestAmino): _20.QueryDenomMetadataByQueryStringRequest;
                toAmino(message: _20.QueryDenomMetadataByQueryStringRequest): _20.QueryDenomMetadataByQueryStringRequestAmino;
                fromAminoMsg(object: _20.QueryDenomMetadataByQueryStringRequestAminoMsg): _20.QueryDenomMetadataByQueryStringRequest;
                toAminoMsg(message: _20.QueryDenomMetadataByQueryStringRequest): _20.QueryDenomMetadataByQueryStringRequestAminoMsg;
                fromProtoMsg(message: _20.QueryDenomMetadataByQueryStringRequestProtoMsg): _20.QueryDenomMetadataByQueryStringRequest;
                toProto(message: _20.QueryDenomMetadataByQueryStringRequest): Uint8Array;
                toProtoMsg(message: _20.QueryDenomMetadataByQueryStringRequest): _20.QueryDenomMetadataByQueryStringRequestProtoMsg;
            };
            QueryDenomMetadataByQueryStringResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _20.QueryDenomMetadataByQueryStringResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _20.QueryDenomMetadataByQueryStringResponse;
                fromPartial(object: {
                    metadata?: {
                        description?: string;
                        denomUnits?: {
                            denom?: string;
                            exponent?: number;
                            aliases?: string[];
                        }[];
                        base?: string;
                        display?: string;
                        name?: string;
                        symbol?: string;
                        uri?: string;
                        uriHash?: string;
                    };
                }): _20.QueryDenomMetadataByQueryStringResponse;
                fromAmino(object: _20.QueryDenomMetadataByQueryStringResponseAmino): _20.QueryDenomMetadataByQueryStringResponse;
                toAmino(message: _20.QueryDenomMetadataByQueryStringResponse): _20.QueryDenomMetadataByQueryStringResponseAmino;
                fromAminoMsg(object: _20.QueryDenomMetadataByQueryStringResponseAminoMsg): _20.QueryDenomMetadataByQueryStringResponse;
                toAminoMsg(message: _20.QueryDenomMetadataByQueryStringResponse): _20.QueryDenomMetadataByQueryStringResponseAminoMsg;
                fromProtoMsg(message: _20.QueryDenomMetadataByQueryStringResponseProtoMsg): _20.QueryDenomMetadataByQueryStringResponse;
                toProto(message: _20.QueryDenomMetadataByQueryStringResponse): Uint8Array;
                toProtoMsg(message: _20.QueryDenomMetadataByQueryStringResponse): _20.QueryDenomMetadataByQueryStringResponseProtoMsg;
            };
            QueryDenomOwnersRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _20.QueryDenomOwnersRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _20.QueryDenomOwnersRequest;
                fromPartial(object: {
                    denom?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _20.QueryDenomOwnersRequest;
                fromAmino(object: _20.QueryDenomOwnersRequestAmino): _20.QueryDenomOwnersRequest;
                toAmino(message: _20.QueryDenomOwnersRequest): _20.QueryDenomOwnersRequestAmino;
                fromAminoMsg(object: _20.QueryDenomOwnersRequestAminoMsg): _20.QueryDenomOwnersRequest;
                toAminoMsg(message: _20.QueryDenomOwnersRequest): _20.QueryDenomOwnersRequestAminoMsg;
                fromProtoMsg(message: _20.QueryDenomOwnersRequestProtoMsg): _20.QueryDenomOwnersRequest;
                toProto(message: _20.QueryDenomOwnersRequest): Uint8Array;
                toProtoMsg(message: _20.QueryDenomOwnersRequest): _20.QueryDenomOwnersRequestProtoMsg;
            };
            DenomOwner: {
                typeUrl: string;
                aminoType: string;
                encode(message: _20.DenomOwner, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _20.DenomOwner;
                fromPartial(object: {
                    address?: string;
                    balance?: {
                        denom?: string;
                        amount?: string;
                    };
                }): _20.DenomOwner;
                fromAmino(object: _20.DenomOwnerAmino): _20.DenomOwner;
                toAmino(message: _20.DenomOwner): _20.DenomOwnerAmino;
                fromAminoMsg(object: _20.DenomOwnerAminoMsg): _20.DenomOwner;
                toAminoMsg(message: _20.DenomOwner): _20.DenomOwnerAminoMsg;
                fromProtoMsg(message: _20.DenomOwnerProtoMsg): _20.DenomOwner;
                toProto(message: _20.DenomOwner): Uint8Array;
                toProtoMsg(message: _20.DenomOwner): _20.DenomOwnerProtoMsg;
            };
            QueryDenomOwnersResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _20.QueryDenomOwnersResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _20.QueryDenomOwnersResponse;
                fromPartial(object: {
                    denomOwners?: {
                        address?: string;
                        balance?: {
                            denom?: string;
                            amount?: string;
                        };
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _20.QueryDenomOwnersResponse;
                fromAmino(object: _20.QueryDenomOwnersResponseAmino): _20.QueryDenomOwnersResponse;
                toAmino(message: _20.QueryDenomOwnersResponse): _20.QueryDenomOwnersResponseAmino;
                fromAminoMsg(object: _20.QueryDenomOwnersResponseAminoMsg): _20.QueryDenomOwnersResponse;
                toAminoMsg(message: _20.QueryDenomOwnersResponse): _20.QueryDenomOwnersResponseAminoMsg;
                fromProtoMsg(message: _20.QueryDenomOwnersResponseProtoMsg): _20.QueryDenomOwnersResponse;
                toProto(message: _20.QueryDenomOwnersResponse): Uint8Array;
                toProtoMsg(message: _20.QueryDenomOwnersResponse): _20.QueryDenomOwnersResponseProtoMsg;
            };
            QuerySendEnabledRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _20.QuerySendEnabledRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _20.QuerySendEnabledRequest;
                fromPartial(object: {
                    denoms?: string[];
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _20.QuerySendEnabledRequest;
                fromAmino(object: _20.QuerySendEnabledRequestAmino): _20.QuerySendEnabledRequest;
                toAmino(message: _20.QuerySendEnabledRequest): _20.QuerySendEnabledRequestAmino;
                fromAminoMsg(object: _20.QuerySendEnabledRequestAminoMsg): _20.QuerySendEnabledRequest;
                toAminoMsg(message: _20.QuerySendEnabledRequest): _20.QuerySendEnabledRequestAminoMsg;
                fromProtoMsg(message: _20.QuerySendEnabledRequestProtoMsg): _20.QuerySendEnabledRequest;
                toProto(message: _20.QuerySendEnabledRequest): Uint8Array;
                toProtoMsg(message: _20.QuerySendEnabledRequest): _20.QuerySendEnabledRequestProtoMsg;
            };
            QuerySendEnabledResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _20.QuerySendEnabledResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _20.QuerySendEnabledResponse;
                fromPartial(object: {
                    sendEnabled?: {
                        denom?: string;
                        enabled?: boolean;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _20.QuerySendEnabledResponse;
                fromAmino(object: _20.QuerySendEnabledResponseAmino): _20.QuerySendEnabledResponse;
                toAmino(message: _20.QuerySendEnabledResponse): _20.QuerySendEnabledResponseAmino;
                fromAminoMsg(object: _20.QuerySendEnabledResponseAminoMsg): _20.QuerySendEnabledResponse;
                toAminoMsg(message: _20.QuerySendEnabledResponse): _20.QuerySendEnabledResponseAminoMsg;
                fromProtoMsg(message: _20.QuerySendEnabledResponseProtoMsg): _20.QuerySendEnabledResponse;
                toProto(message: _20.QuerySendEnabledResponse): Uint8Array;
                toProtoMsg(message: _20.QuerySendEnabledResponse): _20.QuerySendEnabledResponseProtoMsg;
            };
            GenesisState: {
                typeUrl: string;
                aminoType: string;
                encode(message: _19.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _19.GenesisState;
                fromPartial(object: {
                    params?: {
                        sendEnabled?: {
                            denom?: string;
                            enabled?: boolean;
                        }[];
                        defaultSendEnabled?: boolean;
                    };
                    balances?: {
                        address?: string;
                        coins?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    }[];
                    supply?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    denomMetadata?: {
                        description?: string;
                        denomUnits?: {
                            denom?: string;
                            exponent?: number;
                            aliases?: string[];
                        }[];
                        base?: string;
                        display?: string;
                        name?: string;
                        symbol?: string;
                        uri?: string;
                        uriHash?: string;
                    }[];
                    sendEnabled?: {
                        denom?: string;
                        enabled?: boolean;
                    }[];
                }): _19.GenesisState;
                fromAmino(object: _19.GenesisStateAmino): _19.GenesisState;
                toAmino(message: _19.GenesisState): _19.GenesisStateAmino;
                fromAminoMsg(object: _19.GenesisStateAminoMsg): _19.GenesisState;
                toAminoMsg(message: _19.GenesisState): _19.GenesisStateAminoMsg;
                fromProtoMsg(message: _19.GenesisStateProtoMsg): _19.GenesisState;
                toProto(message: _19.GenesisState): Uint8Array;
                toProtoMsg(message: _19.GenesisState): _19.GenesisStateProtoMsg;
            };
            Balance: {
                typeUrl: string;
                aminoType: string;
                encode(message: _19.Balance, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _19.Balance;
                fromPartial(object: {
                    address?: string;
                    coins?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _19.Balance;
                fromAmino(object: _19.BalanceAmino): _19.Balance;
                toAmino(message: _19.Balance): _19.BalanceAmino;
                fromAminoMsg(object: _19.BalanceAminoMsg): _19.Balance;
                toAminoMsg(message: _19.Balance): _19.BalanceAminoMsg;
                fromProtoMsg(message: _19.BalanceProtoMsg): _19.Balance;
                toProto(message: _19.Balance): Uint8Array;
                toProtoMsg(message: _19.Balance): _19.BalanceProtoMsg;
            };
            Params: {
                typeUrl: string;
                aminoType: string;
                encode(message: _18.Params, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _18.Params;
                fromPartial(object: {
                    sendEnabled?: {
                        denom?: string;
                        enabled?: boolean;
                    }[];
                    defaultSendEnabled?: boolean;
                }): _18.Params;
                fromAmino(object: _18.ParamsAmino): _18.Params;
                toAmino(message: _18.Params): _18.ParamsAmino;
                fromAminoMsg(object: _18.ParamsAminoMsg): _18.Params;
                toAminoMsg(message: _18.Params): _18.ParamsAminoMsg;
                fromProtoMsg(message: _18.ParamsProtoMsg): _18.Params;
                toProto(message: _18.Params): Uint8Array;
                toProtoMsg(message: _18.Params): _18.ParamsProtoMsg;
            };
            SendEnabled: {
                typeUrl: string;
                aminoType: string;
                encode(message: _18.SendEnabled, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _18.SendEnabled;
                fromPartial(object: {
                    denom?: string;
                    enabled?: boolean;
                }): _18.SendEnabled;
                fromAmino(object: _18.SendEnabledAmino): _18.SendEnabled;
                toAmino(message: _18.SendEnabled): _18.SendEnabledAmino;
                fromAminoMsg(object: _18.SendEnabledAminoMsg): _18.SendEnabled;
                toAminoMsg(message: _18.SendEnabled): _18.SendEnabledAminoMsg;
                fromProtoMsg(message: _18.SendEnabledProtoMsg): _18.SendEnabled;
                toProto(message: _18.SendEnabled): Uint8Array;
                toProtoMsg(message: _18.SendEnabled): _18.SendEnabledProtoMsg;
            };
            Input: {
                typeUrl: string;
                aminoType: string;
                encode(message: _18.Input, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _18.Input;
                fromPartial(object: {
                    address?: string;
                    coins?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _18.Input;
                fromAmino(object: _18.InputAmino): _18.Input;
                toAmino(message: _18.Input): _18.InputAmino;
                fromAminoMsg(object: _18.InputAminoMsg): _18.Input;
                toAminoMsg(message: _18.Input): _18.InputAminoMsg;
                fromProtoMsg(message: _18.InputProtoMsg): _18.Input;
                toProto(message: _18.Input): Uint8Array;
                toProtoMsg(message: _18.Input): _18.InputProtoMsg;
            };
            Output: {
                typeUrl: string;
                aminoType: string;
                encode(message: _18.Output, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _18.Output;
                fromPartial(object: {
                    address?: string;
                    coins?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _18.Output;
                fromAmino(object: _18.OutputAmino): _18.Output;
                toAmino(message: _18.Output): _18.OutputAmino;
                fromAminoMsg(object: _18.OutputAminoMsg): _18.Output;
                toAminoMsg(message: _18.Output): _18.OutputAminoMsg;
                fromProtoMsg(message: _18.OutputProtoMsg): _18.Output;
                toProto(message: _18.Output): Uint8Array;
                toProtoMsg(message: _18.Output): _18.OutputProtoMsg;
            };
            Supply: {
                typeUrl: string;
                aminoType: string;
                encode(message: _18.Supply, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _18.Supply;
                fromPartial(object: {
                    $typeUrl?: "/cosmos.bank.v1beta1.Supply";
                    total?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _18.Supply;
                fromAmino(object: _18.SupplyAmino): _18.Supply;
                toAmino(message: _18.Supply): _18.SupplyAmino;
                fromAminoMsg(object: _18.SupplyAminoMsg): _18.Supply;
                toAminoMsg(message: _18.Supply): _18.SupplyAminoMsg;
                fromProtoMsg(message: _18.SupplyProtoMsg): _18.Supply;
                toProto(message: _18.Supply): Uint8Array;
                toProtoMsg(message: _18.Supply): _18.SupplyProtoMsg;
            };
            DenomUnit: {
                typeUrl: string;
                aminoType: string;
                encode(message: _18.DenomUnit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _18.DenomUnit;
                fromPartial(object: {
                    denom?: string;
                    exponent?: number;
                    aliases?: string[];
                }): _18.DenomUnit;
                fromAmino(object: _18.DenomUnitAmino): _18.DenomUnit;
                toAmino(message: _18.DenomUnit): _18.DenomUnitAmino;
                fromAminoMsg(object: _18.DenomUnitAminoMsg): _18.DenomUnit;
                toAminoMsg(message: _18.DenomUnit): _18.DenomUnitAminoMsg;
                fromProtoMsg(message: _18.DenomUnitProtoMsg): _18.DenomUnit;
                toProto(message: _18.DenomUnit): Uint8Array;
                toProtoMsg(message: _18.DenomUnit): _18.DenomUnitProtoMsg;
            };
            Metadata: {
                typeUrl: string;
                aminoType: string;
                encode(message: _18.Metadata, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _18.Metadata;
                fromPartial(object: {
                    description?: string;
                    denomUnits?: {
                        denom?: string;
                        exponent?: number;
                        aliases?: string[];
                    }[];
                    base?: string;
                    display?: string;
                    name?: string;
                    symbol?: string;
                    uri?: string;
                    uriHash?: string;
                }): _18.Metadata;
                fromAmino(object: _18.MetadataAmino): _18.Metadata;
                toAmino(message: _18.Metadata): _18.MetadataAmino;
                fromAminoMsg(object: _18.MetadataAminoMsg): _18.Metadata;
                toAminoMsg(message: _18.Metadata): _18.MetadataAminoMsg;
                fromProtoMsg(message: _18.MetadataProtoMsg): _18.Metadata;
                toProto(message: _18.Metadata): Uint8Array;
                toProtoMsg(message: _18.Metadata): _18.MetadataProtoMsg;
            };
            SendAuthorization: {
                typeUrl: string;
                aminoType: string;
                encode(message: _17.SendAuthorization, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _17.SendAuthorization;
                fromPartial(object: {
                    $typeUrl?: "/cosmos.bank.v1beta1.SendAuthorization";
                    spendLimit?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    allowList?: string[];
                }): _17.SendAuthorization;
                fromAmino(object: _17.SendAuthorizationAmino): _17.SendAuthorization;
                toAmino(message: _17.SendAuthorization): _17.SendAuthorizationAmino;
                fromAminoMsg(object: _17.SendAuthorizationAminoMsg): _17.SendAuthorization;
                toAminoMsg(message: _17.SendAuthorization): _17.SendAuthorizationAminoMsg;
                fromProtoMsg(message: _17.SendAuthorizationProtoMsg): _17.SendAuthorization;
                toProto(message: _17.SendAuthorization): Uint8Array;
                toProtoMsg(message: _17.SendAuthorization): _17.SendAuthorizationProtoMsg;
            };
        };
    }
    namespace base {
        namespace abci {
            const v1beta1: {
                TxResponse: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _22.TxResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _22.TxResponse;
                    fromPartial(object: {
                        height?: bigint;
                        txhash?: string;
                        codespace?: string;
                        code?: number;
                        data?: string;
                        rawLog?: string;
                        logs?: {
                            msgIndex?: number;
                            log?: string;
                            events?: {
                                type?: string;
                                attributes?: {
                                    key?: string;
                                    value?: string;
                                }[];
                            }[];
                        }[];
                        info?: string;
                        gasWanted?: bigint;
                        gasUsed?: bigint;
                        tx?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        timestamp?: string;
                        events?: {
                            type?: string;
                            attributes?: {
                                key?: string;
                                value?: string;
                                index?: boolean;
                            }[];
                        }[];
                    }): _22.TxResponse;
                    fromAmino(object: _22.TxResponseAmino): _22.TxResponse;
                    toAmino(message: _22.TxResponse): _22.TxResponseAmino;
                    fromAminoMsg(object: _22.TxResponseAminoMsg): _22.TxResponse;
                    toAminoMsg(message: _22.TxResponse): _22.TxResponseAminoMsg;
                    fromProtoMsg(message: _22.TxResponseProtoMsg): _22.TxResponse;
                    toProto(message: _22.TxResponse): Uint8Array;
                    toProtoMsg(message: _22.TxResponse): _22.TxResponseProtoMsg;
                };
                ABCIMessageLog: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _22.ABCIMessageLog, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _22.ABCIMessageLog;
                    fromPartial(object: {
                        msgIndex?: number;
                        log?: string;
                        events?: {
                            type?: string;
                            attributes?: {
                                key?: string;
                                value?: string;
                            }[];
                        }[];
                    }): _22.ABCIMessageLog;
                    fromAmino(object: _22.ABCIMessageLogAmino): _22.ABCIMessageLog;
                    toAmino(message: _22.ABCIMessageLog): _22.ABCIMessageLogAmino;
                    fromAminoMsg(object: _22.ABCIMessageLogAminoMsg): _22.ABCIMessageLog;
                    toAminoMsg(message: _22.ABCIMessageLog): _22.ABCIMessageLogAminoMsg;
                    fromProtoMsg(message: _22.ABCIMessageLogProtoMsg): _22.ABCIMessageLog;
                    toProto(message: _22.ABCIMessageLog): Uint8Array;
                    toProtoMsg(message: _22.ABCIMessageLog): _22.ABCIMessageLogProtoMsg;
                };
                StringEvent: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _22.StringEvent, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _22.StringEvent;
                    fromPartial(object: {
                        type?: string;
                        attributes?: {
                            key?: string;
                            value?: string;
                        }[];
                    }): _22.StringEvent;
                    fromAmino(object: _22.StringEventAmino): _22.StringEvent;
                    toAmino(message: _22.StringEvent): _22.StringEventAmino;
                    fromAminoMsg(object: _22.StringEventAminoMsg): _22.StringEvent;
                    toAminoMsg(message: _22.StringEvent): _22.StringEventAminoMsg;
                    fromProtoMsg(message: _22.StringEventProtoMsg): _22.StringEvent;
                    toProto(message: _22.StringEvent): Uint8Array;
                    toProtoMsg(message: _22.StringEvent): _22.StringEventProtoMsg;
                };
                Attribute: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _22.Attribute, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _22.Attribute;
                    fromPartial(object: {
                        key?: string;
                        value?: string;
                    }): _22.Attribute;
                    fromAmino(object: _22.AttributeAmino): _22.Attribute;
                    toAmino(message: _22.Attribute): _22.AttributeAmino;
                    fromAminoMsg(object: _22.AttributeAminoMsg): _22.Attribute;
                    toAminoMsg(message: _22.Attribute): _22.AttributeAminoMsg;
                    fromProtoMsg(message: _22.AttributeProtoMsg): _22.Attribute;
                    toProto(message: _22.Attribute): Uint8Array;
                    toProtoMsg(message: _22.Attribute): _22.AttributeProtoMsg;
                };
                GasInfo: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _22.GasInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _22.GasInfo;
                    fromPartial(object: {
                        gasWanted?: bigint;
                        gasUsed?: bigint;
                    }): _22.GasInfo;
                    fromAmino(object: _22.GasInfoAmino): _22.GasInfo;
                    toAmino(message: _22.GasInfo): _22.GasInfoAmino;
                    fromAminoMsg(object: _22.GasInfoAminoMsg): _22.GasInfo;
                    toAminoMsg(message: _22.GasInfo): _22.GasInfoAminoMsg;
                    fromProtoMsg(message: _22.GasInfoProtoMsg): _22.GasInfo;
                    toProto(message: _22.GasInfo): Uint8Array;
                    toProtoMsg(message: _22.GasInfo): _22.GasInfoProtoMsg;
                };
                Result: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _22.Result, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _22.Result;
                    fromPartial(object: {
                        data?: Uint8Array;
                        log?: string;
                        events?: {
                            type?: string;
                            attributes?: {
                                key?: string;
                                value?: string;
                                index?: boolean;
                            }[];
                        }[];
                        msgResponses?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        }[];
                    }): _22.Result;
                    fromAmino(object: _22.ResultAmino): _22.Result;
                    toAmino(message: _22.Result): _22.ResultAmino;
                    fromAminoMsg(object: _22.ResultAminoMsg): _22.Result;
                    toAminoMsg(message: _22.Result): _22.ResultAminoMsg;
                    fromProtoMsg(message: _22.ResultProtoMsg): _22.Result;
                    toProto(message: _22.Result): Uint8Array;
                    toProtoMsg(message: _22.Result): _22.ResultProtoMsg;
                };
                SimulationResponse: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _22.SimulationResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _22.SimulationResponse;
                    fromPartial(object: {
                        gasInfo?: {
                            gasWanted?: bigint;
                            gasUsed?: bigint;
                        };
                        result?: {
                            data?: Uint8Array;
                            log?: string;
                            events?: {
                                type?: string;
                                attributes?: {
                                    key?: string;
                                    value?: string;
                                    index?: boolean;
                                }[];
                            }[];
                            msgResponses?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            }[];
                        };
                    }): _22.SimulationResponse;
                    fromAmino(object: _22.SimulationResponseAmino): _22.SimulationResponse;
                    toAmino(message: _22.SimulationResponse): _22.SimulationResponseAmino;
                    fromAminoMsg(object: _22.SimulationResponseAminoMsg): _22.SimulationResponse;
                    toAminoMsg(message: _22.SimulationResponse): _22.SimulationResponseAminoMsg;
                    fromProtoMsg(message: _22.SimulationResponseProtoMsg): _22.SimulationResponse;
                    toProto(message: _22.SimulationResponse): Uint8Array;
                    toProtoMsg(message: _22.SimulationResponse): _22.SimulationResponseProtoMsg;
                };
                MsgData: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _22.MsgData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _22.MsgData;
                    fromPartial(object: {
                        msgType?: string;
                        data?: Uint8Array;
                    }): _22.MsgData;
                    fromAmino(object: _22.MsgDataAmino): _22.MsgData;
                    toAmino(message: _22.MsgData): _22.MsgDataAmino;
                    fromAminoMsg(object: _22.MsgDataAminoMsg): _22.MsgData;
                    toAminoMsg(message: _22.MsgData): _22.MsgDataAminoMsg;
                    fromProtoMsg(message: _22.MsgDataProtoMsg): _22.MsgData;
                    toProto(message: _22.MsgData): Uint8Array;
                    toProtoMsg(message: _22.MsgData): _22.MsgDataProtoMsg;
                };
                TxMsgData: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _22.TxMsgData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _22.TxMsgData;
                    fromPartial(object: {
                        data?: {
                            msgType?: string;
                            data?: Uint8Array;
                        }[];
                        msgResponses?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        }[];
                    }): _22.TxMsgData;
                    fromAmino(object: _22.TxMsgDataAmino): _22.TxMsgData;
                    toAmino(message: _22.TxMsgData): _22.TxMsgDataAmino;
                    fromAminoMsg(object: _22.TxMsgDataAminoMsg): _22.TxMsgData;
                    toAminoMsg(message: _22.TxMsgData): _22.TxMsgDataAminoMsg;
                    fromProtoMsg(message: _22.TxMsgDataProtoMsg): _22.TxMsgData;
                    toProto(message: _22.TxMsgData): Uint8Array;
                    toProtoMsg(message: _22.TxMsgData): _22.TxMsgDataProtoMsg;
                };
                SearchTxsResult: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _22.SearchTxsResult, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _22.SearchTxsResult;
                    fromPartial(object: {
                        totalCount?: bigint;
                        count?: bigint;
                        pageNumber?: bigint;
                        pageTotal?: bigint;
                        limit?: bigint;
                        txs?: {
                            height?: bigint;
                            txhash?: string;
                            codespace?: string;
                            code?: number;
                            data?: string;
                            rawLog?: string;
                            logs?: {
                                msgIndex?: number;
                                log?: string;
                                events?: {
                                    type?: string;
                                    attributes?: {
                                        key?: string;
                                        value?: string;
                                    }[];
                                }[];
                            }[];
                            info?: string;
                            gasWanted?: bigint;
                            gasUsed?: bigint;
                            tx?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            };
                            timestamp?: string;
                            events?: {
                                type?: string;
                                attributes?: {
                                    key?: string;
                                    value?: string;
                                    index?: boolean;
                                }[];
                            }[];
                        }[];
                    }): _22.SearchTxsResult;
                    fromAmino(object: _22.SearchTxsResultAmino): _22.SearchTxsResult;
                    toAmino(message: _22.SearchTxsResult): _22.SearchTxsResultAmino;
                    fromAminoMsg(object: _22.SearchTxsResultAminoMsg): _22.SearchTxsResult;
                    toAminoMsg(message: _22.SearchTxsResult): _22.SearchTxsResultAminoMsg;
                    fromProtoMsg(message: _22.SearchTxsResultProtoMsg): _22.SearchTxsResult;
                    toProto(message: _22.SearchTxsResult): Uint8Array;
                    toProtoMsg(message: _22.SearchTxsResult): _22.SearchTxsResultProtoMsg;
                };
                SearchBlocksResult: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _22.SearchBlocksResult, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _22.SearchBlocksResult;
                    fromPartial(object: {
                        totalCount?: bigint;
                        count?: bigint;
                        pageNumber?: bigint;
                        pageTotal?: bigint;
                        limit?: bigint;
                        blocks?: {
                            header?: {
                                version?: {
                                    block?: bigint;
                                    app?: bigint;
                                };
                                chainId?: string;
                                height?: bigint;
                                time?: Date;
                                lastBlockId?: {
                                    hash?: Uint8Array;
                                    partSetHeader?: {
                                        total?: number;
                                        hash?: Uint8Array;
                                    };
                                };
                                lastCommitHash?: Uint8Array;
                                dataHash?: Uint8Array;
                                validatorsHash?: Uint8Array;
                                nextValidatorsHash?: Uint8Array;
                                consensusHash?: Uint8Array;
                                appHash?: Uint8Array;
                                lastResultsHash?: Uint8Array;
                                evidenceHash?: Uint8Array;
                                proposerAddress?: Uint8Array;
                            };
                            data?: {
                                txs?: Uint8Array[];
                            };
                            evidence?: {
                                evidence?: {
                                    duplicateVoteEvidence?: {
                                        voteA?: {
                                            type?: import("../tendermint/types/types").SignedMsgType;
                                            height?: bigint;
                                            round?: number;
                                            blockId?: {
                                                hash?: Uint8Array;
                                                partSetHeader?: {
                                                    total?: number;
                                                    hash?: Uint8Array;
                                                };
                                            };
                                            timestamp?: Date;
                                            validatorAddress?: Uint8Array;
                                            validatorIndex?: number;
                                            signature?: Uint8Array;
                                            extension?: Uint8Array;
                                            extensionSignature?: Uint8Array;
                                        };
                                        voteB?: {
                                            type?: import("../tendermint/types/types").SignedMsgType;
                                            height?: bigint;
                                            round?: number;
                                            blockId?: {
                                                hash?: Uint8Array;
                                                partSetHeader?: {
                                                    total?: number;
                                                    hash?: Uint8Array;
                                                };
                                            };
                                            timestamp?: Date;
                                            validatorAddress?: Uint8Array;
                                            validatorIndex?: number;
                                            signature?: Uint8Array;
                                            extension?: Uint8Array;
                                            extensionSignature?: Uint8Array;
                                        };
                                        totalVotingPower?: bigint;
                                        validatorPower?: bigint;
                                        timestamp?: Date;
                                    };
                                    lightClientAttackEvidence?: {
                                        conflictingBlock?: {
                                            signedHeader?: {
                                                header?: {
                                                    version?: {
                                                        block?: bigint;
                                                        app?: bigint;
                                                    };
                                                    chainId?: string;
                                                    height?: bigint;
                                                    time?: Date;
                                                    lastBlockId?: {
                                                        hash?: Uint8Array;
                                                        partSetHeader?: {
                                                            total?: number;
                                                            hash?: Uint8Array;
                                                        };
                                                    };
                                                    lastCommitHash?: Uint8Array;
                                                    dataHash?: Uint8Array;
                                                    validatorsHash?: Uint8Array;
                                                    nextValidatorsHash?: Uint8Array;
                                                    consensusHash?: Uint8Array;
                                                    appHash?: Uint8Array;
                                                    lastResultsHash?: Uint8Array;
                                                    evidenceHash?: Uint8Array;
                                                    proposerAddress?: Uint8Array;
                                                };
                                                commit?: {
                                                    height?: bigint;
                                                    round?: number;
                                                    blockId?: {
                                                        hash?: Uint8Array;
                                                        partSetHeader?: {
                                                            total?: number;
                                                            hash?: Uint8Array;
                                                        };
                                                    };
                                                    signatures?: {
                                                        blockIdFlag?: import("../tendermint/types/validator").BlockIDFlag;
                                                        validatorAddress?: Uint8Array;
                                                        timestamp?: Date;
                                                        signature?: Uint8Array;
                                                    }[];
                                                };
                                            };
                                            validatorSet?: {
                                                validators?: {
                                                    address?: Uint8Array;
                                                    pubKey?: {
                                                        ed25519?: Uint8Array;
                                                        secp256k1?: Uint8Array;
                                                    };
                                                    votingPower?: bigint;
                                                    proposerPriority?: bigint;
                                                }[];
                                                proposer?: {
                                                    address?: Uint8Array;
                                                    pubKey?: {
                                                        ed25519?: Uint8Array;
                                                        secp256k1?: Uint8Array;
                                                    };
                                                    votingPower?: bigint;
                                                    proposerPriority?: bigint;
                                                };
                                                totalVotingPower?: bigint;
                                            };
                                        };
                                        commonHeight?: bigint;
                                        byzantineValidators?: {
                                            address?: Uint8Array;
                                            pubKey?: {
                                                ed25519?: Uint8Array;
                                                secp256k1?: Uint8Array;
                                            };
                                            votingPower?: bigint;
                                            proposerPriority?: bigint;
                                        }[];
                                        totalVotingPower?: bigint;
                                        timestamp?: Date;
                                    };
                                }[];
                            };
                            lastCommit?: {
                                height?: bigint;
                                round?: number;
                                blockId?: {
                                    hash?: Uint8Array;
                                    partSetHeader?: {
                                        total?: number;
                                        hash?: Uint8Array;
                                    };
                                };
                                signatures?: {
                                    blockIdFlag?: import("../tendermint/types/validator").BlockIDFlag;
                                    validatorAddress?: Uint8Array;
                                    timestamp?: Date;
                                    signature?: Uint8Array;
                                }[];
                            };
                        }[];
                    }): _22.SearchBlocksResult;
                    fromAmino(object: _22.SearchBlocksResultAmino): _22.SearchBlocksResult;
                    toAmino(message: _22.SearchBlocksResult): _22.SearchBlocksResultAmino;
                    fromAminoMsg(object: _22.SearchBlocksResultAminoMsg): _22.SearchBlocksResult;
                    toAminoMsg(message: _22.SearchBlocksResult): _22.SearchBlocksResultAminoMsg;
                    fromProtoMsg(message: _22.SearchBlocksResultProtoMsg): _22.SearchBlocksResult;
                    toProto(message: _22.SearchBlocksResult): Uint8Array;
                    toProtoMsg(message: _22.SearchBlocksResult): _22.SearchBlocksResultProtoMsg;
                };
            };
        }
        namespace node {
            const v1beta1: {
                ServiceClientImpl: typeof _214.ServiceClientImpl;
                createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                    config(request?: _23.ConfigRequest): Promise<_23.ConfigResponse>;
                    status(request?: _23.StatusRequest): Promise<_23.StatusResponse>;
                };
                LCDQueryClient: typeof _197.LCDQueryClient;
                ConfigRequest: {
                    typeUrl: string;
                    aminoType: string;
                    encode(_: _23.ConfigRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _23.ConfigRequest;
                    fromPartial(_: {}): _23.ConfigRequest;
                    fromAmino(_: _23.ConfigRequestAmino): _23.ConfigRequest;
                    toAmino(_: _23.ConfigRequest): _23.ConfigRequestAmino;
                    fromAminoMsg(object: _23.ConfigRequestAminoMsg): _23.ConfigRequest;
                    toAminoMsg(message: _23.ConfigRequest): _23.ConfigRequestAminoMsg;
                    fromProtoMsg(message: _23.ConfigRequestProtoMsg): _23.ConfigRequest;
                    toProto(message: _23.ConfigRequest): Uint8Array;
                    toProtoMsg(message: _23.ConfigRequest): _23.ConfigRequestProtoMsg;
                };
                ConfigResponse: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _23.ConfigResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _23.ConfigResponse;
                    fromPartial(object: {
                        minimumGasPrice?: string;
                        pruningKeepRecent?: string;
                        pruningInterval?: string;
                    }): _23.ConfigResponse;
                    fromAmino(object: _23.ConfigResponseAmino): _23.ConfigResponse;
                    toAmino(message: _23.ConfigResponse): _23.ConfigResponseAmino;
                    fromAminoMsg(object: _23.ConfigResponseAminoMsg): _23.ConfigResponse;
                    toAminoMsg(message: _23.ConfigResponse): _23.ConfigResponseAminoMsg;
                    fromProtoMsg(message: _23.ConfigResponseProtoMsg): _23.ConfigResponse;
                    toProto(message: _23.ConfigResponse): Uint8Array;
                    toProtoMsg(message: _23.ConfigResponse): _23.ConfigResponseProtoMsg;
                };
                StatusRequest: {
                    typeUrl: string;
                    aminoType: string;
                    encode(_: _23.StatusRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _23.StatusRequest;
                    fromPartial(_: {}): _23.StatusRequest;
                    fromAmino(_: _23.StatusRequestAmino): _23.StatusRequest;
                    toAmino(_: _23.StatusRequest): _23.StatusRequestAmino;
                    fromAminoMsg(object: _23.StatusRequestAminoMsg): _23.StatusRequest;
                    toAminoMsg(message: _23.StatusRequest): _23.StatusRequestAminoMsg;
                    fromProtoMsg(message: _23.StatusRequestProtoMsg): _23.StatusRequest;
                    toProto(message: _23.StatusRequest): Uint8Array;
                    toProtoMsg(message: _23.StatusRequest): _23.StatusRequestProtoMsg;
                };
                StatusResponse: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _23.StatusResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _23.StatusResponse;
                    fromPartial(object: {
                        earliestStoreHeight?: bigint;
                        height?: bigint;
                        timestamp?: Date;
                        appHash?: Uint8Array;
                        validatorHash?: Uint8Array;
                    }): _23.StatusResponse;
                    fromAmino(object: _23.StatusResponseAmino): _23.StatusResponse;
                    toAmino(message: _23.StatusResponse): _23.StatusResponseAmino;
                    fromAminoMsg(object: _23.StatusResponseAminoMsg): _23.StatusResponse;
                    toAminoMsg(message: _23.StatusResponse): _23.StatusResponseAminoMsg;
                    fromProtoMsg(message: _23.StatusResponseProtoMsg): _23.StatusResponse;
                    toProto(message: _23.StatusResponse): Uint8Array;
                    toProtoMsg(message: _23.StatusResponse): _23.StatusResponseProtoMsg;
                };
            };
        }
        namespace query {
            const v1beta1: {
                PageRequest: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _24.PageRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _24.PageRequest;
                    fromPartial(object: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    }): _24.PageRequest;
                    fromAmino(object: _24.PageRequestAmino): _24.PageRequest;
                    toAmino(message: _24.PageRequest): _24.PageRequestAmino;
                    fromAminoMsg(object: _24.PageRequestAminoMsg): _24.PageRequest;
                    toAminoMsg(message: _24.PageRequest): _24.PageRequestAminoMsg;
                    fromProtoMsg(message: _24.PageRequestProtoMsg): _24.PageRequest;
                    toProto(message: _24.PageRequest): Uint8Array;
                    toProtoMsg(message: _24.PageRequest): _24.PageRequestProtoMsg;
                };
                PageResponse: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _24.PageResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _24.PageResponse;
                    fromPartial(object: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    }): _24.PageResponse;
                    fromAmino(object: _24.PageResponseAmino): _24.PageResponse;
                    toAmino(message: _24.PageResponse): _24.PageResponseAmino;
                    fromAminoMsg(object: _24.PageResponseAminoMsg): _24.PageResponse;
                    toAminoMsg(message: _24.PageResponse): _24.PageResponseAminoMsg;
                    fromProtoMsg(message: _24.PageResponseProtoMsg): _24.PageResponse;
                    toProto(message: _24.PageResponse): Uint8Array;
                    toProtoMsg(message: _24.PageResponse): _24.PageResponseProtoMsg;
                };
            };
        }
        namespace reflection {
            const v2alpha1: {
                AppDescriptor: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _25.AppDescriptor, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _25.AppDescriptor;
                    fromPartial(object: {
                        authn?: {
                            signModes?: {
                                name?: string;
                                number?: number;
                                authnInfoProviderMethodFullname?: string;
                            }[];
                        };
                        chain?: {
                            id?: string;
                        };
                        codec?: {
                            interfaces?: {
                                fullname?: string;
                                interfaceAcceptingMessages?: {
                                    fullname?: string;
                                    fieldDescriptorNames?: string[];
                                }[];
                                interfaceImplementers?: {
                                    fullname?: string;
                                    typeUrl?: string;
                                }[];
                            }[];
                        };
                        configuration?: {
                            bech32AccountAddressPrefix?: string;
                        };
                        queryServices?: {
                            queryServices?: {
                                fullname?: string;
                                isModule?: boolean;
                                methods?: {
                                    name?: string;
                                    fullQueryPath?: string;
                                }[];
                            }[];
                        };
                        tx?: {
                            fullname?: string;
                            msgs?: {
                                msgTypeUrl?: string;
                            }[];
                        };
                    }): _25.AppDescriptor;
                    fromAmino(object: _25.AppDescriptorAmino): _25.AppDescriptor;
                    toAmino(message: _25.AppDescriptor): _25.AppDescriptorAmino;
                    fromAminoMsg(object: _25.AppDescriptorAminoMsg): _25.AppDescriptor;
                    toAminoMsg(message: _25.AppDescriptor): _25.AppDescriptorAminoMsg;
                    fromProtoMsg(message: _25.AppDescriptorProtoMsg): _25.AppDescriptor;
                    toProto(message: _25.AppDescriptor): Uint8Array;
                    toProtoMsg(message: _25.AppDescriptor): _25.AppDescriptorProtoMsg;
                };
                TxDescriptor: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _25.TxDescriptor, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _25.TxDescriptor;
                    fromPartial(object: {
                        fullname?: string;
                        msgs?: {
                            msgTypeUrl?: string;
                        }[];
                    }): _25.TxDescriptor;
                    fromAmino(object: _25.TxDescriptorAmino): _25.TxDescriptor;
                    toAmino(message: _25.TxDescriptor): _25.TxDescriptorAmino;
                    fromAminoMsg(object: _25.TxDescriptorAminoMsg): _25.TxDescriptor;
                    toAminoMsg(message: _25.TxDescriptor): _25.TxDescriptorAminoMsg;
                    fromProtoMsg(message: _25.TxDescriptorProtoMsg): _25.TxDescriptor;
                    toProto(message: _25.TxDescriptor): Uint8Array;
                    toProtoMsg(message: _25.TxDescriptor): _25.TxDescriptorProtoMsg;
                };
                AuthnDescriptor: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _25.AuthnDescriptor, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _25.AuthnDescriptor;
                    fromPartial(object: {
                        signModes?: {
                            name?: string;
                            number?: number;
                            authnInfoProviderMethodFullname?: string;
                        }[];
                    }): _25.AuthnDescriptor;
                    fromAmino(object: _25.AuthnDescriptorAmino): _25.AuthnDescriptor;
                    toAmino(message: _25.AuthnDescriptor): _25.AuthnDescriptorAmino;
                    fromAminoMsg(object: _25.AuthnDescriptorAminoMsg): _25.AuthnDescriptor;
                    toAminoMsg(message: _25.AuthnDescriptor): _25.AuthnDescriptorAminoMsg;
                    fromProtoMsg(message: _25.AuthnDescriptorProtoMsg): _25.AuthnDescriptor;
                    toProto(message: _25.AuthnDescriptor): Uint8Array;
                    toProtoMsg(message: _25.AuthnDescriptor): _25.AuthnDescriptorProtoMsg;
                };
                SigningModeDescriptor: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _25.SigningModeDescriptor, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _25.SigningModeDescriptor;
                    fromPartial(object: {
                        name?: string;
                        number?: number;
                        authnInfoProviderMethodFullname?: string;
                    }): _25.SigningModeDescriptor;
                    fromAmino(object: _25.SigningModeDescriptorAmino): _25.SigningModeDescriptor;
                    toAmino(message: _25.SigningModeDescriptor): _25.SigningModeDescriptorAmino;
                    fromAminoMsg(object: _25.SigningModeDescriptorAminoMsg): _25.SigningModeDescriptor;
                    toAminoMsg(message: _25.SigningModeDescriptor): _25.SigningModeDescriptorAminoMsg;
                    fromProtoMsg(message: _25.SigningModeDescriptorProtoMsg): _25.SigningModeDescriptor;
                    toProto(message: _25.SigningModeDescriptor): Uint8Array;
                    toProtoMsg(message: _25.SigningModeDescriptor): _25.SigningModeDescriptorProtoMsg;
                };
                ChainDescriptor: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _25.ChainDescriptor, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _25.ChainDescriptor;
                    fromPartial(object: {
                        id?: string;
                    }): _25.ChainDescriptor;
                    fromAmino(object: _25.ChainDescriptorAmino): _25.ChainDescriptor;
                    toAmino(message: _25.ChainDescriptor): _25.ChainDescriptorAmino;
                    fromAminoMsg(object: _25.ChainDescriptorAminoMsg): _25.ChainDescriptor;
                    toAminoMsg(message: _25.ChainDescriptor): _25.ChainDescriptorAminoMsg;
                    fromProtoMsg(message: _25.ChainDescriptorProtoMsg): _25.ChainDescriptor;
                    toProto(message: _25.ChainDescriptor): Uint8Array;
                    toProtoMsg(message: _25.ChainDescriptor): _25.ChainDescriptorProtoMsg;
                };
                CodecDescriptor: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _25.CodecDescriptor, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _25.CodecDescriptor;
                    fromPartial(object: {
                        interfaces?: {
                            fullname?: string;
                            interfaceAcceptingMessages?: {
                                fullname?: string;
                                fieldDescriptorNames?: string[];
                            }[];
                            interfaceImplementers?: {
                                fullname?: string;
                                typeUrl?: string;
                            }[];
                        }[];
                    }): _25.CodecDescriptor;
                    fromAmino(object: _25.CodecDescriptorAmino): _25.CodecDescriptor;
                    toAmino(message: _25.CodecDescriptor): _25.CodecDescriptorAmino;
                    fromAminoMsg(object: _25.CodecDescriptorAminoMsg): _25.CodecDescriptor;
                    toAminoMsg(message: _25.CodecDescriptor): _25.CodecDescriptorAminoMsg;
                    fromProtoMsg(message: _25.CodecDescriptorProtoMsg): _25.CodecDescriptor;
                    toProto(message: _25.CodecDescriptor): Uint8Array;
                    toProtoMsg(message: _25.CodecDescriptor): _25.CodecDescriptorProtoMsg;
                };
                InterfaceDescriptor: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _25.InterfaceDescriptor, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _25.InterfaceDescriptor;
                    fromPartial(object: {
                        fullname?: string;
                        interfaceAcceptingMessages?: {
                            fullname?: string;
                            fieldDescriptorNames?: string[];
                        }[];
                        interfaceImplementers?: {
                            fullname?: string;
                            typeUrl?: string;
                        }[];
                    }): _25.InterfaceDescriptor;
                    fromAmino(object: _25.InterfaceDescriptorAmino): _25.InterfaceDescriptor;
                    toAmino(message: _25.InterfaceDescriptor): _25.InterfaceDescriptorAmino;
                    fromAminoMsg(object: _25.InterfaceDescriptorAminoMsg): _25.InterfaceDescriptor;
                    toAminoMsg(message: _25.InterfaceDescriptor): _25.InterfaceDescriptorAminoMsg;
                    fromProtoMsg(message: _25.InterfaceDescriptorProtoMsg): _25.InterfaceDescriptor;
                    toProto(message: _25.InterfaceDescriptor): Uint8Array;
                    toProtoMsg(message: _25.InterfaceDescriptor): _25.InterfaceDescriptorProtoMsg;
                };
                InterfaceImplementerDescriptor: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _25.InterfaceImplementerDescriptor, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _25.InterfaceImplementerDescriptor;
                    fromPartial(object: {
                        fullname?: string;
                        typeUrl?: string;
                    }): _25.InterfaceImplementerDescriptor;
                    fromAmino(object: _25.InterfaceImplementerDescriptorAmino): _25.InterfaceImplementerDescriptor;
                    toAmino(message: _25.InterfaceImplementerDescriptor): _25.InterfaceImplementerDescriptorAmino;
                    fromAminoMsg(object: _25.InterfaceImplementerDescriptorAminoMsg): _25.InterfaceImplementerDescriptor;
                    toAminoMsg(message: _25.InterfaceImplementerDescriptor): _25.InterfaceImplementerDescriptorAminoMsg;
                    fromProtoMsg(message: _25.InterfaceImplementerDescriptorProtoMsg): _25.InterfaceImplementerDescriptor;
                    toProto(message: _25.InterfaceImplementerDescriptor): Uint8Array;
                    toProtoMsg(message: _25.InterfaceImplementerDescriptor): _25.InterfaceImplementerDescriptorProtoMsg;
                };
                InterfaceAcceptingMessageDescriptor: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _25.InterfaceAcceptingMessageDescriptor, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _25.InterfaceAcceptingMessageDescriptor;
                    fromPartial(object: {
                        fullname?: string;
                        fieldDescriptorNames?: string[];
                    }): _25.InterfaceAcceptingMessageDescriptor;
                    fromAmino(object: _25.InterfaceAcceptingMessageDescriptorAmino): _25.InterfaceAcceptingMessageDescriptor;
                    toAmino(message: _25.InterfaceAcceptingMessageDescriptor): _25.InterfaceAcceptingMessageDescriptorAmino;
                    fromAminoMsg(object: _25.InterfaceAcceptingMessageDescriptorAminoMsg): _25.InterfaceAcceptingMessageDescriptor;
                    toAminoMsg(message: _25.InterfaceAcceptingMessageDescriptor): _25.InterfaceAcceptingMessageDescriptorAminoMsg;
                    fromProtoMsg(message: _25.InterfaceAcceptingMessageDescriptorProtoMsg): _25.InterfaceAcceptingMessageDescriptor;
                    toProto(message: _25.InterfaceAcceptingMessageDescriptor): Uint8Array;
                    toProtoMsg(message: _25.InterfaceAcceptingMessageDescriptor): _25.InterfaceAcceptingMessageDescriptorProtoMsg;
                };
                ConfigurationDescriptor: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _25.ConfigurationDescriptor, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _25.ConfigurationDescriptor;
                    fromPartial(object: {
                        bech32AccountAddressPrefix?: string;
                    }): _25.ConfigurationDescriptor;
                    fromAmino(object: _25.ConfigurationDescriptorAmino): _25.ConfigurationDescriptor;
                    toAmino(message: _25.ConfigurationDescriptor): _25.ConfigurationDescriptorAmino;
                    fromAminoMsg(object: _25.ConfigurationDescriptorAminoMsg): _25.ConfigurationDescriptor;
                    toAminoMsg(message: _25.ConfigurationDescriptor): _25.ConfigurationDescriptorAminoMsg;
                    fromProtoMsg(message: _25.ConfigurationDescriptorProtoMsg): _25.ConfigurationDescriptor;
                    toProto(message: _25.ConfigurationDescriptor): Uint8Array;
                    toProtoMsg(message: _25.ConfigurationDescriptor): _25.ConfigurationDescriptorProtoMsg;
                };
                MsgDescriptor: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _25.MsgDescriptor, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _25.MsgDescriptor;
                    fromPartial(object: {
                        msgTypeUrl?: string;
                    }): _25.MsgDescriptor;
                    fromAmino(object: _25.MsgDescriptorAmino): _25.MsgDescriptor;
                    toAmino(message: _25.MsgDescriptor): _25.MsgDescriptorAmino;
                    fromAminoMsg(object: _25.MsgDescriptorAminoMsg): _25.MsgDescriptor;
                    toAminoMsg(message: _25.MsgDescriptor): _25.MsgDescriptorAminoMsg;
                    fromProtoMsg(message: _25.MsgDescriptorProtoMsg): _25.MsgDescriptor;
                    toProto(message: _25.MsgDescriptor): Uint8Array;
                    toProtoMsg(message: _25.MsgDescriptor): _25.MsgDescriptorProtoMsg;
                };
                GetAuthnDescriptorRequest: {
                    typeUrl: string;
                    aminoType: string;
                    encode(_: _25.GetAuthnDescriptorRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _25.GetAuthnDescriptorRequest;
                    fromPartial(_: {}): _25.GetAuthnDescriptorRequest;
                    fromAmino(_: _25.GetAuthnDescriptorRequestAmino): _25.GetAuthnDescriptorRequest;
                    toAmino(_: _25.GetAuthnDescriptorRequest): _25.GetAuthnDescriptorRequestAmino;
                    fromAminoMsg(object: _25.GetAuthnDescriptorRequestAminoMsg): _25.GetAuthnDescriptorRequest;
                    toAminoMsg(message: _25.GetAuthnDescriptorRequest): _25.GetAuthnDescriptorRequestAminoMsg;
                    fromProtoMsg(message: _25.GetAuthnDescriptorRequestProtoMsg): _25.GetAuthnDescriptorRequest;
                    toProto(message: _25.GetAuthnDescriptorRequest): Uint8Array;
                    toProtoMsg(message: _25.GetAuthnDescriptorRequest): _25.GetAuthnDescriptorRequestProtoMsg;
                };
                GetAuthnDescriptorResponse: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _25.GetAuthnDescriptorResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _25.GetAuthnDescriptorResponse;
                    fromPartial(object: {
                        authn?: {
                            signModes?: {
                                name?: string;
                                number?: number;
                                authnInfoProviderMethodFullname?: string;
                            }[];
                        };
                    }): _25.GetAuthnDescriptorResponse;
                    fromAmino(object: _25.GetAuthnDescriptorResponseAmino): _25.GetAuthnDescriptorResponse;
                    toAmino(message: _25.GetAuthnDescriptorResponse): _25.GetAuthnDescriptorResponseAmino;
                    fromAminoMsg(object: _25.GetAuthnDescriptorResponseAminoMsg): _25.GetAuthnDescriptorResponse;
                    toAminoMsg(message: _25.GetAuthnDescriptorResponse): _25.GetAuthnDescriptorResponseAminoMsg;
                    fromProtoMsg(message: _25.GetAuthnDescriptorResponseProtoMsg): _25.GetAuthnDescriptorResponse;
                    toProto(message: _25.GetAuthnDescriptorResponse): Uint8Array;
                    toProtoMsg(message: _25.GetAuthnDescriptorResponse): _25.GetAuthnDescriptorResponseProtoMsg;
                };
                GetChainDescriptorRequest: {
                    typeUrl: string;
                    aminoType: string;
                    encode(_: _25.GetChainDescriptorRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _25.GetChainDescriptorRequest;
                    fromPartial(_: {}): _25.GetChainDescriptorRequest;
                    fromAmino(_: _25.GetChainDescriptorRequestAmino): _25.GetChainDescriptorRequest;
                    toAmino(_: _25.GetChainDescriptorRequest): _25.GetChainDescriptorRequestAmino;
                    fromAminoMsg(object: _25.GetChainDescriptorRequestAminoMsg): _25.GetChainDescriptorRequest;
                    toAminoMsg(message: _25.GetChainDescriptorRequest): _25.GetChainDescriptorRequestAminoMsg;
                    fromProtoMsg(message: _25.GetChainDescriptorRequestProtoMsg): _25.GetChainDescriptorRequest;
                    toProto(message: _25.GetChainDescriptorRequest): Uint8Array;
                    toProtoMsg(message: _25.GetChainDescriptorRequest): _25.GetChainDescriptorRequestProtoMsg;
                };
                GetChainDescriptorResponse: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _25.GetChainDescriptorResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _25.GetChainDescriptorResponse;
                    fromPartial(object: {
                        chain?: {
                            id?: string;
                        };
                    }): _25.GetChainDescriptorResponse;
                    fromAmino(object: _25.GetChainDescriptorResponseAmino): _25.GetChainDescriptorResponse;
                    toAmino(message: _25.GetChainDescriptorResponse): _25.GetChainDescriptorResponseAmino;
                    fromAminoMsg(object: _25.GetChainDescriptorResponseAminoMsg): _25.GetChainDescriptorResponse;
                    toAminoMsg(message: _25.GetChainDescriptorResponse): _25.GetChainDescriptorResponseAminoMsg;
                    fromProtoMsg(message: _25.GetChainDescriptorResponseProtoMsg): _25.GetChainDescriptorResponse;
                    toProto(message: _25.GetChainDescriptorResponse): Uint8Array;
                    toProtoMsg(message: _25.GetChainDescriptorResponse): _25.GetChainDescriptorResponseProtoMsg;
                };
                GetCodecDescriptorRequest: {
                    typeUrl: string;
                    aminoType: string;
                    encode(_: _25.GetCodecDescriptorRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _25.GetCodecDescriptorRequest;
                    fromPartial(_: {}): _25.GetCodecDescriptorRequest;
                    fromAmino(_: _25.GetCodecDescriptorRequestAmino): _25.GetCodecDescriptorRequest;
                    toAmino(_: _25.GetCodecDescriptorRequest): _25.GetCodecDescriptorRequestAmino;
                    fromAminoMsg(object: _25.GetCodecDescriptorRequestAminoMsg): _25.GetCodecDescriptorRequest;
                    toAminoMsg(message: _25.GetCodecDescriptorRequest): _25.GetCodecDescriptorRequestAminoMsg;
                    fromProtoMsg(message: _25.GetCodecDescriptorRequestProtoMsg): _25.GetCodecDescriptorRequest;
                    toProto(message: _25.GetCodecDescriptorRequest): Uint8Array;
                    toProtoMsg(message: _25.GetCodecDescriptorRequest): _25.GetCodecDescriptorRequestProtoMsg;
                };
                GetCodecDescriptorResponse: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _25.GetCodecDescriptorResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _25.GetCodecDescriptorResponse;
                    fromPartial(object: {
                        codec?: {
                            interfaces?: {
                                fullname?: string;
                                interfaceAcceptingMessages?: {
                                    fullname?: string;
                                    fieldDescriptorNames?: string[];
                                }[];
                                interfaceImplementers?: {
                                    fullname?: string;
                                    typeUrl?: string;
                                }[];
                            }[];
                        };
                    }): _25.GetCodecDescriptorResponse;
                    fromAmino(object: _25.GetCodecDescriptorResponseAmino): _25.GetCodecDescriptorResponse;
                    toAmino(message: _25.GetCodecDescriptorResponse): _25.GetCodecDescriptorResponseAmino;
                    fromAminoMsg(object: _25.GetCodecDescriptorResponseAminoMsg): _25.GetCodecDescriptorResponse;
                    toAminoMsg(message: _25.GetCodecDescriptorResponse): _25.GetCodecDescriptorResponseAminoMsg;
                    fromProtoMsg(message: _25.GetCodecDescriptorResponseProtoMsg): _25.GetCodecDescriptorResponse;
                    toProto(message: _25.GetCodecDescriptorResponse): Uint8Array;
                    toProtoMsg(message: _25.GetCodecDescriptorResponse): _25.GetCodecDescriptorResponseProtoMsg;
                };
                GetConfigurationDescriptorRequest: {
                    typeUrl: string;
                    aminoType: string;
                    encode(_: _25.GetConfigurationDescriptorRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _25.GetConfigurationDescriptorRequest;
                    fromPartial(_: {}): _25.GetConfigurationDescriptorRequest;
                    fromAmino(_: _25.GetConfigurationDescriptorRequestAmino): _25.GetConfigurationDescriptorRequest;
                    toAmino(_: _25.GetConfigurationDescriptorRequest): _25.GetConfigurationDescriptorRequestAmino;
                    fromAminoMsg(object: _25.GetConfigurationDescriptorRequestAminoMsg): _25.GetConfigurationDescriptorRequest;
                    toAminoMsg(message: _25.GetConfigurationDescriptorRequest): _25.GetConfigurationDescriptorRequestAminoMsg;
                    fromProtoMsg(message: _25.GetConfigurationDescriptorRequestProtoMsg): _25.GetConfigurationDescriptorRequest;
                    toProto(message: _25.GetConfigurationDescriptorRequest): Uint8Array;
                    toProtoMsg(message: _25.GetConfigurationDescriptorRequest): _25.GetConfigurationDescriptorRequestProtoMsg;
                };
                GetConfigurationDescriptorResponse: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _25.GetConfigurationDescriptorResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _25.GetConfigurationDescriptorResponse;
                    fromPartial(object: {
                        config?: {
                            bech32AccountAddressPrefix?: string;
                        };
                    }): _25.GetConfigurationDescriptorResponse;
                    fromAmino(object: _25.GetConfigurationDescriptorResponseAmino): _25.GetConfigurationDescriptorResponse;
                    toAmino(message: _25.GetConfigurationDescriptorResponse): _25.GetConfigurationDescriptorResponseAmino;
                    fromAminoMsg(object: _25.GetConfigurationDescriptorResponseAminoMsg): _25.GetConfigurationDescriptorResponse;
                    toAminoMsg(message: _25.GetConfigurationDescriptorResponse): _25.GetConfigurationDescriptorResponseAminoMsg;
                    fromProtoMsg(message: _25.GetConfigurationDescriptorResponseProtoMsg): _25.GetConfigurationDescriptorResponse;
                    toProto(message: _25.GetConfigurationDescriptorResponse): Uint8Array;
                    toProtoMsg(message: _25.GetConfigurationDescriptorResponse): _25.GetConfigurationDescriptorResponseProtoMsg;
                };
                GetQueryServicesDescriptorRequest: {
                    typeUrl: string;
                    aminoType: string;
                    encode(_: _25.GetQueryServicesDescriptorRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _25.GetQueryServicesDescriptorRequest;
                    fromPartial(_: {}): _25.GetQueryServicesDescriptorRequest;
                    fromAmino(_: _25.GetQueryServicesDescriptorRequestAmino): _25.GetQueryServicesDescriptorRequest;
                    toAmino(_: _25.GetQueryServicesDescriptorRequest): _25.GetQueryServicesDescriptorRequestAmino;
                    fromAminoMsg(object: _25.GetQueryServicesDescriptorRequestAminoMsg): _25.GetQueryServicesDescriptorRequest;
                    toAminoMsg(message: _25.GetQueryServicesDescriptorRequest): _25.GetQueryServicesDescriptorRequestAminoMsg;
                    fromProtoMsg(message: _25.GetQueryServicesDescriptorRequestProtoMsg): _25.GetQueryServicesDescriptorRequest;
                    toProto(message: _25.GetQueryServicesDescriptorRequest): Uint8Array;
                    toProtoMsg(message: _25.GetQueryServicesDescriptorRequest): _25.GetQueryServicesDescriptorRequestProtoMsg;
                };
                GetQueryServicesDescriptorResponse: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _25.GetQueryServicesDescriptorResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _25.GetQueryServicesDescriptorResponse;
                    fromPartial(object: {
                        queries?: {
                            queryServices?: {
                                fullname?: string;
                                isModule?: boolean;
                                methods?: {
                                    name?: string;
                                    fullQueryPath?: string;
                                }[];
                            }[];
                        };
                    }): _25.GetQueryServicesDescriptorResponse;
                    fromAmino(object: _25.GetQueryServicesDescriptorResponseAmino): _25.GetQueryServicesDescriptorResponse;
                    toAmino(message: _25.GetQueryServicesDescriptorResponse): _25.GetQueryServicesDescriptorResponseAmino;
                    fromAminoMsg(object: _25.GetQueryServicesDescriptorResponseAminoMsg): _25.GetQueryServicesDescriptorResponse;
                    toAminoMsg(message: _25.GetQueryServicesDescriptorResponse): _25.GetQueryServicesDescriptorResponseAminoMsg;
                    fromProtoMsg(message: _25.GetQueryServicesDescriptorResponseProtoMsg): _25.GetQueryServicesDescriptorResponse;
                    toProto(message: _25.GetQueryServicesDescriptorResponse): Uint8Array;
                    toProtoMsg(message: _25.GetQueryServicesDescriptorResponse): _25.GetQueryServicesDescriptorResponseProtoMsg;
                };
                GetTxDescriptorRequest: {
                    typeUrl: string;
                    aminoType: string;
                    encode(_: _25.GetTxDescriptorRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _25.GetTxDescriptorRequest;
                    fromPartial(_: {}): _25.GetTxDescriptorRequest;
                    fromAmino(_: _25.GetTxDescriptorRequestAmino): _25.GetTxDescriptorRequest;
                    toAmino(_: _25.GetTxDescriptorRequest): _25.GetTxDescriptorRequestAmino;
                    fromAminoMsg(object: _25.GetTxDescriptorRequestAminoMsg): _25.GetTxDescriptorRequest;
                    toAminoMsg(message: _25.GetTxDescriptorRequest): _25.GetTxDescriptorRequestAminoMsg;
                    fromProtoMsg(message: _25.GetTxDescriptorRequestProtoMsg): _25.GetTxDescriptorRequest;
                    toProto(message: _25.GetTxDescriptorRequest): Uint8Array;
                    toProtoMsg(message: _25.GetTxDescriptorRequest): _25.GetTxDescriptorRequestProtoMsg;
                };
                GetTxDescriptorResponse: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _25.GetTxDescriptorResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _25.GetTxDescriptorResponse;
                    fromPartial(object: {
                        tx?: {
                            fullname?: string;
                            msgs?: {
                                msgTypeUrl?: string;
                            }[];
                        };
                    }): _25.GetTxDescriptorResponse;
                    fromAmino(object: _25.GetTxDescriptorResponseAmino): _25.GetTxDescriptorResponse;
                    toAmino(message: _25.GetTxDescriptorResponse): _25.GetTxDescriptorResponseAmino;
                    fromAminoMsg(object: _25.GetTxDescriptorResponseAminoMsg): _25.GetTxDescriptorResponse;
                    toAminoMsg(message: _25.GetTxDescriptorResponse): _25.GetTxDescriptorResponseAminoMsg;
                    fromProtoMsg(message: _25.GetTxDescriptorResponseProtoMsg): _25.GetTxDescriptorResponse;
                    toProto(message: _25.GetTxDescriptorResponse): Uint8Array;
                    toProtoMsg(message: _25.GetTxDescriptorResponse): _25.GetTxDescriptorResponseProtoMsg;
                };
                QueryServicesDescriptor: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _25.QueryServicesDescriptor, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _25.QueryServicesDescriptor;
                    fromPartial(object: {
                        queryServices?: {
                            fullname?: string;
                            isModule?: boolean;
                            methods?: {
                                name?: string;
                                fullQueryPath?: string;
                            }[];
                        }[];
                    }): _25.QueryServicesDescriptor;
                    fromAmino(object: _25.QueryServicesDescriptorAmino): _25.QueryServicesDescriptor;
                    toAmino(message: _25.QueryServicesDescriptor): _25.QueryServicesDescriptorAmino;
                    fromAminoMsg(object: _25.QueryServicesDescriptorAminoMsg): _25.QueryServicesDescriptor;
                    toAminoMsg(message: _25.QueryServicesDescriptor): _25.QueryServicesDescriptorAminoMsg;
                    fromProtoMsg(message: _25.QueryServicesDescriptorProtoMsg): _25.QueryServicesDescriptor;
                    toProto(message: _25.QueryServicesDescriptor): Uint8Array;
                    toProtoMsg(message: _25.QueryServicesDescriptor): _25.QueryServicesDescriptorProtoMsg;
                };
                QueryServiceDescriptor: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _25.QueryServiceDescriptor, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _25.QueryServiceDescriptor;
                    fromPartial(object: {
                        fullname?: string;
                        isModule?: boolean;
                        methods?: {
                            name?: string;
                            fullQueryPath?: string;
                        }[];
                    }): _25.QueryServiceDescriptor;
                    fromAmino(object: _25.QueryServiceDescriptorAmino): _25.QueryServiceDescriptor;
                    toAmino(message: _25.QueryServiceDescriptor): _25.QueryServiceDescriptorAmino;
                    fromAminoMsg(object: _25.QueryServiceDescriptorAminoMsg): _25.QueryServiceDescriptor;
                    toAminoMsg(message: _25.QueryServiceDescriptor): _25.QueryServiceDescriptorAminoMsg;
                    fromProtoMsg(message: _25.QueryServiceDescriptorProtoMsg): _25.QueryServiceDescriptor;
                    toProto(message: _25.QueryServiceDescriptor): Uint8Array;
                    toProtoMsg(message: _25.QueryServiceDescriptor): _25.QueryServiceDescriptorProtoMsg;
                };
                QueryMethodDescriptor: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _25.QueryMethodDescriptor, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _25.QueryMethodDescriptor;
                    fromPartial(object: {
                        name?: string;
                        fullQueryPath?: string;
                    }): _25.QueryMethodDescriptor;
                    fromAmino(object: _25.QueryMethodDescriptorAmino): _25.QueryMethodDescriptor;
                    toAmino(message: _25.QueryMethodDescriptor): _25.QueryMethodDescriptorAmino;
                    fromAminoMsg(object: _25.QueryMethodDescriptorAminoMsg): _25.QueryMethodDescriptor;
                    toAminoMsg(message: _25.QueryMethodDescriptor): _25.QueryMethodDescriptorAminoMsg;
                    fromProtoMsg(message: _25.QueryMethodDescriptorProtoMsg): _25.QueryMethodDescriptor;
                    toProto(message: _25.QueryMethodDescriptor): Uint8Array;
                    toProtoMsg(message: _25.QueryMethodDescriptor): _25.QueryMethodDescriptorProtoMsg;
                };
            };
        }
        const v1beta1: {
            Coin: {
                typeUrl: string;
                aminoType: string;
                encode(message: _26.Coin, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _26.Coin;
                fromPartial(object: {
                    denom?: string;
                    amount?: string;
                }): _26.Coin;
                fromAmino(object: _26.CoinAmino): _26.Coin;
                toAmino(message: _26.Coin): _26.CoinAmino;
                fromAminoMsg(object: _26.CoinAminoMsg): _26.Coin;
                toAminoMsg(message: _26.Coin): _26.CoinAminoMsg;
                fromProtoMsg(message: _26.CoinProtoMsg): _26.Coin;
                toProto(message: _26.Coin): Uint8Array;
                toProtoMsg(message: _26.Coin): _26.CoinProtoMsg;
            };
            DecCoin: {
                typeUrl: string;
                aminoType: string;
                encode(message: _26.DecCoin, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _26.DecCoin;
                fromPartial(object: {
                    denom?: string;
                    amount?: string;
                }): _26.DecCoin;
                fromAmino(object: _26.DecCoinAmino): _26.DecCoin;
                toAmino(message: _26.DecCoin): _26.DecCoinAmino;
                fromAminoMsg(object: _26.DecCoinAminoMsg): _26.DecCoin;
                toAminoMsg(message: _26.DecCoin): _26.DecCoinAminoMsg;
                fromProtoMsg(message: _26.DecCoinProtoMsg): _26.DecCoin;
                toProto(message: _26.DecCoin): Uint8Array;
                toProtoMsg(message: _26.DecCoin): _26.DecCoinProtoMsg;
            };
        };
    }
    namespace circuit {
        namespace module {
            const v1: {
                Module: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _27.Module, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _27.Module;
                    fromPartial(object: {
                        authority?: string;
                    }): _27.Module;
                    fromAmino(object: _27.ModuleAmino): _27.Module;
                    toAmino(message: _27.Module): _27.ModuleAmino;
                    fromAminoMsg(object: _27.ModuleAminoMsg): _27.Module;
                    toAminoMsg(message: _27.Module): _27.ModuleAminoMsg;
                    fromProtoMsg(message: _27.ModuleProtoMsg): _27.Module;
                    toProto(message: _27.Module): Uint8Array;
                    toProtoMsg(message: _27.Module): _27.ModuleProtoMsg;
                };
            };
        }
        const v1: {
            MsgClientImpl: typeof _232.MsgClientImpl;
            QueryClientImpl: typeof _215.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                account(request: _28.QueryAccountRequest): Promise<_28.AccountResponse>;
                accounts(request?: _28.QueryAccountsRequest): Promise<_28.AccountsResponse>;
                disabledList(request?: _28.QueryDisabledListRequest): Promise<_28.DisabledListResponse>;
            };
            LCDQueryClient: typeof _198.LCDQueryClient;
            registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
            load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
            MessageComposer: {
                encoded: {
                    authorizeCircuitBreaker(value: _29.MsgAuthorizeCircuitBreaker): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    tripCircuitBreaker(value: _29.MsgTripCircuitBreaker): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    resetCircuitBreaker(value: _29.MsgResetCircuitBreaker): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                };
                withTypeUrl: {
                    authorizeCircuitBreaker(value: _29.MsgAuthorizeCircuitBreaker): {
                        typeUrl: string;
                        value: _29.MsgAuthorizeCircuitBreaker;
                    };
                    tripCircuitBreaker(value: _29.MsgTripCircuitBreaker): {
                        typeUrl: string;
                        value: _29.MsgTripCircuitBreaker;
                    };
                    resetCircuitBreaker(value: _29.MsgResetCircuitBreaker): {
                        typeUrl: string;
                        value: _29.MsgResetCircuitBreaker;
                    };
                };
                fromPartial: {
                    authorizeCircuitBreaker(value: _29.MsgAuthorizeCircuitBreaker): {
                        typeUrl: string;
                        value: _29.MsgAuthorizeCircuitBreaker;
                    };
                    tripCircuitBreaker(value: _29.MsgTripCircuitBreaker): {
                        typeUrl: string;
                        value: _29.MsgTripCircuitBreaker;
                    };
                    resetCircuitBreaker(value: _29.MsgResetCircuitBreaker): {
                        typeUrl: string;
                        value: _29.MsgResetCircuitBreaker;
                    };
                };
            };
            AminoConverter: {
                "/cosmos.circuit.v1.MsgAuthorizeCircuitBreaker": {
                    aminoType: string;
                    toAmino: (message: _29.MsgAuthorizeCircuitBreaker) => _29.MsgAuthorizeCircuitBreakerAmino;
                    fromAmino: (object: _29.MsgAuthorizeCircuitBreakerAmino) => _29.MsgAuthorizeCircuitBreaker;
                };
                "/cosmos.circuit.v1.MsgTripCircuitBreaker": {
                    aminoType: string;
                    toAmino: (message: _29.MsgTripCircuitBreaker) => _29.MsgTripCircuitBreakerAmino;
                    fromAmino: (object: _29.MsgTripCircuitBreakerAmino) => _29.MsgTripCircuitBreaker;
                };
                "/cosmos.circuit.v1.MsgResetCircuitBreaker": {
                    aminoType: string;
                    toAmino: (message: _29.MsgResetCircuitBreaker) => _29.MsgResetCircuitBreakerAmino;
                    fromAmino: (object: _29.MsgResetCircuitBreakerAmino) => _29.MsgResetCircuitBreaker;
                };
            };
            permissions_LevelFromJSON(object: any): _30.Permissions_Level;
            permissions_LevelToJSON(object: _30.Permissions_Level): string;
            Permissions_Level: typeof _30.Permissions_Level;
            Permissions_LevelSDKType: typeof _30.Permissions_Level;
            Permissions_LevelAmino: typeof _30.Permissions_Level;
            Permissions: {
                typeUrl: string;
                aminoType: string;
                encode(message: _30.Permissions, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _30.Permissions;
                fromPartial(object: {
                    level?: _30.Permissions_Level;
                    limitTypeUrls?: string[];
                }): _30.Permissions;
                fromAmino(object: _30.PermissionsAmino): _30.Permissions;
                toAmino(message: _30.Permissions): _30.PermissionsAmino;
                fromAminoMsg(object: _30.PermissionsAminoMsg): _30.Permissions;
                toAminoMsg(message: _30.Permissions): _30.PermissionsAminoMsg;
                fromProtoMsg(message: _30.PermissionsProtoMsg): _30.Permissions;
                toProto(message: _30.Permissions): Uint8Array;
                toProtoMsg(message: _30.Permissions): _30.PermissionsProtoMsg;
            };
            GenesisAccountPermissions: {
                typeUrl: string;
                aminoType: string;
                encode(message: _30.GenesisAccountPermissions, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _30.GenesisAccountPermissions;
                fromPartial(object: {
                    address?: string;
                    permissions?: {
                        level?: _30.Permissions_Level;
                        limitTypeUrls?: string[];
                    };
                }): _30.GenesisAccountPermissions;
                fromAmino(object: _30.GenesisAccountPermissionsAmino): _30.GenesisAccountPermissions;
                toAmino(message: _30.GenesisAccountPermissions): _30.GenesisAccountPermissionsAmino;
                fromAminoMsg(object: _30.GenesisAccountPermissionsAminoMsg): _30.GenesisAccountPermissions;
                toAminoMsg(message: _30.GenesisAccountPermissions): _30.GenesisAccountPermissionsAminoMsg;
                fromProtoMsg(message: _30.GenesisAccountPermissionsProtoMsg): _30.GenesisAccountPermissions;
                toProto(message: _30.GenesisAccountPermissions): Uint8Array;
                toProtoMsg(message: _30.GenesisAccountPermissions): _30.GenesisAccountPermissionsProtoMsg;
            };
            GenesisState: {
                typeUrl: string;
                aminoType: string;
                encode(message: _30.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _30.GenesisState;
                fromPartial(object: {
                    accountPermissions?: {
                        address?: string;
                        permissions?: {
                            level?: _30.Permissions_Level;
                            limitTypeUrls?: string[];
                        };
                    }[];
                    disabledTypeUrls?: string[];
                }): _30.GenesisState;
                fromAmino(object: _30.GenesisStateAmino): _30.GenesisState;
                toAmino(message: _30.GenesisState): _30.GenesisStateAmino;
                fromAminoMsg(object: _30.GenesisStateAminoMsg): _30.GenesisState;
                toAminoMsg(message: _30.GenesisState): _30.GenesisStateAminoMsg;
                fromProtoMsg(message: _30.GenesisStateProtoMsg): _30.GenesisState;
                toProto(message: _30.GenesisState): Uint8Array;
                toProtoMsg(message: _30.GenesisState): _30.GenesisStateProtoMsg;
            };
            MsgAuthorizeCircuitBreaker: {
                typeUrl: string;
                aminoType: string;
                encode(message: _29.MsgAuthorizeCircuitBreaker, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _29.MsgAuthorizeCircuitBreaker;
                fromPartial(object: {
                    granter?: string;
                    grantee?: string;
                    permissions?: {
                        level?: _30.Permissions_Level;
                        limitTypeUrls?: string[];
                    };
                }): _29.MsgAuthorizeCircuitBreaker;
                fromAmino(object: _29.MsgAuthorizeCircuitBreakerAmino): _29.MsgAuthorizeCircuitBreaker;
                toAmino(message: _29.MsgAuthorizeCircuitBreaker): _29.MsgAuthorizeCircuitBreakerAmino;
                fromAminoMsg(object: _29.MsgAuthorizeCircuitBreakerAminoMsg): _29.MsgAuthorizeCircuitBreaker;
                toAminoMsg(message: _29.MsgAuthorizeCircuitBreaker): _29.MsgAuthorizeCircuitBreakerAminoMsg;
                fromProtoMsg(message: _29.MsgAuthorizeCircuitBreakerProtoMsg): _29.MsgAuthorizeCircuitBreaker;
                toProto(message: _29.MsgAuthorizeCircuitBreaker): Uint8Array;
                toProtoMsg(message: _29.MsgAuthorizeCircuitBreaker): _29.MsgAuthorizeCircuitBreakerProtoMsg;
            };
            MsgAuthorizeCircuitBreakerResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _29.MsgAuthorizeCircuitBreakerResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _29.MsgAuthorizeCircuitBreakerResponse;
                fromPartial(object: {
                    success?: boolean;
                }): _29.MsgAuthorizeCircuitBreakerResponse;
                fromAmino(object: _29.MsgAuthorizeCircuitBreakerResponseAmino): _29.MsgAuthorizeCircuitBreakerResponse;
                toAmino(message: _29.MsgAuthorizeCircuitBreakerResponse): _29.MsgAuthorizeCircuitBreakerResponseAmino;
                fromAminoMsg(object: _29.MsgAuthorizeCircuitBreakerResponseAminoMsg): _29.MsgAuthorizeCircuitBreakerResponse;
                toAminoMsg(message: _29.MsgAuthorizeCircuitBreakerResponse): _29.MsgAuthorizeCircuitBreakerResponseAminoMsg;
                fromProtoMsg(message: _29.MsgAuthorizeCircuitBreakerResponseProtoMsg): _29.MsgAuthorizeCircuitBreakerResponse;
                toProto(message: _29.MsgAuthorizeCircuitBreakerResponse): Uint8Array;
                toProtoMsg(message: _29.MsgAuthorizeCircuitBreakerResponse): _29.MsgAuthorizeCircuitBreakerResponseProtoMsg;
            };
            MsgTripCircuitBreaker: {
                typeUrl: string;
                aminoType: string;
                encode(message: _29.MsgTripCircuitBreaker, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _29.MsgTripCircuitBreaker;
                fromPartial(object: {
                    authority?: string;
                    msgTypeUrls?: string[];
                }): _29.MsgTripCircuitBreaker;
                fromAmino(object: _29.MsgTripCircuitBreakerAmino): _29.MsgTripCircuitBreaker;
                toAmino(message: _29.MsgTripCircuitBreaker): _29.MsgTripCircuitBreakerAmino;
                fromAminoMsg(object: _29.MsgTripCircuitBreakerAminoMsg): _29.MsgTripCircuitBreaker;
                toAminoMsg(message: _29.MsgTripCircuitBreaker): _29.MsgTripCircuitBreakerAminoMsg;
                fromProtoMsg(message: _29.MsgTripCircuitBreakerProtoMsg): _29.MsgTripCircuitBreaker;
                toProto(message: _29.MsgTripCircuitBreaker): Uint8Array;
                toProtoMsg(message: _29.MsgTripCircuitBreaker): _29.MsgTripCircuitBreakerProtoMsg;
            };
            MsgTripCircuitBreakerResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _29.MsgTripCircuitBreakerResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _29.MsgTripCircuitBreakerResponse;
                fromPartial(object: {
                    success?: boolean;
                }): _29.MsgTripCircuitBreakerResponse;
                fromAmino(object: _29.MsgTripCircuitBreakerResponseAmino): _29.MsgTripCircuitBreakerResponse;
                toAmino(message: _29.MsgTripCircuitBreakerResponse): _29.MsgTripCircuitBreakerResponseAmino;
                fromAminoMsg(object: _29.MsgTripCircuitBreakerResponseAminoMsg): _29.MsgTripCircuitBreakerResponse;
                toAminoMsg(message: _29.MsgTripCircuitBreakerResponse): _29.MsgTripCircuitBreakerResponseAminoMsg;
                fromProtoMsg(message: _29.MsgTripCircuitBreakerResponseProtoMsg): _29.MsgTripCircuitBreakerResponse;
                toProto(message: _29.MsgTripCircuitBreakerResponse): Uint8Array;
                toProtoMsg(message: _29.MsgTripCircuitBreakerResponse): _29.MsgTripCircuitBreakerResponseProtoMsg;
            };
            MsgResetCircuitBreaker: {
                typeUrl: string;
                aminoType: string;
                encode(message: _29.MsgResetCircuitBreaker, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _29.MsgResetCircuitBreaker;
                fromPartial(object: {
                    authority?: string;
                    msgTypeUrls?: string[];
                }): _29.MsgResetCircuitBreaker;
                fromAmino(object: _29.MsgResetCircuitBreakerAmino): _29.MsgResetCircuitBreaker;
                toAmino(message: _29.MsgResetCircuitBreaker): _29.MsgResetCircuitBreakerAmino;
                fromAminoMsg(object: _29.MsgResetCircuitBreakerAminoMsg): _29.MsgResetCircuitBreaker;
                toAminoMsg(message: _29.MsgResetCircuitBreaker): _29.MsgResetCircuitBreakerAminoMsg;
                fromProtoMsg(message: _29.MsgResetCircuitBreakerProtoMsg): _29.MsgResetCircuitBreaker;
                toProto(message: _29.MsgResetCircuitBreaker): Uint8Array;
                toProtoMsg(message: _29.MsgResetCircuitBreaker): _29.MsgResetCircuitBreakerProtoMsg;
            };
            MsgResetCircuitBreakerResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _29.MsgResetCircuitBreakerResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _29.MsgResetCircuitBreakerResponse;
                fromPartial(object: {
                    success?: boolean;
                }): _29.MsgResetCircuitBreakerResponse;
                fromAmino(object: _29.MsgResetCircuitBreakerResponseAmino): _29.MsgResetCircuitBreakerResponse;
                toAmino(message: _29.MsgResetCircuitBreakerResponse): _29.MsgResetCircuitBreakerResponseAmino;
                fromAminoMsg(object: _29.MsgResetCircuitBreakerResponseAminoMsg): _29.MsgResetCircuitBreakerResponse;
                toAminoMsg(message: _29.MsgResetCircuitBreakerResponse): _29.MsgResetCircuitBreakerResponseAminoMsg;
                fromProtoMsg(message: _29.MsgResetCircuitBreakerResponseProtoMsg): _29.MsgResetCircuitBreakerResponse;
                toProto(message: _29.MsgResetCircuitBreakerResponse): Uint8Array;
                toProtoMsg(message: _29.MsgResetCircuitBreakerResponse): _29.MsgResetCircuitBreakerResponseProtoMsg;
            };
            QueryAccountRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _28.QueryAccountRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _28.QueryAccountRequest;
                fromPartial(object: {
                    address?: string;
                }): _28.QueryAccountRequest;
                fromAmino(object: _28.QueryAccountRequestAmino): _28.QueryAccountRequest;
                toAmino(message: _28.QueryAccountRequest): _28.QueryAccountRequestAmino;
                fromAminoMsg(object: _28.QueryAccountRequestAminoMsg): _28.QueryAccountRequest;
                toAminoMsg(message: _28.QueryAccountRequest): _28.QueryAccountRequestAminoMsg;
                fromProtoMsg(message: _28.QueryAccountRequestProtoMsg): _28.QueryAccountRequest;
                toProto(message: _28.QueryAccountRequest): Uint8Array;
                toProtoMsg(message: _28.QueryAccountRequest): _28.QueryAccountRequestProtoMsg;
            };
            AccountResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _28.AccountResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _28.AccountResponse;
                fromPartial(object: {
                    permission?: {
                        level?: _30.Permissions_Level;
                        limitTypeUrls?: string[];
                    };
                }): _28.AccountResponse;
                fromAmino(object: _28.AccountResponseAmino): _28.AccountResponse;
                toAmino(message: _28.AccountResponse): _28.AccountResponseAmino;
                fromAminoMsg(object: _28.AccountResponseAminoMsg): _28.AccountResponse;
                toAminoMsg(message: _28.AccountResponse): _28.AccountResponseAminoMsg;
                fromProtoMsg(message: _28.AccountResponseProtoMsg): _28.AccountResponse;
                toProto(message: _28.AccountResponse): Uint8Array;
                toProtoMsg(message: _28.AccountResponse): _28.AccountResponseProtoMsg;
            };
            QueryAccountsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _28.QueryAccountsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _28.QueryAccountsRequest;
                fromPartial(object: {
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _28.QueryAccountsRequest;
                fromAmino(object: _28.QueryAccountsRequestAmino): _28.QueryAccountsRequest;
                toAmino(message: _28.QueryAccountsRequest): _28.QueryAccountsRequestAmino;
                fromAminoMsg(object: _28.QueryAccountsRequestAminoMsg): _28.QueryAccountsRequest;
                toAminoMsg(message: _28.QueryAccountsRequest): _28.QueryAccountsRequestAminoMsg;
                fromProtoMsg(message: _28.QueryAccountsRequestProtoMsg): _28.QueryAccountsRequest;
                toProto(message: _28.QueryAccountsRequest): Uint8Array;
                toProtoMsg(message: _28.QueryAccountsRequest): _28.QueryAccountsRequestProtoMsg;
            };
            AccountsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _28.AccountsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _28.AccountsResponse;
                fromPartial(object: {
                    accounts?: {
                        address?: string;
                        permissions?: {
                            level?: _30.Permissions_Level;
                            limitTypeUrls?: string[];
                        };
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _28.AccountsResponse;
                fromAmino(object: _28.AccountsResponseAmino): _28.AccountsResponse;
                toAmino(message: _28.AccountsResponse): _28.AccountsResponseAmino;
                fromAminoMsg(object: _28.AccountsResponseAminoMsg): _28.AccountsResponse;
                toAminoMsg(message: _28.AccountsResponse): _28.AccountsResponseAminoMsg;
                fromProtoMsg(message: _28.AccountsResponseProtoMsg): _28.AccountsResponse;
                toProto(message: _28.AccountsResponse): Uint8Array;
                toProtoMsg(message: _28.AccountsResponse): _28.AccountsResponseProtoMsg;
            };
            QueryDisabledListRequest: {
                typeUrl: string;
                aminoType: string;
                encode(_: _28.QueryDisabledListRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _28.QueryDisabledListRequest;
                fromPartial(_: {}): _28.QueryDisabledListRequest;
                fromAmino(_: _28.QueryDisabledListRequestAmino): _28.QueryDisabledListRequest;
                toAmino(_: _28.QueryDisabledListRequest): _28.QueryDisabledListRequestAmino;
                fromAminoMsg(object: _28.QueryDisabledListRequestAminoMsg): _28.QueryDisabledListRequest;
                toAminoMsg(message: _28.QueryDisabledListRequest): _28.QueryDisabledListRequestAminoMsg;
                fromProtoMsg(message: _28.QueryDisabledListRequestProtoMsg): _28.QueryDisabledListRequest;
                toProto(message: _28.QueryDisabledListRequest): Uint8Array;
                toProtoMsg(message: _28.QueryDisabledListRequest): _28.QueryDisabledListRequestProtoMsg;
            };
            DisabledListResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _28.DisabledListResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _28.DisabledListResponse;
                fromPartial(object: {
                    disabledList?: string[];
                }): _28.DisabledListResponse;
                fromAmino(object: _28.DisabledListResponseAmino): _28.DisabledListResponse;
                toAmino(message: _28.DisabledListResponse): _28.DisabledListResponseAmino;
                fromAminoMsg(object: _28.DisabledListResponseAminoMsg): _28.DisabledListResponse;
                toAminoMsg(message: _28.DisabledListResponse): _28.DisabledListResponseAminoMsg;
                fromProtoMsg(message: _28.DisabledListResponseProtoMsg): _28.DisabledListResponse;
                toProto(message: _28.DisabledListResponse): Uint8Array;
                toProtoMsg(message: _28.DisabledListResponse): _28.DisabledListResponseProtoMsg;
            };
        };
    }
    namespace consensus {
        namespace module {
            const v1: {
                Module: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _31.Module, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _31.Module;
                    fromPartial(object: {
                        authority?: string;
                    }): _31.Module;
                    fromAmino(object: _31.ModuleAmino): _31.Module;
                    toAmino(message: _31.Module): _31.ModuleAmino;
                    fromAminoMsg(object: _31.ModuleAminoMsg): _31.Module;
                    toAminoMsg(message: _31.Module): _31.ModuleAminoMsg;
                    fromProtoMsg(message: _31.ModuleProtoMsg): _31.Module;
                    toProto(message: _31.Module): Uint8Array;
                    toProtoMsg(message: _31.Module): _31.ModuleProtoMsg;
                };
            };
        }
        const v1: {
            MsgClientImpl: typeof _233.MsgClientImpl;
            QueryClientImpl: typeof _216.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                params(request?: _32.QueryParamsRequest): Promise<_32.QueryParamsResponse>;
            };
            LCDQueryClient: typeof _199.LCDQueryClient;
            registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
            load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
            MessageComposer: {
                encoded: {
                    updateParams(value: _33.MsgUpdateParams): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                };
                withTypeUrl: {
                    updateParams(value: _33.MsgUpdateParams): {
                        typeUrl: string;
                        value: _33.MsgUpdateParams;
                    };
                };
                fromPartial: {
                    updateParams(value: _33.MsgUpdateParams): {
                        typeUrl: string;
                        value: _33.MsgUpdateParams;
                    };
                };
            };
            AminoConverter: {
                "/cosmos.consensus.v1.MsgUpdateParams": {
                    aminoType: string;
                    toAmino: (message: _33.MsgUpdateParams) => _33.MsgUpdateParamsAmino;
                    fromAmino: (object: _33.MsgUpdateParamsAmino) => _33.MsgUpdateParams;
                };
            };
            MsgUpdateParams: {
                typeUrl: string;
                aminoType: string;
                encode(message: _33.MsgUpdateParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _33.MsgUpdateParams;
                fromPartial(object: {
                    authority?: string;
                    block?: {
                        maxBytes?: bigint;
                        maxGas?: bigint;
                    };
                    evidence?: {
                        maxAgeNumBlocks?: bigint;
                        maxAgeDuration?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                        maxBytes?: bigint;
                    };
                    validator?: {
                        pubKeyTypes?: string[];
                    };
                    abci?: {
                        voteExtensionsEnableHeight?: bigint;
                    };
                }): _33.MsgUpdateParams;
                fromAmino(object: _33.MsgUpdateParamsAmino): _33.MsgUpdateParams;
                toAmino(message: _33.MsgUpdateParams): _33.MsgUpdateParamsAmino;
                fromAminoMsg(object: _33.MsgUpdateParamsAminoMsg): _33.MsgUpdateParams;
                toAminoMsg(message: _33.MsgUpdateParams): _33.MsgUpdateParamsAminoMsg;
                fromProtoMsg(message: _33.MsgUpdateParamsProtoMsg): _33.MsgUpdateParams;
                toProto(message: _33.MsgUpdateParams): Uint8Array;
                toProtoMsg(message: _33.MsgUpdateParams): _33.MsgUpdateParamsProtoMsg;
            };
            MsgUpdateParamsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _33.MsgUpdateParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _33.MsgUpdateParamsResponse;
                fromPartial(_: {}): _33.MsgUpdateParamsResponse;
                fromAmino(_: _33.MsgUpdateParamsResponseAmino): _33.MsgUpdateParamsResponse;
                toAmino(_: _33.MsgUpdateParamsResponse): _33.MsgUpdateParamsResponseAmino;
                fromAminoMsg(object: _33.MsgUpdateParamsResponseAminoMsg): _33.MsgUpdateParamsResponse;
                toAminoMsg(message: _33.MsgUpdateParamsResponse): _33.MsgUpdateParamsResponseAminoMsg;
                fromProtoMsg(message: _33.MsgUpdateParamsResponseProtoMsg): _33.MsgUpdateParamsResponse;
                toProto(message: _33.MsgUpdateParamsResponse): Uint8Array;
                toProtoMsg(message: _33.MsgUpdateParamsResponse): _33.MsgUpdateParamsResponseProtoMsg;
            };
            QueryParamsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(_: _32.QueryParamsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _32.QueryParamsRequest;
                fromPartial(_: {}): _32.QueryParamsRequest;
                fromAmino(_: _32.QueryParamsRequestAmino): _32.QueryParamsRequest;
                toAmino(_: _32.QueryParamsRequest): _32.QueryParamsRequestAmino;
                fromAminoMsg(object: _32.QueryParamsRequestAminoMsg): _32.QueryParamsRequest;
                toAminoMsg(message: _32.QueryParamsRequest): _32.QueryParamsRequestAminoMsg;
                fromProtoMsg(message: _32.QueryParamsRequestProtoMsg): _32.QueryParamsRequest;
                toProto(message: _32.QueryParamsRequest): Uint8Array;
                toProtoMsg(message: _32.QueryParamsRequest): _32.QueryParamsRequestProtoMsg;
            };
            QueryParamsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _32.QueryParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _32.QueryParamsResponse;
                fromPartial(object: {
                    params?: {
                        block?: {
                            maxBytes?: bigint;
                            maxGas?: bigint;
                        };
                        evidence?: {
                            maxAgeNumBlocks?: bigint;
                            maxAgeDuration?: {
                                seconds?: bigint;
                                nanos?: number;
                            };
                            maxBytes?: bigint;
                        };
                        validator?: {
                            pubKeyTypes?: string[];
                        };
                        version?: {
                            app?: bigint;
                        };
                        abci?: {
                            voteExtensionsEnableHeight?: bigint;
                        };
                    };
                }): _32.QueryParamsResponse;
                fromAmino(object: _32.QueryParamsResponseAmino): _32.QueryParamsResponse;
                toAmino(message: _32.QueryParamsResponse): _32.QueryParamsResponseAmino;
                fromAminoMsg(object: _32.QueryParamsResponseAminoMsg): _32.QueryParamsResponse;
                toAminoMsg(message: _32.QueryParamsResponse): _32.QueryParamsResponseAminoMsg;
                fromProtoMsg(message: _32.QueryParamsResponseProtoMsg): _32.QueryParamsResponse;
                toProto(message: _32.QueryParamsResponse): Uint8Array;
                toProtoMsg(message: _32.QueryParamsResponse): _32.QueryParamsResponseProtoMsg;
            };
        };
    }
    namespace crisis {
        namespace module {
            const v1: {
                Module: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _34.Module, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _34.Module;
                    fromPartial(object: {
                        feeCollectorName?: string;
                        authority?: string;
                    }): _34.Module;
                    fromAmino(object: _34.ModuleAmino): _34.Module;
                    toAmino(message: _34.Module): _34.ModuleAmino;
                    fromAminoMsg(object: _34.ModuleAminoMsg): _34.Module;
                    toAminoMsg(message: _34.Module): _34.ModuleAminoMsg;
                    fromProtoMsg(message: _34.ModuleProtoMsg): _34.Module;
                    toProto(message: _34.Module): Uint8Array;
                    toProtoMsg(message: _34.Module): _34.ModuleProtoMsg;
                };
            };
        }
    }
    namespace crypto {
        const ed25519: {
            PubKey: {
                typeUrl: string;
                aminoType: string;
                encode(message: _35.PubKey, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _35.PubKey;
                fromPartial(object: {
                    key?: Uint8Array;
                }): _35.PubKey;
                fromAmino(object: _35.PubKeyAmino): _35.PubKey;
                toAmino(message: _35.PubKey): _35.PubKeyAmino;
                fromAminoMsg(object: _35.PubKeyAminoMsg): _35.PubKey;
                toAminoMsg(message: _35.PubKey): _35.PubKeyAminoMsg;
                fromProtoMsg(message: _35.PubKeyProtoMsg): _35.PubKey;
                toProto(message: _35.PubKey): Uint8Array;
                toProtoMsg(message: _35.PubKey): _35.PubKeyProtoMsg;
            };
            PrivKey: {
                typeUrl: string;
                aminoType: string;
                encode(message: _35.PrivKey, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _35.PrivKey;
                fromPartial(object: {
                    key?: Uint8Array;
                }): _35.PrivKey;
                fromAmino(object: _35.PrivKeyAmino): _35.PrivKey;
                toAmino(message: _35.PrivKey): _35.PrivKeyAmino;
                fromAminoMsg(object: _35.PrivKeyAminoMsg): _35.PrivKey;
                toAminoMsg(message: _35.PrivKey): _35.PrivKeyAminoMsg;
                fromProtoMsg(message: _35.PrivKeyProtoMsg): _35.PrivKey;
                toProto(message: _35.PrivKey): Uint8Array;
                toProtoMsg(message: _35.PrivKey): _35.PrivKeyProtoMsg;
            };
        };
        namespace hd {
            const v1: {
                BIP44Params: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _36.BIP44Params, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _36.BIP44Params;
                    fromPartial(object: {
                        purpose?: number;
                        coinType?: number;
                        account?: number;
                        change?: boolean;
                        addressIndex?: number;
                    }): _36.BIP44Params;
                    fromAmino(object: _36.BIP44ParamsAmino): _36.BIP44Params;
                    toAmino(message: _36.BIP44Params): _36.BIP44ParamsAmino;
                    fromAminoMsg(object: _36.BIP44ParamsAminoMsg): _36.BIP44Params;
                    toAminoMsg(message: _36.BIP44Params): _36.BIP44ParamsAminoMsg;
                    fromProtoMsg(message: _36.BIP44ParamsProtoMsg): _36.BIP44Params;
                    toProto(message: _36.BIP44Params): Uint8Array;
                    toProtoMsg(message: _36.BIP44Params): _36.BIP44ParamsProtoMsg;
                };
            };
        }
        namespace keyring {
            const v1: {
                Record: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _37.Record, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _37.Record;
                    fromPartial(object: {
                        name?: string;
                        pubKey?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        local?: {
                            privKey?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            };
                        };
                        ledger?: {
                            path?: {
                                purpose?: number;
                                coinType?: number;
                                account?: number;
                                change?: boolean;
                                addressIndex?: number;
                            };
                        };
                        multi?: {};
                        offline?: {};
                    }): _37.Record;
                    fromAmino(object: _37.RecordAmino): _37.Record;
                    toAmino(message: _37.Record): _37.RecordAmino;
                    fromAminoMsg(object: _37.RecordAminoMsg): _37.Record;
                    toAminoMsg(message: _37.Record): _37.RecordAminoMsg;
                    fromProtoMsg(message: _37.RecordProtoMsg): _37.Record;
                    toProto(message: _37.Record): Uint8Array;
                    toProtoMsg(message: _37.Record): _37.RecordProtoMsg;
                };
                Record_Local: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _37.Record_Local, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _37.Record_Local;
                    fromPartial(object: {
                        privKey?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                    }): _37.Record_Local;
                    fromAmino(object: _37.Record_LocalAmino): _37.Record_Local;
                    toAmino(message: _37.Record_Local): _37.Record_LocalAmino;
                    fromAminoMsg(object: _37.Record_LocalAminoMsg): _37.Record_Local;
                    toAminoMsg(message: _37.Record_Local): _37.Record_LocalAminoMsg;
                    fromProtoMsg(message: _37.Record_LocalProtoMsg): _37.Record_Local;
                    toProto(message: _37.Record_Local): Uint8Array;
                    toProtoMsg(message: _37.Record_Local): _37.Record_LocalProtoMsg;
                };
                Record_Ledger: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _37.Record_Ledger, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _37.Record_Ledger;
                    fromPartial(object: {
                        path?: {
                            purpose?: number;
                            coinType?: number;
                            account?: number;
                            change?: boolean;
                            addressIndex?: number;
                        };
                    }): _37.Record_Ledger;
                    fromAmino(object: _37.Record_LedgerAmino): _37.Record_Ledger;
                    toAmino(message: _37.Record_Ledger): _37.Record_LedgerAmino;
                    fromAminoMsg(object: _37.Record_LedgerAminoMsg): _37.Record_Ledger;
                    toAminoMsg(message: _37.Record_Ledger): _37.Record_LedgerAminoMsg;
                    fromProtoMsg(message: _37.Record_LedgerProtoMsg): _37.Record_Ledger;
                    toProto(message: _37.Record_Ledger): Uint8Array;
                    toProtoMsg(message: _37.Record_Ledger): _37.Record_LedgerProtoMsg;
                };
                Record_Multi: {
                    typeUrl: string;
                    aminoType: string;
                    encode(_: _37.Record_Multi, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _37.Record_Multi;
                    fromPartial(_: {}): _37.Record_Multi;
                    fromAmino(_: _37.Record_MultiAmino): _37.Record_Multi;
                    toAmino(_: _37.Record_Multi): _37.Record_MultiAmino;
                    fromAminoMsg(object: _37.Record_MultiAminoMsg): _37.Record_Multi;
                    toAminoMsg(message: _37.Record_Multi): _37.Record_MultiAminoMsg;
                    fromProtoMsg(message: _37.Record_MultiProtoMsg): _37.Record_Multi;
                    toProto(message: _37.Record_Multi): Uint8Array;
                    toProtoMsg(message: _37.Record_Multi): _37.Record_MultiProtoMsg;
                };
                Record_Offline: {
                    typeUrl: string;
                    aminoType: string;
                    encode(_: _37.Record_Offline, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _37.Record_Offline;
                    fromPartial(_: {}): _37.Record_Offline;
                    fromAmino(_: _37.Record_OfflineAmino): _37.Record_Offline;
                    toAmino(_: _37.Record_Offline): _37.Record_OfflineAmino;
                    fromAminoMsg(object: _37.Record_OfflineAminoMsg): _37.Record_Offline;
                    toAminoMsg(message: _37.Record_Offline): _37.Record_OfflineAminoMsg;
                    fromProtoMsg(message: _37.Record_OfflineProtoMsg): _37.Record_Offline;
                    toProto(message: _37.Record_Offline): Uint8Array;
                    toProtoMsg(message: _37.Record_Offline): _37.Record_OfflineProtoMsg;
                };
            };
        }
        const multisig: {
            LegacyAminoPubKey: {
                typeUrl: string;
                aminoType: string;
                encode(message: _38.LegacyAminoPubKey, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _38.LegacyAminoPubKey;
                fromPartial(object: {
                    threshold?: number;
                    publicKeys?: {
                        $typeUrl?: string;
                        typeUrl?: string;
                        value?: Uint8Array;
                    }[];
                }): _38.LegacyAminoPubKey;
                fromAmino(object: _38.LegacyAminoPubKeyAmino): _38.LegacyAminoPubKey;
                toAmino(message: _38.LegacyAminoPubKey): _38.LegacyAminoPubKeyAmino;
                fromAminoMsg(object: _38.LegacyAminoPubKeyAminoMsg): _38.LegacyAminoPubKey;
                toAminoMsg(message: _38.LegacyAminoPubKey): _38.LegacyAminoPubKeyAminoMsg;
                fromProtoMsg(message: _38.LegacyAminoPubKeyProtoMsg): _38.LegacyAminoPubKey;
                toProto(message: _38.LegacyAminoPubKey): Uint8Array;
                toProtoMsg(message: _38.LegacyAminoPubKey): _38.LegacyAminoPubKeyProtoMsg;
            };
        };
        const secp256k1: {
            PubKey: {
                typeUrl: string;
                aminoType: string;
                encode(message: _39.PubKey, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _39.PubKey;
                fromPartial(object: {
                    key?: Uint8Array;
                }): _39.PubKey;
                fromAmino(object: _39.PubKeyAmino): _39.PubKey;
                toAmino(message: _39.PubKey): _39.PubKeyAmino;
                fromAminoMsg(object: _39.PubKeyAminoMsg): _39.PubKey;
                toAminoMsg(message: _39.PubKey): _39.PubKeyAminoMsg;
                fromProtoMsg(message: _39.PubKeyProtoMsg): _39.PubKey;
                toProto(message: _39.PubKey): Uint8Array;
                toProtoMsg(message: _39.PubKey): _39.PubKeyProtoMsg;
            };
            PrivKey: {
                typeUrl: string;
                aminoType: string;
                encode(message: _39.PrivKey, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _39.PrivKey;
                fromPartial(object: {
                    key?: Uint8Array;
                }): _39.PrivKey;
                fromAmino(object: _39.PrivKeyAmino): _39.PrivKey;
                toAmino(message: _39.PrivKey): _39.PrivKeyAmino;
                fromAminoMsg(object: _39.PrivKeyAminoMsg): _39.PrivKey;
                toAminoMsg(message: _39.PrivKey): _39.PrivKeyAminoMsg;
                fromProtoMsg(message: _39.PrivKeyProtoMsg): _39.PrivKey;
                toProto(message: _39.PrivKey): Uint8Array;
                toProtoMsg(message: _39.PrivKey): _39.PrivKeyProtoMsg;
            };
        };
        const secp256r1: {
            PubKey: {
                typeUrl: string;
                aminoType: string;
                encode(message: _40.PubKey, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _40.PubKey;
                fromPartial(object: {
                    key?: Uint8Array;
                }): _40.PubKey;
                fromAmino(object: _40.PubKeyAmino): _40.PubKey;
                toAmino(message: _40.PubKey): _40.PubKeyAmino;
                fromAminoMsg(object: _40.PubKeyAminoMsg): _40.PubKey;
                toAminoMsg(message: _40.PubKey): _40.PubKeyAminoMsg;
                fromProtoMsg(message: _40.PubKeyProtoMsg): _40.PubKey;
                toProto(message: _40.PubKey): Uint8Array;
                toProtoMsg(message: _40.PubKey): _40.PubKeyProtoMsg;
            };
            PrivKey: {
                typeUrl: string;
                aminoType: string;
                encode(message: _40.PrivKey, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _40.PrivKey;
                fromPartial(object: {
                    secret?: Uint8Array;
                }): _40.PrivKey;
                fromAmino(object: _40.PrivKeyAmino): _40.PrivKey;
                toAmino(message: _40.PrivKey): _40.PrivKeyAmino;
                fromAminoMsg(object: _40.PrivKeyAminoMsg): _40.PrivKey;
                toAminoMsg(message: _40.PrivKey): _40.PrivKeyAminoMsg;
                fromProtoMsg(message: _40.PrivKeyProtoMsg): _40.PrivKey;
                toProto(message: _40.PrivKey): Uint8Array;
                toProtoMsg(message: _40.PrivKey): _40.PrivKeyProtoMsg;
            };
        };
    }
    namespace distribution {
        namespace module {
            const v1: {
                Module: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _41.Module, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _41.Module;
                    fromPartial(object: {
                        feeCollectorName?: string;
                        authority?: string;
                    }): _41.Module;
                    fromAmino(object: _41.ModuleAmino): _41.Module;
                    toAmino(message: _41.Module): _41.ModuleAmino;
                    fromAminoMsg(object: _41.ModuleAminoMsg): _41.Module;
                    toAminoMsg(message: _41.Module): _41.ModuleAminoMsg;
                    fromProtoMsg(message: _41.ModuleProtoMsg): _41.Module;
                    toProto(message: _41.Module): Uint8Array;
                    toProtoMsg(message: _41.Module): _41.ModuleProtoMsg;
                };
            };
        }
        const v1beta1: {
            MsgClientImpl: typeof _234.MsgClientImpl;
            QueryClientImpl: typeof _217.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                params(request?: _44.QueryParamsRequest): Promise<_44.QueryParamsResponse>;
                validatorDistributionInfo(request: _44.QueryValidatorDistributionInfoRequest): Promise<_44.QueryValidatorDistributionInfoResponse>;
                validatorOutstandingRewards(request: _44.QueryValidatorOutstandingRewardsRequest): Promise<_44.QueryValidatorOutstandingRewardsResponse>;
                validatorCommission(request: _44.QueryValidatorCommissionRequest): Promise<_44.QueryValidatorCommissionResponse>;
                validatorSlashes(request: _44.QueryValidatorSlashesRequest): Promise<_44.QueryValidatorSlashesResponse>;
                delegationRewards(request: _44.QueryDelegationRewardsRequest): Promise<_44.QueryDelegationRewardsResponse>;
                delegationTotalRewards(request: _44.QueryDelegationTotalRewardsRequest): Promise<_44.QueryDelegationTotalRewardsResponse>;
                delegatorValidators(request: _44.QueryDelegatorValidatorsRequest): Promise<_44.QueryDelegatorValidatorsResponse>;
                delegatorWithdrawAddress(request: _44.QueryDelegatorWithdrawAddressRequest): Promise<_44.QueryDelegatorWithdrawAddressResponse>;
                communityPool(request?: _44.QueryCommunityPoolRequest): Promise<_44.QueryCommunityPoolResponse>;
            };
            LCDQueryClient: typeof _200.LCDQueryClient;
            registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
            load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
            MessageComposer: {
                encoded: {
                    setWithdrawAddress(value: _45.MsgSetWithdrawAddress): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    withdrawDelegatorReward(value: _45.MsgWithdrawDelegatorReward): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    withdrawValidatorCommission(value: _45.MsgWithdrawValidatorCommission): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    fundCommunityPool(value: _45.MsgFundCommunityPool): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    updateParams(value: _45.MsgUpdateParams): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    communityPoolSpend(value: _45.MsgCommunityPoolSpend): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    depositValidatorRewardsPool(value: _45.MsgDepositValidatorRewardsPool): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                };
                withTypeUrl: {
                    setWithdrawAddress(value: _45.MsgSetWithdrawAddress): {
                        typeUrl: string;
                        value: _45.MsgSetWithdrawAddress;
                    };
                    withdrawDelegatorReward(value: _45.MsgWithdrawDelegatorReward): {
                        typeUrl: string;
                        value: _45.MsgWithdrawDelegatorReward;
                    };
                    withdrawValidatorCommission(value: _45.MsgWithdrawValidatorCommission): {
                        typeUrl: string;
                        value: _45.MsgWithdrawValidatorCommission;
                    };
                    fundCommunityPool(value: _45.MsgFundCommunityPool): {
                        typeUrl: string;
                        value: _45.MsgFundCommunityPool;
                    };
                    updateParams(value: _45.MsgUpdateParams): {
                        typeUrl: string;
                        value: _45.MsgUpdateParams;
                    };
                    communityPoolSpend(value: _45.MsgCommunityPoolSpend): {
                        typeUrl: string;
                        value: _45.MsgCommunityPoolSpend;
                    };
                    depositValidatorRewardsPool(value: _45.MsgDepositValidatorRewardsPool): {
                        typeUrl: string;
                        value: _45.MsgDepositValidatorRewardsPool;
                    };
                };
                fromPartial: {
                    setWithdrawAddress(value: _45.MsgSetWithdrawAddress): {
                        typeUrl: string;
                        value: _45.MsgSetWithdrawAddress;
                    };
                    withdrawDelegatorReward(value: _45.MsgWithdrawDelegatorReward): {
                        typeUrl: string;
                        value: _45.MsgWithdrawDelegatorReward;
                    };
                    withdrawValidatorCommission(value: _45.MsgWithdrawValidatorCommission): {
                        typeUrl: string;
                        value: _45.MsgWithdrawValidatorCommission;
                    };
                    fundCommunityPool(value: _45.MsgFundCommunityPool): {
                        typeUrl: string;
                        value: _45.MsgFundCommunityPool;
                    };
                    updateParams(value: _45.MsgUpdateParams): {
                        typeUrl: string;
                        value: _45.MsgUpdateParams;
                    };
                    communityPoolSpend(value: _45.MsgCommunityPoolSpend): {
                        typeUrl: string;
                        value: _45.MsgCommunityPoolSpend;
                    };
                    depositValidatorRewardsPool(value: _45.MsgDepositValidatorRewardsPool): {
                        typeUrl: string;
                        value: _45.MsgDepositValidatorRewardsPool;
                    };
                };
            };
            AminoConverter: {
                "/cosmos.distribution.v1beta1.MsgSetWithdrawAddress": {
                    aminoType: string;
                    toAmino: (message: _45.MsgSetWithdrawAddress) => _45.MsgSetWithdrawAddressAmino;
                    fromAmino: (object: _45.MsgSetWithdrawAddressAmino) => _45.MsgSetWithdrawAddress;
                };
                "/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward": {
                    aminoType: string;
                    toAmino: (message: _45.MsgWithdrawDelegatorReward) => _45.MsgWithdrawDelegatorRewardAmino;
                    fromAmino: (object: _45.MsgWithdrawDelegatorRewardAmino) => _45.MsgWithdrawDelegatorReward;
                };
                "/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission": {
                    aminoType: string;
                    toAmino: (message: _45.MsgWithdrawValidatorCommission) => _45.MsgWithdrawValidatorCommissionAmino;
                    fromAmino: (object: _45.MsgWithdrawValidatorCommissionAmino) => _45.MsgWithdrawValidatorCommission;
                };
                "/cosmos.distribution.v1beta1.MsgFundCommunityPool": {
                    aminoType: string;
                    toAmino: (message: _45.MsgFundCommunityPool) => _45.MsgFundCommunityPoolAmino;
                    fromAmino: (object: _45.MsgFundCommunityPoolAmino) => _45.MsgFundCommunityPool;
                };
                "/cosmos.distribution.v1beta1.MsgUpdateParams": {
                    aminoType: string;
                    toAmino: (message: _45.MsgUpdateParams) => _45.MsgUpdateParamsAmino;
                    fromAmino: (object: _45.MsgUpdateParamsAmino) => _45.MsgUpdateParams;
                };
                "/cosmos.distribution.v1beta1.MsgCommunityPoolSpend": {
                    aminoType: string;
                    toAmino: (message: _45.MsgCommunityPoolSpend) => _45.MsgCommunityPoolSpendAmino;
                    fromAmino: (object: _45.MsgCommunityPoolSpendAmino) => _45.MsgCommunityPoolSpend;
                };
                "/cosmos.distribution.v1beta1.MsgDepositValidatorRewardsPool": {
                    aminoType: string;
                    toAmino: (message: _45.MsgDepositValidatorRewardsPool) => _45.MsgDepositValidatorRewardsPoolAmino;
                    fromAmino: (object: _45.MsgDepositValidatorRewardsPoolAmino) => _45.MsgDepositValidatorRewardsPool;
                };
            };
            MsgSetWithdrawAddress: {
                typeUrl: string;
                aminoType: string;
                encode(message: _45.MsgSetWithdrawAddress, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _45.MsgSetWithdrawAddress;
                fromPartial(object: {
                    delegatorAddress?: string;
                    withdrawAddress?: string;
                }): _45.MsgSetWithdrawAddress;
                fromAmino(object: _45.MsgSetWithdrawAddressAmino): _45.MsgSetWithdrawAddress;
                toAmino(message: _45.MsgSetWithdrawAddress): _45.MsgSetWithdrawAddressAmino;
                fromAminoMsg(object: _45.MsgSetWithdrawAddressAminoMsg): _45.MsgSetWithdrawAddress;
                toAminoMsg(message: _45.MsgSetWithdrawAddress): _45.MsgSetWithdrawAddressAminoMsg;
                fromProtoMsg(message: _45.MsgSetWithdrawAddressProtoMsg): _45.MsgSetWithdrawAddress;
                toProto(message: _45.MsgSetWithdrawAddress): Uint8Array;
                toProtoMsg(message: _45.MsgSetWithdrawAddress): _45.MsgSetWithdrawAddressProtoMsg;
            };
            MsgSetWithdrawAddressResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _45.MsgSetWithdrawAddressResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _45.MsgSetWithdrawAddressResponse;
                fromPartial(_: {}): _45.MsgSetWithdrawAddressResponse;
                fromAmino(_: _45.MsgSetWithdrawAddressResponseAmino): _45.MsgSetWithdrawAddressResponse;
                toAmino(_: _45.MsgSetWithdrawAddressResponse): _45.MsgSetWithdrawAddressResponseAmino;
                fromAminoMsg(object: _45.MsgSetWithdrawAddressResponseAminoMsg): _45.MsgSetWithdrawAddressResponse;
                toAminoMsg(message: _45.MsgSetWithdrawAddressResponse): _45.MsgSetWithdrawAddressResponseAminoMsg;
                fromProtoMsg(message: _45.MsgSetWithdrawAddressResponseProtoMsg): _45.MsgSetWithdrawAddressResponse;
                toProto(message: _45.MsgSetWithdrawAddressResponse): Uint8Array;
                toProtoMsg(message: _45.MsgSetWithdrawAddressResponse): _45.MsgSetWithdrawAddressResponseProtoMsg;
            };
            MsgWithdrawDelegatorReward: {
                typeUrl: string;
                aminoType: string;
                encode(message: _45.MsgWithdrawDelegatorReward, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _45.MsgWithdrawDelegatorReward;
                fromPartial(object: {
                    delegatorAddress?: string;
                    validatorAddress?: string;
                }): _45.MsgWithdrawDelegatorReward;
                fromAmino(object: _45.MsgWithdrawDelegatorRewardAmino): _45.MsgWithdrawDelegatorReward;
                toAmino(message: _45.MsgWithdrawDelegatorReward): _45.MsgWithdrawDelegatorRewardAmino;
                fromAminoMsg(object: _45.MsgWithdrawDelegatorRewardAminoMsg): _45.MsgWithdrawDelegatorReward;
                toAminoMsg(message: _45.MsgWithdrawDelegatorReward): _45.MsgWithdrawDelegatorRewardAminoMsg;
                fromProtoMsg(message: _45.MsgWithdrawDelegatorRewardProtoMsg): _45.MsgWithdrawDelegatorReward;
                toProto(message: _45.MsgWithdrawDelegatorReward): Uint8Array;
                toProtoMsg(message: _45.MsgWithdrawDelegatorReward): _45.MsgWithdrawDelegatorRewardProtoMsg;
            };
            MsgWithdrawDelegatorRewardResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _45.MsgWithdrawDelegatorRewardResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _45.MsgWithdrawDelegatorRewardResponse;
                fromPartial(object: {
                    amount?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _45.MsgWithdrawDelegatorRewardResponse;
                fromAmino(object: _45.MsgWithdrawDelegatorRewardResponseAmino): _45.MsgWithdrawDelegatorRewardResponse;
                toAmino(message: _45.MsgWithdrawDelegatorRewardResponse): _45.MsgWithdrawDelegatorRewardResponseAmino;
                fromAminoMsg(object: _45.MsgWithdrawDelegatorRewardResponseAminoMsg): _45.MsgWithdrawDelegatorRewardResponse;
                toAminoMsg(message: _45.MsgWithdrawDelegatorRewardResponse): _45.MsgWithdrawDelegatorRewardResponseAminoMsg;
                fromProtoMsg(message: _45.MsgWithdrawDelegatorRewardResponseProtoMsg): _45.MsgWithdrawDelegatorRewardResponse;
                toProto(message: _45.MsgWithdrawDelegatorRewardResponse): Uint8Array;
                toProtoMsg(message: _45.MsgWithdrawDelegatorRewardResponse): _45.MsgWithdrawDelegatorRewardResponseProtoMsg;
            };
            MsgWithdrawValidatorCommission: {
                typeUrl: string;
                aminoType: string;
                encode(message: _45.MsgWithdrawValidatorCommission, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _45.MsgWithdrawValidatorCommission;
                fromPartial(object: {
                    validatorAddress?: string;
                }): _45.MsgWithdrawValidatorCommission;
                fromAmino(object: _45.MsgWithdrawValidatorCommissionAmino): _45.MsgWithdrawValidatorCommission;
                toAmino(message: _45.MsgWithdrawValidatorCommission): _45.MsgWithdrawValidatorCommissionAmino;
                fromAminoMsg(object: _45.MsgWithdrawValidatorCommissionAminoMsg): _45.MsgWithdrawValidatorCommission;
                toAminoMsg(message: _45.MsgWithdrawValidatorCommission): _45.MsgWithdrawValidatorCommissionAminoMsg;
                fromProtoMsg(message: _45.MsgWithdrawValidatorCommissionProtoMsg): _45.MsgWithdrawValidatorCommission;
                toProto(message: _45.MsgWithdrawValidatorCommission): Uint8Array;
                toProtoMsg(message: _45.MsgWithdrawValidatorCommission): _45.MsgWithdrawValidatorCommissionProtoMsg;
            };
            MsgWithdrawValidatorCommissionResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _45.MsgWithdrawValidatorCommissionResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _45.MsgWithdrawValidatorCommissionResponse;
                fromPartial(object: {
                    amount?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _45.MsgWithdrawValidatorCommissionResponse;
                fromAmino(object: _45.MsgWithdrawValidatorCommissionResponseAmino): _45.MsgWithdrawValidatorCommissionResponse;
                toAmino(message: _45.MsgWithdrawValidatorCommissionResponse): _45.MsgWithdrawValidatorCommissionResponseAmino;
                fromAminoMsg(object: _45.MsgWithdrawValidatorCommissionResponseAminoMsg): _45.MsgWithdrawValidatorCommissionResponse;
                toAminoMsg(message: _45.MsgWithdrawValidatorCommissionResponse): _45.MsgWithdrawValidatorCommissionResponseAminoMsg;
                fromProtoMsg(message: _45.MsgWithdrawValidatorCommissionResponseProtoMsg): _45.MsgWithdrawValidatorCommissionResponse;
                toProto(message: _45.MsgWithdrawValidatorCommissionResponse): Uint8Array;
                toProtoMsg(message: _45.MsgWithdrawValidatorCommissionResponse): _45.MsgWithdrawValidatorCommissionResponseProtoMsg;
            };
            MsgFundCommunityPool: {
                typeUrl: string;
                aminoType: string;
                encode(message: _45.MsgFundCommunityPool, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _45.MsgFundCommunityPool;
                fromPartial(object: {
                    amount?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    depositor?: string;
                }): _45.MsgFundCommunityPool;
                fromAmino(object: _45.MsgFundCommunityPoolAmino): _45.MsgFundCommunityPool;
                toAmino(message: _45.MsgFundCommunityPool): _45.MsgFundCommunityPoolAmino;
                fromAminoMsg(object: _45.MsgFundCommunityPoolAminoMsg): _45.MsgFundCommunityPool;
                toAminoMsg(message: _45.MsgFundCommunityPool): _45.MsgFundCommunityPoolAminoMsg;
                fromProtoMsg(message: _45.MsgFundCommunityPoolProtoMsg): _45.MsgFundCommunityPool;
                toProto(message: _45.MsgFundCommunityPool): Uint8Array;
                toProtoMsg(message: _45.MsgFundCommunityPool): _45.MsgFundCommunityPoolProtoMsg;
            };
            MsgFundCommunityPoolResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _45.MsgFundCommunityPoolResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _45.MsgFundCommunityPoolResponse;
                fromPartial(_: {}): _45.MsgFundCommunityPoolResponse;
                fromAmino(_: _45.MsgFundCommunityPoolResponseAmino): _45.MsgFundCommunityPoolResponse;
                toAmino(_: _45.MsgFundCommunityPoolResponse): _45.MsgFundCommunityPoolResponseAmino;
                fromAminoMsg(object: _45.MsgFundCommunityPoolResponseAminoMsg): _45.MsgFundCommunityPoolResponse;
                toAminoMsg(message: _45.MsgFundCommunityPoolResponse): _45.MsgFundCommunityPoolResponseAminoMsg;
                fromProtoMsg(message: _45.MsgFundCommunityPoolResponseProtoMsg): _45.MsgFundCommunityPoolResponse;
                toProto(message: _45.MsgFundCommunityPoolResponse): Uint8Array;
                toProtoMsg(message: _45.MsgFundCommunityPoolResponse): _45.MsgFundCommunityPoolResponseProtoMsg;
            };
            MsgUpdateParams: {
                typeUrl: string;
                aminoType: string;
                encode(message: _45.MsgUpdateParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _45.MsgUpdateParams;
                fromPartial(object: {
                    authority?: string;
                    params?: {
                        communityTax?: string;
                        baseProposerReward?: string;
                        bonusProposerReward?: string;
                        withdrawAddrEnabled?: boolean;
                    };
                }): _45.MsgUpdateParams;
                fromAmino(object: _45.MsgUpdateParamsAmino): _45.MsgUpdateParams;
                toAmino(message: _45.MsgUpdateParams): _45.MsgUpdateParamsAmino;
                fromAminoMsg(object: _45.MsgUpdateParamsAminoMsg): _45.MsgUpdateParams;
                toAminoMsg(message: _45.MsgUpdateParams): _45.MsgUpdateParamsAminoMsg;
                fromProtoMsg(message: _45.MsgUpdateParamsProtoMsg): _45.MsgUpdateParams;
                toProto(message: _45.MsgUpdateParams): Uint8Array;
                toProtoMsg(message: _45.MsgUpdateParams): _45.MsgUpdateParamsProtoMsg;
            };
            MsgUpdateParamsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _45.MsgUpdateParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _45.MsgUpdateParamsResponse;
                fromPartial(_: {}): _45.MsgUpdateParamsResponse;
                fromAmino(_: _45.MsgUpdateParamsResponseAmino): _45.MsgUpdateParamsResponse;
                toAmino(_: _45.MsgUpdateParamsResponse): _45.MsgUpdateParamsResponseAmino;
                fromAminoMsg(object: _45.MsgUpdateParamsResponseAminoMsg): _45.MsgUpdateParamsResponse;
                toAminoMsg(message: _45.MsgUpdateParamsResponse): _45.MsgUpdateParamsResponseAminoMsg;
                fromProtoMsg(message: _45.MsgUpdateParamsResponseProtoMsg): _45.MsgUpdateParamsResponse;
                toProto(message: _45.MsgUpdateParamsResponse): Uint8Array;
                toProtoMsg(message: _45.MsgUpdateParamsResponse): _45.MsgUpdateParamsResponseProtoMsg;
            };
            MsgCommunityPoolSpend: {
                typeUrl: string;
                aminoType: string;
                encode(message: _45.MsgCommunityPoolSpend, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _45.MsgCommunityPoolSpend;
                fromPartial(object: {
                    authority?: string;
                    recipient?: string;
                    amount?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _45.MsgCommunityPoolSpend;
                fromAmino(object: _45.MsgCommunityPoolSpendAmino): _45.MsgCommunityPoolSpend;
                toAmino(message: _45.MsgCommunityPoolSpend): _45.MsgCommunityPoolSpendAmino;
                fromAminoMsg(object: _45.MsgCommunityPoolSpendAminoMsg): _45.MsgCommunityPoolSpend;
                toAminoMsg(message: _45.MsgCommunityPoolSpend): _45.MsgCommunityPoolSpendAminoMsg;
                fromProtoMsg(message: _45.MsgCommunityPoolSpendProtoMsg): _45.MsgCommunityPoolSpend;
                toProto(message: _45.MsgCommunityPoolSpend): Uint8Array;
                toProtoMsg(message: _45.MsgCommunityPoolSpend): _45.MsgCommunityPoolSpendProtoMsg;
            };
            MsgCommunityPoolSpendResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _45.MsgCommunityPoolSpendResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _45.MsgCommunityPoolSpendResponse;
                fromPartial(_: {}): _45.MsgCommunityPoolSpendResponse;
                fromAmino(_: _45.MsgCommunityPoolSpendResponseAmino): _45.MsgCommunityPoolSpendResponse;
                toAmino(_: _45.MsgCommunityPoolSpendResponse): _45.MsgCommunityPoolSpendResponseAmino;
                fromAminoMsg(object: _45.MsgCommunityPoolSpendResponseAminoMsg): _45.MsgCommunityPoolSpendResponse;
                toAminoMsg(message: _45.MsgCommunityPoolSpendResponse): _45.MsgCommunityPoolSpendResponseAminoMsg;
                fromProtoMsg(message: _45.MsgCommunityPoolSpendResponseProtoMsg): _45.MsgCommunityPoolSpendResponse;
                toProto(message: _45.MsgCommunityPoolSpendResponse): Uint8Array;
                toProtoMsg(message: _45.MsgCommunityPoolSpendResponse): _45.MsgCommunityPoolSpendResponseProtoMsg;
            };
            MsgDepositValidatorRewardsPool: {
                typeUrl: string;
                aminoType: string;
                encode(message: _45.MsgDepositValidatorRewardsPool, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _45.MsgDepositValidatorRewardsPool;
                fromPartial(object: {
                    depositor?: string;
                    validatorAddress?: string;
                    amount?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _45.MsgDepositValidatorRewardsPool;
                fromAmino(object: _45.MsgDepositValidatorRewardsPoolAmino): _45.MsgDepositValidatorRewardsPool;
                toAmino(message: _45.MsgDepositValidatorRewardsPool): _45.MsgDepositValidatorRewardsPoolAmino;
                fromAminoMsg(object: _45.MsgDepositValidatorRewardsPoolAminoMsg): _45.MsgDepositValidatorRewardsPool;
                toAminoMsg(message: _45.MsgDepositValidatorRewardsPool): _45.MsgDepositValidatorRewardsPoolAminoMsg;
                fromProtoMsg(message: _45.MsgDepositValidatorRewardsPoolProtoMsg): _45.MsgDepositValidatorRewardsPool;
                toProto(message: _45.MsgDepositValidatorRewardsPool): Uint8Array;
                toProtoMsg(message: _45.MsgDepositValidatorRewardsPool): _45.MsgDepositValidatorRewardsPoolProtoMsg;
            };
            MsgDepositValidatorRewardsPoolResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _45.MsgDepositValidatorRewardsPoolResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _45.MsgDepositValidatorRewardsPoolResponse;
                fromPartial(_: {}): _45.MsgDepositValidatorRewardsPoolResponse;
                fromAmino(_: _45.MsgDepositValidatorRewardsPoolResponseAmino): _45.MsgDepositValidatorRewardsPoolResponse;
                toAmino(_: _45.MsgDepositValidatorRewardsPoolResponse): _45.MsgDepositValidatorRewardsPoolResponseAmino;
                fromAminoMsg(object: _45.MsgDepositValidatorRewardsPoolResponseAminoMsg): _45.MsgDepositValidatorRewardsPoolResponse;
                toAminoMsg(message: _45.MsgDepositValidatorRewardsPoolResponse): _45.MsgDepositValidatorRewardsPoolResponseAminoMsg;
                fromProtoMsg(message: _45.MsgDepositValidatorRewardsPoolResponseProtoMsg): _45.MsgDepositValidatorRewardsPoolResponse;
                toProto(message: _45.MsgDepositValidatorRewardsPoolResponse): Uint8Array;
                toProtoMsg(message: _45.MsgDepositValidatorRewardsPoolResponse): _45.MsgDepositValidatorRewardsPoolResponseProtoMsg;
            };
            QueryParamsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(_: _44.QueryParamsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _44.QueryParamsRequest;
                fromPartial(_: {}): _44.QueryParamsRequest;
                fromAmino(_: _44.QueryParamsRequestAmino): _44.QueryParamsRequest;
                toAmino(_: _44.QueryParamsRequest): _44.QueryParamsRequestAmino;
                fromAminoMsg(object: _44.QueryParamsRequestAminoMsg): _44.QueryParamsRequest;
                toAminoMsg(message: _44.QueryParamsRequest): _44.QueryParamsRequestAminoMsg;
                fromProtoMsg(message: _44.QueryParamsRequestProtoMsg): _44.QueryParamsRequest;
                toProto(message: _44.QueryParamsRequest): Uint8Array;
                toProtoMsg(message: _44.QueryParamsRequest): _44.QueryParamsRequestProtoMsg;
            };
            QueryParamsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _44.QueryParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _44.QueryParamsResponse;
                fromPartial(object: {
                    params?: {
                        communityTax?: string;
                        baseProposerReward?: string;
                        bonusProposerReward?: string;
                        withdrawAddrEnabled?: boolean;
                    };
                }): _44.QueryParamsResponse;
                fromAmino(object: _44.QueryParamsResponseAmino): _44.QueryParamsResponse;
                toAmino(message: _44.QueryParamsResponse): _44.QueryParamsResponseAmino;
                fromAminoMsg(object: _44.QueryParamsResponseAminoMsg): _44.QueryParamsResponse;
                toAminoMsg(message: _44.QueryParamsResponse): _44.QueryParamsResponseAminoMsg;
                fromProtoMsg(message: _44.QueryParamsResponseProtoMsg): _44.QueryParamsResponse;
                toProto(message: _44.QueryParamsResponse): Uint8Array;
                toProtoMsg(message: _44.QueryParamsResponse): _44.QueryParamsResponseProtoMsg;
            };
            QueryValidatorDistributionInfoRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _44.QueryValidatorDistributionInfoRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _44.QueryValidatorDistributionInfoRequest;
                fromPartial(object: {
                    validatorAddress?: string;
                }): _44.QueryValidatorDistributionInfoRequest;
                fromAmino(object: _44.QueryValidatorDistributionInfoRequestAmino): _44.QueryValidatorDistributionInfoRequest;
                toAmino(message: _44.QueryValidatorDistributionInfoRequest): _44.QueryValidatorDistributionInfoRequestAmino;
                fromAminoMsg(object: _44.QueryValidatorDistributionInfoRequestAminoMsg): _44.QueryValidatorDistributionInfoRequest;
                toAminoMsg(message: _44.QueryValidatorDistributionInfoRequest): _44.QueryValidatorDistributionInfoRequestAminoMsg;
                fromProtoMsg(message: _44.QueryValidatorDistributionInfoRequestProtoMsg): _44.QueryValidatorDistributionInfoRequest;
                toProto(message: _44.QueryValidatorDistributionInfoRequest): Uint8Array;
                toProtoMsg(message: _44.QueryValidatorDistributionInfoRequest): _44.QueryValidatorDistributionInfoRequestProtoMsg;
            };
            QueryValidatorDistributionInfoResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _44.QueryValidatorDistributionInfoResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _44.QueryValidatorDistributionInfoResponse;
                fromPartial(object: {
                    operatorAddress?: string;
                    selfBondRewards?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    commission?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _44.QueryValidatorDistributionInfoResponse;
                fromAmino(object: _44.QueryValidatorDistributionInfoResponseAmino): _44.QueryValidatorDistributionInfoResponse;
                toAmino(message: _44.QueryValidatorDistributionInfoResponse): _44.QueryValidatorDistributionInfoResponseAmino;
                fromAminoMsg(object: _44.QueryValidatorDistributionInfoResponseAminoMsg): _44.QueryValidatorDistributionInfoResponse;
                toAminoMsg(message: _44.QueryValidatorDistributionInfoResponse): _44.QueryValidatorDistributionInfoResponseAminoMsg;
                fromProtoMsg(message: _44.QueryValidatorDistributionInfoResponseProtoMsg): _44.QueryValidatorDistributionInfoResponse;
                toProto(message: _44.QueryValidatorDistributionInfoResponse): Uint8Array;
                toProtoMsg(message: _44.QueryValidatorDistributionInfoResponse): _44.QueryValidatorDistributionInfoResponseProtoMsg;
            };
            QueryValidatorOutstandingRewardsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _44.QueryValidatorOutstandingRewardsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _44.QueryValidatorOutstandingRewardsRequest;
                fromPartial(object: {
                    validatorAddress?: string;
                }): _44.QueryValidatorOutstandingRewardsRequest;
                fromAmino(object: _44.QueryValidatorOutstandingRewardsRequestAmino): _44.QueryValidatorOutstandingRewardsRequest;
                toAmino(message: _44.QueryValidatorOutstandingRewardsRequest): _44.QueryValidatorOutstandingRewardsRequestAmino;
                fromAminoMsg(object: _44.QueryValidatorOutstandingRewardsRequestAminoMsg): _44.QueryValidatorOutstandingRewardsRequest;
                toAminoMsg(message: _44.QueryValidatorOutstandingRewardsRequest): _44.QueryValidatorOutstandingRewardsRequestAminoMsg;
                fromProtoMsg(message: _44.QueryValidatorOutstandingRewardsRequestProtoMsg): _44.QueryValidatorOutstandingRewardsRequest;
                toProto(message: _44.QueryValidatorOutstandingRewardsRequest): Uint8Array;
                toProtoMsg(message: _44.QueryValidatorOutstandingRewardsRequest): _44.QueryValidatorOutstandingRewardsRequestProtoMsg;
            };
            QueryValidatorOutstandingRewardsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _44.QueryValidatorOutstandingRewardsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _44.QueryValidatorOutstandingRewardsResponse;
                fromPartial(object: {
                    rewards?: {
                        rewards?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    };
                }): _44.QueryValidatorOutstandingRewardsResponse;
                fromAmino(object: _44.QueryValidatorOutstandingRewardsResponseAmino): _44.QueryValidatorOutstandingRewardsResponse;
                toAmino(message: _44.QueryValidatorOutstandingRewardsResponse): _44.QueryValidatorOutstandingRewardsResponseAmino;
                fromAminoMsg(object: _44.QueryValidatorOutstandingRewardsResponseAminoMsg): _44.QueryValidatorOutstandingRewardsResponse;
                toAminoMsg(message: _44.QueryValidatorOutstandingRewardsResponse): _44.QueryValidatorOutstandingRewardsResponseAminoMsg;
                fromProtoMsg(message: _44.QueryValidatorOutstandingRewardsResponseProtoMsg): _44.QueryValidatorOutstandingRewardsResponse;
                toProto(message: _44.QueryValidatorOutstandingRewardsResponse): Uint8Array;
                toProtoMsg(message: _44.QueryValidatorOutstandingRewardsResponse): _44.QueryValidatorOutstandingRewardsResponseProtoMsg;
            };
            QueryValidatorCommissionRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _44.QueryValidatorCommissionRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _44.QueryValidatorCommissionRequest;
                fromPartial(object: {
                    validatorAddress?: string;
                }): _44.QueryValidatorCommissionRequest;
                fromAmino(object: _44.QueryValidatorCommissionRequestAmino): _44.QueryValidatorCommissionRequest;
                toAmino(message: _44.QueryValidatorCommissionRequest): _44.QueryValidatorCommissionRequestAmino;
                fromAminoMsg(object: _44.QueryValidatorCommissionRequestAminoMsg): _44.QueryValidatorCommissionRequest;
                toAminoMsg(message: _44.QueryValidatorCommissionRequest): _44.QueryValidatorCommissionRequestAminoMsg;
                fromProtoMsg(message: _44.QueryValidatorCommissionRequestProtoMsg): _44.QueryValidatorCommissionRequest;
                toProto(message: _44.QueryValidatorCommissionRequest): Uint8Array;
                toProtoMsg(message: _44.QueryValidatorCommissionRequest): _44.QueryValidatorCommissionRequestProtoMsg;
            };
            QueryValidatorCommissionResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _44.QueryValidatorCommissionResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _44.QueryValidatorCommissionResponse;
                fromPartial(object: {
                    commission?: {
                        commission?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    };
                }): _44.QueryValidatorCommissionResponse;
                fromAmino(object: _44.QueryValidatorCommissionResponseAmino): _44.QueryValidatorCommissionResponse;
                toAmino(message: _44.QueryValidatorCommissionResponse): _44.QueryValidatorCommissionResponseAmino;
                fromAminoMsg(object: _44.QueryValidatorCommissionResponseAminoMsg): _44.QueryValidatorCommissionResponse;
                toAminoMsg(message: _44.QueryValidatorCommissionResponse): _44.QueryValidatorCommissionResponseAminoMsg;
                fromProtoMsg(message: _44.QueryValidatorCommissionResponseProtoMsg): _44.QueryValidatorCommissionResponse;
                toProto(message: _44.QueryValidatorCommissionResponse): Uint8Array;
                toProtoMsg(message: _44.QueryValidatorCommissionResponse): _44.QueryValidatorCommissionResponseProtoMsg;
            };
            QueryValidatorSlashesRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _44.QueryValidatorSlashesRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _44.QueryValidatorSlashesRequest;
                fromPartial(object: {
                    validatorAddress?: string;
                    startingHeight?: bigint;
                    endingHeight?: bigint;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _44.QueryValidatorSlashesRequest;
                fromAmino(object: _44.QueryValidatorSlashesRequestAmino): _44.QueryValidatorSlashesRequest;
                toAmino(message: _44.QueryValidatorSlashesRequest): _44.QueryValidatorSlashesRequestAmino;
                fromAminoMsg(object: _44.QueryValidatorSlashesRequestAminoMsg): _44.QueryValidatorSlashesRequest;
                toAminoMsg(message: _44.QueryValidatorSlashesRequest): _44.QueryValidatorSlashesRequestAminoMsg;
                fromProtoMsg(message: _44.QueryValidatorSlashesRequestProtoMsg): _44.QueryValidatorSlashesRequest;
                toProto(message: _44.QueryValidatorSlashesRequest): Uint8Array;
                toProtoMsg(message: _44.QueryValidatorSlashesRequest): _44.QueryValidatorSlashesRequestProtoMsg;
            };
            QueryValidatorSlashesResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _44.QueryValidatorSlashesResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _44.QueryValidatorSlashesResponse;
                fromPartial(object: {
                    slashes?: {
                        validatorPeriod?: bigint;
                        fraction?: string;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _44.QueryValidatorSlashesResponse;
                fromAmino(object: _44.QueryValidatorSlashesResponseAmino): _44.QueryValidatorSlashesResponse;
                toAmino(message: _44.QueryValidatorSlashesResponse): _44.QueryValidatorSlashesResponseAmino;
                fromAminoMsg(object: _44.QueryValidatorSlashesResponseAminoMsg): _44.QueryValidatorSlashesResponse;
                toAminoMsg(message: _44.QueryValidatorSlashesResponse): _44.QueryValidatorSlashesResponseAminoMsg;
                fromProtoMsg(message: _44.QueryValidatorSlashesResponseProtoMsg): _44.QueryValidatorSlashesResponse;
                toProto(message: _44.QueryValidatorSlashesResponse): Uint8Array;
                toProtoMsg(message: _44.QueryValidatorSlashesResponse): _44.QueryValidatorSlashesResponseProtoMsg;
            };
            QueryDelegationRewardsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _44.QueryDelegationRewardsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _44.QueryDelegationRewardsRequest;
                fromPartial(object: {
                    delegatorAddress?: string;
                    validatorAddress?: string;
                }): _44.QueryDelegationRewardsRequest;
                fromAmino(object: _44.QueryDelegationRewardsRequestAmino): _44.QueryDelegationRewardsRequest;
                toAmino(message: _44.QueryDelegationRewardsRequest): _44.QueryDelegationRewardsRequestAmino;
                fromAminoMsg(object: _44.QueryDelegationRewardsRequestAminoMsg): _44.QueryDelegationRewardsRequest;
                toAminoMsg(message: _44.QueryDelegationRewardsRequest): _44.QueryDelegationRewardsRequestAminoMsg;
                fromProtoMsg(message: _44.QueryDelegationRewardsRequestProtoMsg): _44.QueryDelegationRewardsRequest;
                toProto(message: _44.QueryDelegationRewardsRequest): Uint8Array;
                toProtoMsg(message: _44.QueryDelegationRewardsRequest): _44.QueryDelegationRewardsRequestProtoMsg;
            };
            QueryDelegationRewardsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _44.QueryDelegationRewardsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _44.QueryDelegationRewardsResponse;
                fromPartial(object: {
                    rewards?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _44.QueryDelegationRewardsResponse;
                fromAmino(object: _44.QueryDelegationRewardsResponseAmino): _44.QueryDelegationRewardsResponse;
                toAmino(message: _44.QueryDelegationRewardsResponse): _44.QueryDelegationRewardsResponseAmino;
                fromAminoMsg(object: _44.QueryDelegationRewardsResponseAminoMsg): _44.QueryDelegationRewardsResponse;
                toAminoMsg(message: _44.QueryDelegationRewardsResponse): _44.QueryDelegationRewardsResponseAminoMsg;
                fromProtoMsg(message: _44.QueryDelegationRewardsResponseProtoMsg): _44.QueryDelegationRewardsResponse;
                toProto(message: _44.QueryDelegationRewardsResponse): Uint8Array;
                toProtoMsg(message: _44.QueryDelegationRewardsResponse): _44.QueryDelegationRewardsResponseProtoMsg;
            };
            QueryDelegationTotalRewardsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _44.QueryDelegationTotalRewardsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _44.QueryDelegationTotalRewardsRequest;
                fromPartial(object: {
                    delegatorAddress?: string;
                }): _44.QueryDelegationTotalRewardsRequest;
                fromAmino(object: _44.QueryDelegationTotalRewardsRequestAmino): _44.QueryDelegationTotalRewardsRequest;
                toAmino(message: _44.QueryDelegationTotalRewardsRequest): _44.QueryDelegationTotalRewardsRequestAmino;
                fromAminoMsg(object: _44.QueryDelegationTotalRewardsRequestAminoMsg): _44.QueryDelegationTotalRewardsRequest;
                toAminoMsg(message: _44.QueryDelegationTotalRewardsRequest): _44.QueryDelegationTotalRewardsRequestAminoMsg;
                fromProtoMsg(message: _44.QueryDelegationTotalRewardsRequestProtoMsg): _44.QueryDelegationTotalRewardsRequest;
                toProto(message: _44.QueryDelegationTotalRewardsRequest): Uint8Array;
                toProtoMsg(message: _44.QueryDelegationTotalRewardsRequest): _44.QueryDelegationTotalRewardsRequestProtoMsg;
            };
            QueryDelegationTotalRewardsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _44.QueryDelegationTotalRewardsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _44.QueryDelegationTotalRewardsResponse;
                fromPartial(object: {
                    rewards?: {
                        validatorAddress?: string;
                        reward?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    }[];
                    total?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _44.QueryDelegationTotalRewardsResponse;
                fromAmino(object: _44.QueryDelegationTotalRewardsResponseAmino): _44.QueryDelegationTotalRewardsResponse;
                toAmino(message: _44.QueryDelegationTotalRewardsResponse): _44.QueryDelegationTotalRewardsResponseAmino;
                fromAminoMsg(object: _44.QueryDelegationTotalRewardsResponseAminoMsg): _44.QueryDelegationTotalRewardsResponse;
                toAminoMsg(message: _44.QueryDelegationTotalRewardsResponse): _44.QueryDelegationTotalRewardsResponseAminoMsg;
                fromProtoMsg(message: _44.QueryDelegationTotalRewardsResponseProtoMsg): _44.QueryDelegationTotalRewardsResponse;
                toProto(message: _44.QueryDelegationTotalRewardsResponse): Uint8Array;
                toProtoMsg(message: _44.QueryDelegationTotalRewardsResponse): _44.QueryDelegationTotalRewardsResponseProtoMsg;
            };
            QueryDelegatorValidatorsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _44.QueryDelegatorValidatorsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _44.QueryDelegatorValidatorsRequest;
                fromPartial(object: {
                    delegatorAddress?: string;
                }): _44.QueryDelegatorValidatorsRequest;
                fromAmino(object: _44.QueryDelegatorValidatorsRequestAmino): _44.QueryDelegatorValidatorsRequest;
                toAmino(message: _44.QueryDelegatorValidatorsRequest): _44.QueryDelegatorValidatorsRequestAmino;
                fromAminoMsg(object: _44.QueryDelegatorValidatorsRequestAminoMsg): _44.QueryDelegatorValidatorsRequest;
                toAminoMsg(message: _44.QueryDelegatorValidatorsRequest): _44.QueryDelegatorValidatorsRequestAminoMsg;
                fromProtoMsg(message: _44.QueryDelegatorValidatorsRequestProtoMsg): _44.QueryDelegatorValidatorsRequest;
                toProto(message: _44.QueryDelegatorValidatorsRequest): Uint8Array;
                toProtoMsg(message: _44.QueryDelegatorValidatorsRequest): _44.QueryDelegatorValidatorsRequestProtoMsg;
            };
            QueryDelegatorValidatorsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _44.QueryDelegatorValidatorsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _44.QueryDelegatorValidatorsResponse;
                fromPartial(object: {
                    validators?: string[];
                }): _44.QueryDelegatorValidatorsResponse;
                fromAmino(object: _44.QueryDelegatorValidatorsResponseAmino): _44.QueryDelegatorValidatorsResponse;
                toAmino(message: _44.QueryDelegatorValidatorsResponse): _44.QueryDelegatorValidatorsResponseAmino;
                fromAminoMsg(object: _44.QueryDelegatorValidatorsResponseAminoMsg): _44.QueryDelegatorValidatorsResponse;
                toAminoMsg(message: _44.QueryDelegatorValidatorsResponse): _44.QueryDelegatorValidatorsResponseAminoMsg;
                fromProtoMsg(message: _44.QueryDelegatorValidatorsResponseProtoMsg): _44.QueryDelegatorValidatorsResponse;
                toProto(message: _44.QueryDelegatorValidatorsResponse): Uint8Array;
                toProtoMsg(message: _44.QueryDelegatorValidatorsResponse): _44.QueryDelegatorValidatorsResponseProtoMsg;
            };
            QueryDelegatorWithdrawAddressRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _44.QueryDelegatorWithdrawAddressRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _44.QueryDelegatorWithdrawAddressRequest;
                fromPartial(object: {
                    delegatorAddress?: string;
                }): _44.QueryDelegatorWithdrawAddressRequest;
                fromAmino(object: _44.QueryDelegatorWithdrawAddressRequestAmino): _44.QueryDelegatorWithdrawAddressRequest;
                toAmino(message: _44.QueryDelegatorWithdrawAddressRequest): _44.QueryDelegatorWithdrawAddressRequestAmino;
                fromAminoMsg(object: _44.QueryDelegatorWithdrawAddressRequestAminoMsg): _44.QueryDelegatorWithdrawAddressRequest;
                toAminoMsg(message: _44.QueryDelegatorWithdrawAddressRequest): _44.QueryDelegatorWithdrawAddressRequestAminoMsg;
                fromProtoMsg(message: _44.QueryDelegatorWithdrawAddressRequestProtoMsg): _44.QueryDelegatorWithdrawAddressRequest;
                toProto(message: _44.QueryDelegatorWithdrawAddressRequest): Uint8Array;
                toProtoMsg(message: _44.QueryDelegatorWithdrawAddressRequest): _44.QueryDelegatorWithdrawAddressRequestProtoMsg;
            };
            QueryDelegatorWithdrawAddressResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _44.QueryDelegatorWithdrawAddressResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _44.QueryDelegatorWithdrawAddressResponse;
                fromPartial(object: {
                    withdrawAddress?: string;
                }): _44.QueryDelegatorWithdrawAddressResponse;
                fromAmino(object: _44.QueryDelegatorWithdrawAddressResponseAmino): _44.QueryDelegatorWithdrawAddressResponse;
                toAmino(message: _44.QueryDelegatorWithdrawAddressResponse): _44.QueryDelegatorWithdrawAddressResponseAmino;
                fromAminoMsg(object: _44.QueryDelegatorWithdrawAddressResponseAminoMsg): _44.QueryDelegatorWithdrawAddressResponse;
                toAminoMsg(message: _44.QueryDelegatorWithdrawAddressResponse): _44.QueryDelegatorWithdrawAddressResponseAminoMsg;
                fromProtoMsg(message: _44.QueryDelegatorWithdrawAddressResponseProtoMsg): _44.QueryDelegatorWithdrawAddressResponse;
                toProto(message: _44.QueryDelegatorWithdrawAddressResponse): Uint8Array;
                toProtoMsg(message: _44.QueryDelegatorWithdrawAddressResponse): _44.QueryDelegatorWithdrawAddressResponseProtoMsg;
            };
            QueryCommunityPoolRequest: {
                typeUrl: string;
                aminoType: string;
                encode(_: _44.QueryCommunityPoolRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _44.QueryCommunityPoolRequest;
                fromPartial(_: {}): _44.QueryCommunityPoolRequest;
                fromAmino(_: _44.QueryCommunityPoolRequestAmino): _44.QueryCommunityPoolRequest;
                toAmino(_: _44.QueryCommunityPoolRequest): _44.QueryCommunityPoolRequestAmino;
                fromAminoMsg(object: _44.QueryCommunityPoolRequestAminoMsg): _44.QueryCommunityPoolRequest;
                toAminoMsg(message: _44.QueryCommunityPoolRequest): _44.QueryCommunityPoolRequestAminoMsg;
                fromProtoMsg(message: _44.QueryCommunityPoolRequestProtoMsg): _44.QueryCommunityPoolRequest;
                toProto(message: _44.QueryCommunityPoolRequest): Uint8Array;
                toProtoMsg(message: _44.QueryCommunityPoolRequest): _44.QueryCommunityPoolRequestProtoMsg;
            };
            QueryCommunityPoolResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _44.QueryCommunityPoolResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _44.QueryCommunityPoolResponse;
                fromPartial(object: {
                    pool?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _44.QueryCommunityPoolResponse;
                fromAmino(object: _44.QueryCommunityPoolResponseAmino): _44.QueryCommunityPoolResponse;
                toAmino(message: _44.QueryCommunityPoolResponse): _44.QueryCommunityPoolResponseAmino;
                fromAminoMsg(object: _44.QueryCommunityPoolResponseAminoMsg): _44.QueryCommunityPoolResponse;
                toAminoMsg(message: _44.QueryCommunityPoolResponse): _44.QueryCommunityPoolResponseAminoMsg;
                fromProtoMsg(message: _44.QueryCommunityPoolResponseProtoMsg): _44.QueryCommunityPoolResponse;
                toProto(message: _44.QueryCommunityPoolResponse): Uint8Array;
                toProtoMsg(message: _44.QueryCommunityPoolResponse): _44.QueryCommunityPoolResponseProtoMsg;
            };
            DelegatorWithdrawInfo: {
                typeUrl: string;
                aminoType: string;
                encode(message: _43.DelegatorWithdrawInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _43.DelegatorWithdrawInfo;
                fromPartial(object: {
                    delegatorAddress?: string;
                    withdrawAddress?: string;
                }): _43.DelegatorWithdrawInfo;
                fromAmino(object: _43.DelegatorWithdrawInfoAmino): _43.DelegatorWithdrawInfo;
                toAmino(message: _43.DelegatorWithdrawInfo): _43.DelegatorWithdrawInfoAmino;
                fromAminoMsg(object: _43.DelegatorWithdrawInfoAminoMsg): _43.DelegatorWithdrawInfo;
                toAminoMsg(message: _43.DelegatorWithdrawInfo): _43.DelegatorWithdrawInfoAminoMsg;
                fromProtoMsg(message: _43.DelegatorWithdrawInfoProtoMsg): _43.DelegatorWithdrawInfo;
                toProto(message: _43.DelegatorWithdrawInfo): Uint8Array;
                toProtoMsg(message: _43.DelegatorWithdrawInfo): _43.DelegatorWithdrawInfoProtoMsg;
            };
            ValidatorOutstandingRewardsRecord: {
                typeUrl: string;
                aminoType: string;
                encode(message: _43.ValidatorOutstandingRewardsRecord, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _43.ValidatorOutstandingRewardsRecord;
                fromPartial(object: {
                    validatorAddress?: string;
                    outstandingRewards?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _43.ValidatorOutstandingRewardsRecord;
                fromAmino(object: _43.ValidatorOutstandingRewardsRecordAmino): _43.ValidatorOutstandingRewardsRecord;
                toAmino(message: _43.ValidatorOutstandingRewardsRecord): _43.ValidatorOutstandingRewardsRecordAmino;
                fromAminoMsg(object: _43.ValidatorOutstandingRewardsRecordAminoMsg): _43.ValidatorOutstandingRewardsRecord;
                toAminoMsg(message: _43.ValidatorOutstandingRewardsRecord): _43.ValidatorOutstandingRewardsRecordAminoMsg;
                fromProtoMsg(message: _43.ValidatorOutstandingRewardsRecordProtoMsg): _43.ValidatorOutstandingRewardsRecord;
                toProto(message: _43.ValidatorOutstandingRewardsRecord): Uint8Array;
                toProtoMsg(message: _43.ValidatorOutstandingRewardsRecord): _43.ValidatorOutstandingRewardsRecordProtoMsg;
            };
            ValidatorAccumulatedCommissionRecord: {
                typeUrl: string;
                aminoType: string;
                encode(message: _43.ValidatorAccumulatedCommissionRecord, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _43.ValidatorAccumulatedCommissionRecord;
                fromPartial(object: {
                    validatorAddress?: string;
                    accumulated?: {
                        commission?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    };
                }): _43.ValidatorAccumulatedCommissionRecord;
                fromAmino(object: _43.ValidatorAccumulatedCommissionRecordAmino): _43.ValidatorAccumulatedCommissionRecord;
                toAmino(message: _43.ValidatorAccumulatedCommissionRecord): _43.ValidatorAccumulatedCommissionRecordAmino;
                fromAminoMsg(object: _43.ValidatorAccumulatedCommissionRecordAminoMsg): _43.ValidatorAccumulatedCommissionRecord;
                toAminoMsg(message: _43.ValidatorAccumulatedCommissionRecord): _43.ValidatorAccumulatedCommissionRecordAminoMsg;
                fromProtoMsg(message: _43.ValidatorAccumulatedCommissionRecordProtoMsg): _43.ValidatorAccumulatedCommissionRecord;
                toProto(message: _43.ValidatorAccumulatedCommissionRecord): Uint8Array;
                toProtoMsg(message: _43.ValidatorAccumulatedCommissionRecord): _43.ValidatorAccumulatedCommissionRecordProtoMsg;
            };
            ValidatorHistoricalRewardsRecord: {
                typeUrl: string;
                aminoType: string;
                encode(message: _43.ValidatorHistoricalRewardsRecord, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _43.ValidatorHistoricalRewardsRecord;
                fromPartial(object: {
                    validatorAddress?: string;
                    period?: bigint;
                    rewards?: {
                        cumulativeRewardRatio?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        referenceCount?: number;
                    };
                }): _43.ValidatorHistoricalRewardsRecord;
                fromAmino(object: _43.ValidatorHistoricalRewardsRecordAmino): _43.ValidatorHistoricalRewardsRecord;
                toAmino(message: _43.ValidatorHistoricalRewardsRecord): _43.ValidatorHistoricalRewardsRecordAmino;
                fromAminoMsg(object: _43.ValidatorHistoricalRewardsRecordAminoMsg): _43.ValidatorHistoricalRewardsRecord;
                toAminoMsg(message: _43.ValidatorHistoricalRewardsRecord): _43.ValidatorHistoricalRewardsRecordAminoMsg;
                fromProtoMsg(message: _43.ValidatorHistoricalRewardsRecordProtoMsg): _43.ValidatorHistoricalRewardsRecord;
                toProto(message: _43.ValidatorHistoricalRewardsRecord): Uint8Array;
                toProtoMsg(message: _43.ValidatorHistoricalRewardsRecord): _43.ValidatorHistoricalRewardsRecordProtoMsg;
            };
            ValidatorCurrentRewardsRecord: {
                typeUrl: string;
                aminoType: string;
                encode(message: _43.ValidatorCurrentRewardsRecord, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _43.ValidatorCurrentRewardsRecord;
                fromPartial(object: {
                    validatorAddress?: string;
                    rewards?: {
                        rewards?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        period?: bigint;
                    };
                }): _43.ValidatorCurrentRewardsRecord;
                fromAmino(object: _43.ValidatorCurrentRewardsRecordAmino): _43.ValidatorCurrentRewardsRecord;
                toAmino(message: _43.ValidatorCurrentRewardsRecord): _43.ValidatorCurrentRewardsRecordAmino;
                fromAminoMsg(object: _43.ValidatorCurrentRewardsRecordAminoMsg): _43.ValidatorCurrentRewardsRecord;
                toAminoMsg(message: _43.ValidatorCurrentRewardsRecord): _43.ValidatorCurrentRewardsRecordAminoMsg;
                fromProtoMsg(message: _43.ValidatorCurrentRewardsRecordProtoMsg): _43.ValidatorCurrentRewardsRecord;
                toProto(message: _43.ValidatorCurrentRewardsRecord): Uint8Array;
                toProtoMsg(message: _43.ValidatorCurrentRewardsRecord): _43.ValidatorCurrentRewardsRecordProtoMsg;
            };
            DelegatorStartingInfoRecord: {
                typeUrl: string;
                aminoType: string;
                encode(message: _43.DelegatorStartingInfoRecord, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _43.DelegatorStartingInfoRecord;
                fromPartial(object: {
                    delegatorAddress?: string;
                    validatorAddress?: string;
                    startingInfo?: {
                        previousPeriod?: bigint;
                        stake?: string;
                        height?: bigint;
                    };
                }): _43.DelegatorStartingInfoRecord;
                fromAmino(object: _43.DelegatorStartingInfoRecordAmino): _43.DelegatorStartingInfoRecord;
                toAmino(message: _43.DelegatorStartingInfoRecord): _43.DelegatorStartingInfoRecordAmino;
                fromAminoMsg(object: _43.DelegatorStartingInfoRecordAminoMsg): _43.DelegatorStartingInfoRecord;
                toAminoMsg(message: _43.DelegatorStartingInfoRecord): _43.DelegatorStartingInfoRecordAminoMsg;
                fromProtoMsg(message: _43.DelegatorStartingInfoRecordProtoMsg): _43.DelegatorStartingInfoRecord;
                toProto(message: _43.DelegatorStartingInfoRecord): Uint8Array;
                toProtoMsg(message: _43.DelegatorStartingInfoRecord): _43.DelegatorStartingInfoRecordProtoMsg;
            };
            ValidatorSlashEventRecord: {
                typeUrl: string;
                aminoType: string;
                encode(message: _43.ValidatorSlashEventRecord, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _43.ValidatorSlashEventRecord;
                fromPartial(object: {
                    validatorAddress?: string;
                    height?: bigint;
                    period?: bigint;
                    validatorSlashEvent?: {
                        validatorPeriod?: bigint;
                        fraction?: string;
                    };
                }): _43.ValidatorSlashEventRecord;
                fromAmino(object: _43.ValidatorSlashEventRecordAmino): _43.ValidatorSlashEventRecord;
                toAmino(message: _43.ValidatorSlashEventRecord): _43.ValidatorSlashEventRecordAmino;
                fromAminoMsg(object: _43.ValidatorSlashEventRecordAminoMsg): _43.ValidatorSlashEventRecord;
                toAminoMsg(message: _43.ValidatorSlashEventRecord): _43.ValidatorSlashEventRecordAminoMsg;
                fromProtoMsg(message: _43.ValidatorSlashEventRecordProtoMsg): _43.ValidatorSlashEventRecord;
                toProto(message: _43.ValidatorSlashEventRecord): Uint8Array;
                toProtoMsg(message: _43.ValidatorSlashEventRecord): _43.ValidatorSlashEventRecordProtoMsg;
            };
            GenesisState: {
                typeUrl: string;
                aminoType: string;
                encode(message: _43.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _43.GenesisState;
                fromPartial(object: {
                    params?: {
                        communityTax?: string;
                        baseProposerReward?: string;
                        bonusProposerReward?: string;
                        withdrawAddrEnabled?: boolean;
                    };
                    feePool?: {
                        communityPool?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    };
                    delegatorWithdrawInfos?: {
                        delegatorAddress?: string;
                        withdrawAddress?: string;
                    }[];
                    previousProposer?: string;
                    outstandingRewards?: {
                        validatorAddress?: string;
                        outstandingRewards?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    }[];
                    validatorAccumulatedCommissions?: {
                        validatorAddress?: string;
                        accumulated?: {
                            commission?: {
                                denom?: string;
                                amount?: string;
                            }[];
                        };
                    }[];
                    validatorHistoricalRewards?: {
                        validatorAddress?: string;
                        period?: bigint;
                        rewards?: {
                            cumulativeRewardRatio?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            referenceCount?: number;
                        };
                    }[];
                    validatorCurrentRewards?: {
                        validatorAddress?: string;
                        rewards?: {
                            rewards?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            period?: bigint;
                        };
                    }[];
                    delegatorStartingInfos?: {
                        delegatorAddress?: string;
                        validatorAddress?: string;
                        startingInfo?: {
                            previousPeriod?: bigint;
                            stake?: string;
                            height?: bigint;
                        };
                    }[];
                    validatorSlashEvents?: {
                        validatorAddress?: string;
                        height?: bigint;
                        period?: bigint;
                        validatorSlashEvent?: {
                            validatorPeriod?: bigint;
                            fraction?: string;
                        };
                    }[];
                }): _43.GenesisState;
                fromAmino(object: _43.GenesisStateAmino): _43.GenesisState;
                toAmino(message: _43.GenesisState): _43.GenesisStateAmino;
                fromAminoMsg(object: _43.GenesisStateAminoMsg): _43.GenesisState;
                toAminoMsg(message: _43.GenesisState): _43.GenesisStateAminoMsg;
                fromProtoMsg(message: _43.GenesisStateProtoMsg): _43.GenesisState;
                toProto(message: _43.GenesisState): Uint8Array;
                toProtoMsg(message: _43.GenesisState): _43.GenesisStateProtoMsg;
            };
            Params: {
                typeUrl: string;
                aminoType: string;
                encode(message: _42.Params, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _42.Params;
                fromPartial(object: {
                    communityTax?: string;
                    baseProposerReward?: string;
                    bonusProposerReward?: string;
                    withdrawAddrEnabled?: boolean;
                }): _42.Params;
                fromAmino(object: _42.ParamsAmino): _42.Params;
                toAmino(message: _42.Params): _42.ParamsAmino;
                fromAminoMsg(object: _42.ParamsAminoMsg): _42.Params;
                toAminoMsg(message: _42.Params): _42.ParamsAminoMsg;
                fromProtoMsg(message: _42.ParamsProtoMsg): _42.Params;
                toProto(message: _42.Params): Uint8Array;
                toProtoMsg(message: _42.Params): _42.ParamsProtoMsg;
            };
            ValidatorHistoricalRewards: {
                typeUrl: string;
                aminoType: string;
                encode(message: _42.ValidatorHistoricalRewards, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _42.ValidatorHistoricalRewards;
                fromPartial(object: {
                    cumulativeRewardRatio?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    referenceCount?: number;
                }): _42.ValidatorHistoricalRewards;
                fromAmino(object: _42.ValidatorHistoricalRewardsAmino): _42.ValidatorHistoricalRewards;
                toAmino(message: _42.ValidatorHistoricalRewards): _42.ValidatorHistoricalRewardsAmino;
                fromAminoMsg(object: _42.ValidatorHistoricalRewardsAminoMsg): _42.ValidatorHistoricalRewards;
                toAminoMsg(message: _42.ValidatorHistoricalRewards): _42.ValidatorHistoricalRewardsAminoMsg;
                fromProtoMsg(message: _42.ValidatorHistoricalRewardsProtoMsg): _42.ValidatorHistoricalRewards;
                toProto(message: _42.ValidatorHistoricalRewards): Uint8Array;
                toProtoMsg(message: _42.ValidatorHistoricalRewards): _42.ValidatorHistoricalRewardsProtoMsg;
            };
            ValidatorCurrentRewards: {
                typeUrl: string;
                aminoType: string;
                encode(message: _42.ValidatorCurrentRewards, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _42.ValidatorCurrentRewards;
                fromPartial(object: {
                    rewards?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    period?: bigint;
                }): _42.ValidatorCurrentRewards;
                fromAmino(object: _42.ValidatorCurrentRewardsAmino): _42.ValidatorCurrentRewards;
                toAmino(message: _42.ValidatorCurrentRewards): _42.ValidatorCurrentRewardsAmino;
                fromAminoMsg(object: _42.ValidatorCurrentRewardsAminoMsg): _42.ValidatorCurrentRewards;
                toAminoMsg(message: _42.ValidatorCurrentRewards): _42.ValidatorCurrentRewardsAminoMsg;
                fromProtoMsg(message: _42.ValidatorCurrentRewardsProtoMsg): _42.ValidatorCurrentRewards;
                toProto(message: _42.ValidatorCurrentRewards): Uint8Array;
                toProtoMsg(message: _42.ValidatorCurrentRewards): _42.ValidatorCurrentRewardsProtoMsg;
            };
            ValidatorAccumulatedCommission: {
                typeUrl: string;
                aminoType: string;
                encode(message: _42.ValidatorAccumulatedCommission, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _42.ValidatorAccumulatedCommission;
                fromPartial(object: {
                    commission?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _42.ValidatorAccumulatedCommission;
                fromAmino(object: _42.ValidatorAccumulatedCommissionAmino): _42.ValidatorAccumulatedCommission;
                toAmino(message: _42.ValidatorAccumulatedCommission): _42.ValidatorAccumulatedCommissionAmino;
                fromAminoMsg(object: _42.ValidatorAccumulatedCommissionAminoMsg): _42.ValidatorAccumulatedCommission;
                toAminoMsg(message: _42.ValidatorAccumulatedCommission): _42.ValidatorAccumulatedCommissionAminoMsg;
                fromProtoMsg(message: _42.ValidatorAccumulatedCommissionProtoMsg): _42.ValidatorAccumulatedCommission;
                toProto(message: _42.ValidatorAccumulatedCommission): Uint8Array;
                toProtoMsg(message: _42.ValidatorAccumulatedCommission): _42.ValidatorAccumulatedCommissionProtoMsg;
            };
            ValidatorOutstandingRewards: {
                typeUrl: string;
                aminoType: string;
                encode(message: _42.ValidatorOutstandingRewards, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _42.ValidatorOutstandingRewards;
                fromPartial(object: {
                    rewards?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _42.ValidatorOutstandingRewards;
                fromAmino(object: _42.ValidatorOutstandingRewardsAmino): _42.ValidatorOutstandingRewards;
                toAmino(message: _42.ValidatorOutstandingRewards): _42.ValidatorOutstandingRewardsAmino;
                fromAminoMsg(object: _42.ValidatorOutstandingRewardsAminoMsg): _42.ValidatorOutstandingRewards;
                toAminoMsg(message: _42.ValidatorOutstandingRewards): _42.ValidatorOutstandingRewardsAminoMsg;
                fromProtoMsg(message: _42.ValidatorOutstandingRewardsProtoMsg): _42.ValidatorOutstandingRewards;
                toProto(message: _42.ValidatorOutstandingRewards): Uint8Array;
                toProtoMsg(message: _42.ValidatorOutstandingRewards): _42.ValidatorOutstandingRewardsProtoMsg;
            };
            ValidatorSlashEvent: {
                typeUrl: string;
                aminoType: string;
                encode(message: _42.ValidatorSlashEvent, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _42.ValidatorSlashEvent;
                fromPartial(object: {
                    validatorPeriod?: bigint;
                    fraction?: string;
                }): _42.ValidatorSlashEvent;
                fromAmino(object: _42.ValidatorSlashEventAmino): _42.ValidatorSlashEvent;
                toAmino(message: _42.ValidatorSlashEvent): _42.ValidatorSlashEventAmino;
                fromAminoMsg(object: _42.ValidatorSlashEventAminoMsg): _42.ValidatorSlashEvent;
                toAminoMsg(message: _42.ValidatorSlashEvent): _42.ValidatorSlashEventAminoMsg;
                fromProtoMsg(message: _42.ValidatorSlashEventProtoMsg): _42.ValidatorSlashEvent;
                toProto(message: _42.ValidatorSlashEvent): Uint8Array;
                toProtoMsg(message: _42.ValidatorSlashEvent): _42.ValidatorSlashEventProtoMsg;
            };
            ValidatorSlashEvents: {
                typeUrl: string;
                aminoType: string;
                encode(message: _42.ValidatorSlashEvents, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _42.ValidatorSlashEvents;
                fromPartial(object: {
                    validatorSlashEvents?: {
                        validatorPeriod?: bigint;
                        fraction?: string;
                    }[];
                }): _42.ValidatorSlashEvents;
                fromAmino(object: _42.ValidatorSlashEventsAmino): _42.ValidatorSlashEvents;
                toAmino(message: _42.ValidatorSlashEvents): _42.ValidatorSlashEventsAmino;
                fromAminoMsg(object: _42.ValidatorSlashEventsAminoMsg): _42.ValidatorSlashEvents;
                toAminoMsg(message: _42.ValidatorSlashEvents): _42.ValidatorSlashEventsAminoMsg;
                fromProtoMsg(message: _42.ValidatorSlashEventsProtoMsg): _42.ValidatorSlashEvents;
                toProto(message: _42.ValidatorSlashEvents): Uint8Array;
                toProtoMsg(message: _42.ValidatorSlashEvents): _42.ValidatorSlashEventsProtoMsg;
            };
            FeePool: {
                typeUrl: string;
                aminoType: string;
                encode(message: _42.FeePool, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _42.FeePool;
                fromPartial(object: {
                    communityPool?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _42.FeePool;
                fromAmino(object: _42.FeePoolAmino): _42.FeePool;
                toAmino(message: _42.FeePool): _42.FeePoolAmino;
                fromAminoMsg(object: _42.FeePoolAminoMsg): _42.FeePool;
                toAminoMsg(message: _42.FeePool): _42.FeePoolAminoMsg;
                fromProtoMsg(message: _42.FeePoolProtoMsg): _42.FeePool;
                toProto(message: _42.FeePool): Uint8Array;
                toProtoMsg(message: _42.FeePool): _42.FeePoolProtoMsg;
            };
            CommunityPoolSpendProposal: {
                typeUrl: string;
                aminoType: string;
                encode(message: _42.CommunityPoolSpendProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _42.CommunityPoolSpendProposal;
                fromPartial(object: {
                    $typeUrl?: "/cosmos.distribution.v1beta1.CommunityPoolSpendProposal";
                    title?: string;
                    description?: string;
                    recipient?: string;
                    amount?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _42.CommunityPoolSpendProposal;
                fromAmino(object: _42.CommunityPoolSpendProposalAmino): _42.CommunityPoolSpendProposal;
                toAmino(message: _42.CommunityPoolSpendProposal): _42.CommunityPoolSpendProposalAmino;
                fromAminoMsg(object: _42.CommunityPoolSpendProposalAminoMsg): _42.CommunityPoolSpendProposal;
                toAminoMsg(message: _42.CommunityPoolSpendProposal): _42.CommunityPoolSpendProposalAminoMsg;
                fromProtoMsg(message: _42.CommunityPoolSpendProposalProtoMsg): _42.CommunityPoolSpendProposal;
                toProto(message: _42.CommunityPoolSpendProposal): Uint8Array;
                toProtoMsg(message: _42.CommunityPoolSpendProposal): _42.CommunityPoolSpendProposalProtoMsg;
            };
            DelegatorStartingInfo: {
                typeUrl: string;
                aminoType: string;
                encode(message: _42.DelegatorStartingInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _42.DelegatorStartingInfo;
                fromPartial(object: {
                    previousPeriod?: bigint;
                    stake?: string;
                    height?: bigint;
                }): _42.DelegatorStartingInfo;
                fromAmino(object: _42.DelegatorStartingInfoAmino): _42.DelegatorStartingInfo;
                toAmino(message: _42.DelegatorStartingInfo): _42.DelegatorStartingInfoAmino;
                fromAminoMsg(object: _42.DelegatorStartingInfoAminoMsg): _42.DelegatorStartingInfo;
                toAminoMsg(message: _42.DelegatorStartingInfo): _42.DelegatorStartingInfoAminoMsg;
                fromProtoMsg(message: _42.DelegatorStartingInfoProtoMsg): _42.DelegatorStartingInfo;
                toProto(message: _42.DelegatorStartingInfo): Uint8Array;
                toProtoMsg(message: _42.DelegatorStartingInfo): _42.DelegatorStartingInfoProtoMsg;
            };
            DelegationDelegatorReward: {
                typeUrl: string;
                aminoType: string;
                encode(message: _42.DelegationDelegatorReward, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _42.DelegationDelegatorReward;
                fromPartial(object: {
                    validatorAddress?: string;
                    reward?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _42.DelegationDelegatorReward;
                fromAmino(object: _42.DelegationDelegatorRewardAmino): _42.DelegationDelegatorReward;
                toAmino(message: _42.DelegationDelegatorReward): _42.DelegationDelegatorRewardAmino;
                fromAminoMsg(object: _42.DelegationDelegatorRewardAminoMsg): _42.DelegationDelegatorReward;
                toAminoMsg(message: _42.DelegationDelegatorReward): _42.DelegationDelegatorRewardAminoMsg;
                fromProtoMsg(message: _42.DelegationDelegatorRewardProtoMsg): _42.DelegationDelegatorReward;
                toProto(message: _42.DelegationDelegatorReward): Uint8Array;
                toProtoMsg(message: _42.DelegationDelegatorReward): _42.DelegationDelegatorRewardProtoMsg;
            };
            CommunityPoolSpendProposalWithDeposit: {
                typeUrl: string;
                aminoType: string;
                encode(message: _42.CommunityPoolSpendProposalWithDeposit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _42.CommunityPoolSpendProposalWithDeposit;
                fromPartial(object: {
                    $typeUrl?: "/cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit";
                    title?: string;
                    description?: string;
                    recipient?: string;
                    amount?: string;
                    deposit?: string;
                }): _42.CommunityPoolSpendProposalWithDeposit;
                fromAmino(object: _42.CommunityPoolSpendProposalWithDepositAmino): _42.CommunityPoolSpendProposalWithDeposit;
                toAmino(message: _42.CommunityPoolSpendProposalWithDeposit): _42.CommunityPoolSpendProposalWithDepositAmino;
                fromAminoMsg(object: _42.CommunityPoolSpendProposalWithDepositAminoMsg): _42.CommunityPoolSpendProposalWithDeposit;
                toAminoMsg(message: _42.CommunityPoolSpendProposalWithDeposit): _42.CommunityPoolSpendProposalWithDepositAminoMsg;
                fromProtoMsg(message: _42.CommunityPoolSpendProposalWithDepositProtoMsg): _42.CommunityPoolSpendProposalWithDeposit;
                toProto(message: _42.CommunityPoolSpendProposalWithDeposit): Uint8Array;
                toProtoMsg(message: _42.CommunityPoolSpendProposalWithDeposit): _42.CommunityPoolSpendProposalWithDepositProtoMsg;
            };
        };
    }
    namespace evidence {
        namespace module {
            const v1: {
                Module: {
                    typeUrl: string;
                    aminoType: string;
                    encode(_: _46.Module, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _46.Module;
                    fromPartial(_: {}): _46.Module;
                    fromAmino(_: _46.ModuleAmino): _46.Module;
                    toAmino(_: _46.Module): _46.ModuleAmino;
                    fromAminoMsg(object: _46.ModuleAminoMsg): _46.Module;
                    toAminoMsg(message: _46.Module): _46.ModuleAminoMsg;
                    fromProtoMsg(message: _46.ModuleProtoMsg): _46.Module;
                    toProto(message: _46.Module): Uint8Array;
                    toProtoMsg(message: _46.Module): _46.ModuleProtoMsg;
                };
            };
        }
    }
    namespace feegrant {
        namespace module {
            const v1: {
                Module: {
                    typeUrl: string;
                    aminoType: string;
                    encode(_: _47.Module, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _47.Module;
                    fromPartial(_: {}): _47.Module;
                    fromAmino(_: _47.ModuleAmino): _47.Module;
                    toAmino(_: _47.Module): _47.ModuleAmino;
                    fromAminoMsg(object: _47.ModuleAminoMsg): _47.Module;
                    toAminoMsg(message: _47.Module): _47.ModuleAminoMsg;
                    fromProtoMsg(message: _47.ModuleProtoMsg): _47.Module;
                    toProto(message: _47.Module): Uint8Array;
                    toProtoMsg(message: _47.Module): _47.ModuleProtoMsg;
                };
            };
        }
        const v1beta1: {
            MsgClientImpl: typeof _235.MsgClientImpl;
            QueryClientImpl: typeof _218.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                allowance(request: _50.QueryAllowanceRequest): Promise<_50.QueryAllowanceResponse>;
                allowances(request: _50.QueryAllowancesRequest): Promise<_50.QueryAllowancesResponse>;
                allowancesByGranter(request: _50.QueryAllowancesByGranterRequest): Promise<_50.QueryAllowancesByGranterResponse>;
            };
            LCDQueryClient: typeof _201.LCDQueryClient;
            registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
            load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
            MessageComposer: {
                encoded: {
                    grantAllowance(value: _51.MsgGrantAllowance): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    revokeAllowance(value: _51.MsgRevokeAllowance): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                };
                withTypeUrl: {
                    grantAllowance(value: _51.MsgGrantAllowance): {
                        typeUrl: string;
                        value: _51.MsgGrantAllowance;
                    };
                    revokeAllowance(value: _51.MsgRevokeAllowance): {
                        typeUrl: string;
                        value: _51.MsgRevokeAllowance;
                    };
                };
                fromPartial: {
                    grantAllowance(value: _51.MsgGrantAllowance): {
                        typeUrl: string;
                        value: _51.MsgGrantAllowance;
                    };
                    revokeAllowance(value: _51.MsgRevokeAllowance): {
                        typeUrl: string;
                        value: _51.MsgRevokeAllowance;
                    };
                };
            };
            AminoConverter: {
                "/cosmos.feegrant.v1beta1.MsgGrantAllowance": {
                    aminoType: string;
                    toAmino: (message: _51.MsgGrantAllowance) => _51.MsgGrantAllowanceAmino;
                    fromAmino: (object: _51.MsgGrantAllowanceAmino) => _51.MsgGrantAllowance;
                };
                "/cosmos.feegrant.v1beta1.MsgRevokeAllowance": {
                    aminoType: string;
                    toAmino: (message: _51.MsgRevokeAllowance) => _51.MsgRevokeAllowanceAmino;
                    fromAmino: (object: _51.MsgRevokeAllowanceAmino) => _51.MsgRevokeAllowance;
                };
            };
            MsgGrantAllowance: {
                typeUrl: string;
                aminoType: string;
                encode(message: _51.MsgGrantAllowance, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _51.MsgGrantAllowance;
                fromPartial(object: {
                    granter?: string;
                    grantee?: string;
                    allowance?: {
                        $typeUrl?: string;
                        typeUrl?: string;
                        value?: Uint8Array;
                    } | {
                        $typeUrl?: "/cosmos.feegrant.v1beta1.BasicAllowance";
                        spendLimit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        expiration?: Date;
                    } | {
                        $typeUrl?: "/cosmos.feegrant.v1beta1.PeriodicAllowance";
                        basic?: {
                            $typeUrl?: "/cosmos.feegrant.v1beta1.BasicAllowance";
                            spendLimit?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            expiration?: Date;
                        };
                        period?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                        periodSpendLimit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        periodCanSpend?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        periodReset?: Date;
                    } | {
                        $typeUrl?: "/cosmos.feegrant.v1beta1.AllowedMsgAllowance";
                        allowance?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        } | {
                            $typeUrl?: "/cosmos.feegrant.v1beta1.BasicAllowance";
                            spendLimit?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            expiration?: Date;
                        } | {
                            $typeUrl?: "/cosmos.feegrant.v1beta1.PeriodicAllowance";
                            basic?: {
                                $typeUrl?: "/cosmos.feegrant.v1beta1.BasicAllowance";
                                spendLimit?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                expiration?: Date;
                            };
                            period?: {
                                seconds?: bigint;
                                nanos?: number;
                            };
                            periodSpendLimit?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            periodCanSpend?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            periodReset?: Date;
                        } | any;
                        allowedMessages?: string[];
                    };
                }): _51.MsgGrantAllowance;
                fromAmino(object: _51.MsgGrantAllowanceAmino): _51.MsgGrantAllowance;
                toAmino(message: _51.MsgGrantAllowance): _51.MsgGrantAllowanceAmino;
                fromAminoMsg(object: _51.MsgGrantAllowanceAminoMsg): _51.MsgGrantAllowance;
                toAminoMsg(message: _51.MsgGrantAllowance): _51.MsgGrantAllowanceAminoMsg;
                fromProtoMsg(message: _51.MsgGrantAllowanceProtoMsg): _51.MsgGrantAllowance;
                toProto(message: _51.MsgGrantAllowance): Uint8Array;
                toProtoMsg(message: _51.MsgGrantAllowance): _51.MsgGrantAllowanceProtoMsg;
            };
            MsgGrantAllowanceResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _51.MsgGrantAllowanceResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _51.MsgGrantAllowanceResponse;
                fromPartial(_: {}): _51.MsgGrantAllowanceResponse;
                fromAmino(_: _51.MsgGrantAllowanceResponseAmino): _51.MsgGrantAllowanceResponse;
                toAmino(_: _51.MsgGrantAllowanceResponse): _51.MsgGrantAllowanceResponseAmino;
                fromAminoMsg(object: _51.MsgGrantAllowanceResponseAminoMsg): _51.MsgGrantAllowanceResponse;
                toAminoMsg(message: _51.MsgGrantAllowanceResponse): _51.MsgGrantAllowanceResponseAminoMsg;
                fromProtoMsg(message: _51.MsgGrantAllowanceResponseProtoMsg): _51.MsgGrantAllowanceResponse;
                toProto(message: _51.MsgGrantAllowanceResponse): Uint8Array;
                toProtoMsg(message: _51.MsgGrantAllowanceResponse): _51.MsgGrantAllowanceResponseProtoMsg;
            };
            MsgRevokeAllowance: {
                typeUrl: string;
                aminoType: string;
                encode(message: _51.MsgRevokeAllowance, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _51.MsgRevokeAllowance;
                fromPartial(object: {
                    granter?: string;
                    grantee?: string;
                }): _51.MsgRevokeAllowance;
                fromAmino(object: _51.MsgRevokeAllowanceAmino): _51.MsgRevokeAllowance;
                toAmino(message: _51.MsgRevokeAllowance): _51.MsgRevokeAllowanceAmino;
                fromAminoMsg(object: _51.MsgRevokeAllowanceAminoMsg): _51.MsgRevokeAllowance;
                toAminoMsg(message: _51.MsgRevokeAllowance): _51.MsgRevokeAllowanceAminoMsg;
                fromProtoMsg(message: _51.MsgRevokeAllowanceProtoMsg): _51.MsgRevokeAllowance;
                toProto(message: _51.MsgRevokeAllowance): Uint8Array;
                toProtoMsg(message: _51.MsgRevokeAllowance): _51.MsgRevokeAllowanceProtoMsg;
            };
            MsgRevokeAllowanceResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _51.MsgRevokeAllowanceResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _51.MsgRevokeAllowanceResponse;
                fromPartial(_: {}): _51.MsgRevokeAllowanceResponse;
                fromAmino(_: _51.MsgRevokeAllowanceResponseAmino): _51.MsgRevokeAllowanceResponse;
                toAmino(_: _51.MsgRevokeAllowanceResponse): _51.MsgRevokeAllowanceResponseAmino;
                fromAminoMsg(object: _51.MsgRevokeAllowanceResponseAminoMsg): _51.MsgRevokeAllowanceResponse;
                toAminoMsg(message: _51.MsgRevokeAllowanceResponse): _51.MsgRevokeAllowanceResponseAminoMsg;
                fromProtoMsg(message: _51.MsgRevokeAllowanceResponseProtoMsg): _51.MsgRevokeAllowanceResponse;
                toProto(message: _51.MsgRevokeAllowanceResponse): Uint8Array;
                toProtoMsg(message: _51.MsgRevokeAllowanceResponse): _51.MsgRevokeAllowanceResponseProtoMsg;
            };
            Cosmos_feegrantv1beta1FeeAllowanceI_InterfaceDecoder: (input: Uint8Array | import("..").BinaryReader) => import("../google/protobuf/any").Any | _48.BasicAllowance | _48.PeriodicAllowance | _48.AllowedMsgAllowance;
            Cosmos_feegrantv1beta1FeeAllowanceI_FromAmino: (content: import("../google/protobuf/any").AnyAmino) => import("../google/protobuf/any").Any;
            Cosmos_feegrantv1beta1FeeAllowanceI_ToAmino: (content: import("../google/protobuf/any").Any) => import("../google/protobuf/any").AnyAmino;
            QueryAllowanceRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _50.QueryAllowanceRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _50.QueryAllowanceRequest;
                fromPartial(object: {
                    granter?: string;
                    grantee?: string;
                }): _50.QueryAllowanceRequest;
                fromAmino(object: _50.QueryAllowanceRequestAmino): _50.QueryAllowanceRequest;
                toAmino(message: _50.QueryAllowanceRequest): _50.QueryAllowanceRequestAmino;
                fromAminoMsg(object: _50.QueryAllowanceRequestAminoMsg): _50.QueryAllowanceRequest;
                toAminoMsg(message: _50.QueryAllowanceRequest): _50.QueryAllowanceRequestAminoMsg;
                fromProtoMsg(message: _50.QueryAllowanceRequestProtoMsg): _50.QueryAllowanceRequest;
                toProto(message: _50.QueryAllowanceRequest): Uint8Array;
                toProtoMsg(message: _50.QueryAllowanceRequest): _50.QueryAllowanceRequestProtoMsg;
            };
            QueryAllowanceResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _50.QueryAllowanceResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _50.QueryAllowanceResponse;
                fromPartial(object: {
                    allowance?: {
                        granter?: string;
                        grantee?: string;
                        allowance?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        } | {
                            $typeUrl?: "/cosmos.feegrant.v1beta1.BasicAllowance";
                            spendLimit?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            expiration?: Date;
                        } | {
                            $typeUrl?: "/cosmos.feegrant.v1beta1.PeriodicAllowance";
                            basic?: {
                                $typeUrl?: "/cosmos.feegrant.v1beta1.BasicAllowance";
                                spendLimit?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                expiration?: Date;
                            };
                            period?: {
                                seconds?: bigint;
                                nanos?: number;
                            };
                            periodSpendLimit?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            periodCanSpend?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            periodReset?: Date;
                        } | {
                            $typeUrl?: "/cosmos.feegrant.v1beta1.AllowedMsgAllowance";
                            allowance?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            } | {
                                $typeUrl?: "/cosmos.feegrant.v1beta1.BasicAllowance";
                                spendLimit?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                expiration?: Date;
                            } | {
                                $typeUrl?: "/cosmos.feegrant.v1beta1.PeriodicAllowance";
                                basic?: {
                                    $typeUrl?: "/cosmos.feegrant.v1beta1.BasicAllowance";
                                    spendLimit?: {
                                        denom?: string;
                                        amount?: string;
                                    }[];
                                    expiration?: Date;
                                };
                                period?: {
                                    seconds?: bigint;
                                    nanos?: number;
                                };
                                periodSpendLimit?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                periodCanSpend?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                periodReset?: Date;
                            } | any;
                            allowedMessages?: string[];
                        };
                    };
                }): _50.QueryAllowanceResponse;
                fromAmino(object: _50.QueryAllowanceResponseAmino): _50.QueryAllowanceResponse;
                toAmino(message: _50.QueryAllowanceResponse): _50.QueryAllowanceResponseAmino;
                fromAminoMsg(object: _50.QueryAllowanceResponseAminoMsg): _50.QueryAllowanceResponse;
                toAminoMsg(message: _50.QueryAllowanceResponse): _50.QueryAllowanceResponseAminoMsg;
                fromProtoMsg(message: _50.QueryAllowanceResponseProtoMsg): _50.QueryAllowanceResponse;
                toProto(message: _50.QueryAllowanceResponse): Uint8Array;
                toProtoMsg(message: _50.QueryAllowanceResponse): _50.QueryAllowanceResponseProtoMsg;
            };
            QueryAllowancesRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _50.QueryAllowancesRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _50.QueryAllowancesRequest;
                fromPartial(object: {
                    grantee?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _50.QueryAllowancesRequest;
                fromAmino(object: _50.QueryAllowancesRequestAmino): _50.QueryAllowancesRequest;
                toAmino(message: _50.QueryAllowancesRequest): _50.QueryAllowancesRequestAmino;
                fromAminoMsg(object: _50.QueryAllowancesRequestAminoMsg): _50.QueryAllowancesRequest;
                toAminoMsg(message: _50.QueryAllowancesRequest): _50.QueryAllowancesRequestAminoMsg;
                fromProtoMsg(message: _50.QueryAllowancesRequestProtoMsg): _50.QueryAllowancesRequest;
                toProto(message: _50.QueryAllowancesRequest): Uint8Array;
                toProtoMsg(message: _50.QueryAllowancesRequest): _50.QueryAllowancesRequestProtoMsg;
            };
            QueryAllowancesResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _50.QueryAllowancesResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _50.QueryAllowancesResponse;
                fromPartial(object: {
                    allowances?: {
                        granter?: string;
                        grantee?: string;
                        allowance?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        } | {
                            $typeUrl?: "/cosmos.feegrant.v1beta1.BasicAllowance";
                            spendLimit?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            expiration?: Date;
                        } | {
                            $typeUrl?: "/cosmos.feegrant.v1beta1.PeriodicAllowance";
                            basic?: {
                                $typeUrl?: "/cosmos.feegrant.v1beta1.BasicAllowance";
                                spendLimit?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                expiration?: Date;
                            };
                            period?: {
                                seconds?: bigint;
                                nanos?: number;
                            };
                            periodSpendLimit?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            periodCanSpend?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            periodReset?: Date;
                        } | {
                            $typeUrl?: "/cosmos.feegrant.v1beta1.AllowedMsgAllowance";
                            allowance?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            } | {
                                $typeUrl?: "/cosmos.feegrant.v1beta1.BasicAllowance";
                                spendLimit?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                expiration?: Date;
                            } | {
                                $typeUrl?: "/cosmos.feegrant.v1beta1.PeriodicAllowance";
                                basic?: {
                                    $typeUrl?: "/cosmos.feegrant.v1beta1.BasicAllowance";
                                    spendLimit?: {
                                        denom?: string;
                                        amount?: string;
                                    }[];
                                    expiration?: Date;
                                };
                                period?: {
                                    seconds?: bigint;
                                    nanos?: number;
                                };
                                periodSpendLimit?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                periodCanSpend?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                periodReset?: Date;
                            } | any;
                            allowedMessages?: string[];
                        };
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _50.QueryAllowancesResponse;
                fromAmino(object: _50.QueryAllowancesResponseAmino): _50.QueryAllowancesResponse;
                toAmino(message: _50.QueryAllowancesResponse): _50.QueryAllowancesResponseAmino;
                fromAminoMsg(object: _50.QueryAllowancesResponseAminoMsg): _50.QueryAllowancesResponse;
                toAminoMsg(message: _50.QueryAllowancesResponse): _50.QueryAllowancesResponseAminoMsg;
                fromProtoMsg(message: _50.QueryAllowancesResponseProtoMsg): _50.QueryAllowancesResponse;
                toProto(message: _50.QueryAllowancesResponse): Uint8Array;
                toProtoMsg(message: _50.QueryAllowancesResponse): _50.QueryAllowancesResponseProtoMsg;
            };
            QueryAllowancesByGranterRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _50.QueryAllowancesByGranterRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _50.QueryAllowancesByGranterRequest;
                fromPartial(object: {
                    granter?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _50.QueryAllowancesByGranterRequest;
                fromAmino(object: _50.QueryAllowancesByGranterRequestAmino): _50.QueryAllowancesByGranterRequest;
                toAmino(message: _50.QueryAllowancesByGranterRequest): _50.QueryAllowancesByGranterRequestAmino;
                fromAminoMsg(object: _50.QueryAllowancesByGranterRequestAminoMsg): _50.QueryAllowancesByGranterRequest;
                toAminoMsg(message: _50.QueryAllowancesByGranterRequest): _50.QueryAllowancesByGranterRequestAminoMsg;
                fromProtoMsg(message: _50.QueryAllowancesByGranterRequestProtoMsg): _50.QueryAllowancesByGranterRequest;
                toProto(message: _50.QueryAllowancesByGranterRequest): Uint8Array;
                toProtoMsg(message: _50.QueryAllowancesByGranterRequest): _50.QueryAllowancesByGranterRequestProtoMsg;
            };
            QueryAllowancesByGranterResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _50.QueryAllowancesByGranterResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _50.QueryAllowancesByGranterResponse;
                fromPartial(object: {
                    allowances?: {
                        granter?: string;
                        grantee?: string;
                        allowance?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        } | {
                            $typeUrl?: "/cosmos.feegrant.v1beta1.BasicAllowance";
                            spendLimit?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            expiration?: Date;
                        } | {
                            $typeUrl?: "/cosmos.feegrant.v1beta1.PeriodicAllowance";
                            basic?: {
                                $typeUrl?: "/cosmos.feegrant.v1beta1.BasicAllowance";
                                spendLimit?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                expiration?: Date;
                            };
                            period?: {
                                seconds?: bigint;
                                nanos?: number;
                            };
                            periodSpendLimit?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            periodCanSpend?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            periodReset?: Date;
                        } | {
                            $typeUrl?: "/cosmos.feegrant.v1beta1.AllowedMsgAllowance";
                            allowance?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            } | {
                                $typeUrl?: "/cosmos.feegrant.v1beta1.BasicAllowance";
                                spendLimit?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                expiration?: Date;
                            } | {
                                $typeUrl?: "/cosmos.feegrant.v1beta1.PeriodicAllowance";
                                basic?: {
                                    $typeUrl?: "/cosmos.feegrant.v1beta1.BasicAllowance";
                                    spendLimit?: {
                                        denom?: string;
                                        amount?: string;
                                    }[];
                                    expiration?: Date;
                                };
                                period?: {
                                    seconds?: bigint;
                                    nanos?: number;
                                };
                                periodSpendLimit?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                periodCanSpend?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                periodReset?: Date;
                            } | any;
                            allowedMessages?: string[];
                        };
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _50.QueryAllowancesByGranterResponse;
                fromAmino(object: _50.QueryAllowancesByGranterResponseAmino): _50.QueryAllowancesByGranterResponse;
                toAmino(message: _50.QueryAllowancesByGranterResponse): _50.QueryAllowancesByGranterResponseAmino;
                fromAminoMsg(object: _50.QueryAllowancesByGranterResponseAminoMsg): _50.QueryAllowancesByGranterResponse;
                toAminoMsg(message: _50.QueryAllowancesByGranterResponse): _50.QueryAllowancesByGranterResponseAminoMsg;
                fromProtoMsg(message: _50.QueryAllowancesByGranterResponseProtoMsg): _50.QueryAllowancesByGranterResponse;
                toProto(message: _50.QueryAllowancesByGranterResponse): Uint8Array;
                toProtoMsg(message: _50.QueryAllowancesByGranterResponse): _50.QueryAllowancesByGranterResponseProtoMsg;
            };
            GenesisState: {
                typeUrl: string;
                aminoType: string;
                encode(message: _49.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _49.GenesisState;
                fromPartial(object: {
                    allowances?: {
                        granter?: string;
                        grantee?: string;
                        allowance?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        } | {
                            $typeUrl?: "/cosmos.feegrant.v1beta1.BasicAllowance";
                            spendLimit?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            expiration?: Date;
                        } | {
                            $typeUrl?: "/cosmos.feegrant.v1beta1.PeriodicAllowance";
                            basic?: {
                                $typeUrl?: "/cosmos.feegrant.v1beta1.BasicAllowance";
                                spendLimit?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                expiration?: Date;
                            };
                            period?: {
                                seconds?: bigint;
                                nanos?: number;
                            };
                            periodSpendLimit?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            periodCanSpend?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            periodReset?: Date;
                        } | {
                            $typeUrl?: "/cosmos.feegrant.v1beta1.AllowedMsgAllowance";
                            allowance?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            } | {
                                $typeUrl?: "/cosmos.feegrant.v1beta1.BasicAllowance";
                                spendLimit?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                expiration?: Date;
                            } | {
                                $typeUrl?: "/cosmos.feegrant.v1beta1.PeriodicAllowance";
                                basic?: {
                                    $typeUrl?: "/cosmos.feegrant.v1beta1.BasicAllowance";
                                    spendLimit?: {
                                        denom?: string;
                                        amount?: string;
                                    }[];
                                    expiration?: Date;
                                };
                                period?: {
                                    seconds?: bigint;
                                    nanos?: number;
                                };
                                periodSpendLimit?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                periodCanSpend?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                periodReset?: Date;
                            } | any;
                            allowedMessages?: string[];
                        };
                    }[];
                }): _49.GenesisState;
                fromAmino(object: _49.GenesisStateAmino): _49.GenesisState;
                toAmino(message: _49.GenesisState): _49.GenesisStateAmino;
                fromAminoMsg(object: _49.GenesisStateAminoMsg): _49.GenesisState;
                toAminoMsg(message: _49.GenesisState): _49.GenesisStateAminoMsg;
                fromProtoMsg(message: _49.GenesisStateProtoMsg): _49.GenesisState;
                toProto(message: _49.GenesisState): Uint8Array;
                toProtoMsg(message: _49.GenesisState): _49.GenesisStateProtoMsg;
            };
            BasicAllowance: {
                typeUrl: string;
                aminoType: string;
                encode(message: _48.BasicAllowance, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _48.BasicAllowance;
                fromPartial(object: {
                    $typeUrl?: "/cosmos.feegrant.v1beta1.BasicAllowance";
                    spendLimit?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    expiration?: Date;
                }): _48.BasicAllowance;
                fromAmino(object: _48.BasicAllowanceAmino): _48.BasicAllowance;
                toAmino(message: _48.BasicAllowance): _48.BasicAllowanceAmino;
                fromAminoMsg(object: _48.BasicAllowanceAminoMsg): _48.BasicAllowance;
                toAminoMsg(message: _48.BasicAllowance): _48.BasicAllowanceAminoMsg;
                fromProtoMsg(message: _48.BasicAllowanceProtoMsg): _48.BasicAllowance;
                toProto(message: _48.BasicAllowance): Uint8Array;
                toProtoMsg(message: _48.BasicAllowance): _48.BasicAllowanceProtoMsg;
            };
            PeriodicAllowance: {
                typeUrl: string;
                aminoType: string;
                encode(message: _48.PeriodicAllowance, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _48.PeriodicAllowance;
                fromPartial(object: {
                    $typeUrl?: "/cosmos.feegrant.v1beta1.PeriodicAllowance";
                    basic?: {
                        $typeUrl?: "/cosmos.feegrant.v1beta1.BasicAllowance";
                        spendLimit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        expiration?: Date;
                    };
                    period?: {
                        seconds?: bigint;
                        nanos?: number;
                    };
                    periodSpendLimit?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    periodCanSpend?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    periodReset?: Date;
                }): _48.PeriodicAllowance;
                fromAmino(object: _48.PeriodicAllowanceAmino): _48.PeriodicAllowance;
                toAmino(message: _48.PeriodicAllowance): _48.PeriodicAllowanceAmino;
                fromAminoMsg(object: _48.PeriodicAllowanceAminoMsg): _48.PeriodicAllowance;
                toAminoMsg(message: _48.PeriodicAllowance): _48.PeriodicAllowanceAminoMsg;
                fromProtoMsg(message: _48.PeriodicAllowanceProtoMsg): _48.PeriodicAllowance;
                toProto(message: _48.PeriodicAllowance): Uint8Array;
                toProtoMsg(message: _48.PeriodicAllowance): _48.PeriodicAllowanceProtoMsg;
            };
            AllowedMsgAllowance: {
                typeUrl: string;
                aminoType: string;
                encode(message: _48.AllowedMsgAllowance, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _48.AllowedMsgAllowance;
                fromPartial(object: {
                    $typeUrl?: "/cosmos.feegrant.v1beta1.AllowedMsgAllowance";
                    allowance?: {
                        $typeUrl?: string;
                        typeUrl?: string;
                        value?: Uint8Array;
                    } | {
                        $typeUrl?: "/cosmos.feegrant.v1beta1.BasicAllowance";
                        spendLimit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        expiration?: Date;
                    } | {
                        $typeUrl?: "/cosmos.feegrant.v1beta1.PeriodicAllowance";
                        basic?: {
                            $typeUrl?: "/cosmos.feegrant.v1beta1.BasicAllowance";
                            spendLimit?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            expiration?: Date;
                        };
                        period?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                        periodSpendLimit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        periodCanSpend?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        periodReset?: Date;
                    } | any;
                    allowedMessages?: string[];
                }): _48.AllowedMsgAllowance;
                fromAmino(object: _48.AllowedMsgAllowanceAmino): _48.AllowedMsgAllowance;
                toAmino(message: _48.AllowedMsgAllowance): _48.AllowedMsgAllowanceAmino;
                fromAminoMsg(object: _48.AllowedMsgAllowanceAminoMsg): _48.AllowedMsgAllowance;
                toAminoMsg(message: _48.AllowedMsgAllowance): _48.AllowedMsgAllowanceAminoMsg;
                fromProtoMsg(message: _48.AllowedMsgAllowanceProtoMsg): _48.AllowedMsgAllowance;
                toProto(message: _48.AllowedMsgAllowance): Uint8Array;
                toProtoMsg(message: _48.AllowedMsgAllowance): _48.AllowedMsgAllowanceProtoMsg;
            };
            Grant: {
                typeUrl: string;
                aminoType: string;
                encode(message: _48.Grant, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _48.Grant;
                fromPartial(object: {
                    granter?: string;
                    grantee?: string;
                    allowance?: {
                        $typeUrl?: string;
                        typeUrl?: string;
                        value?: Uint8Array;
                    } | {
                        $typeUrl?: "/cosmos.feegrant.v1beta1.BasicAllowance";
                        spendLimit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        expiration?: Date;
                    } | {
                        $typeUrl?: "/cosmos.feegrant.v1beta1.PeriodicAllowance";
                        basic?: {
                            $typeUrl?: "/cosmos.feegrant.v1beta1.BasicAllowance";
                            spendLimit?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            expiration?: Date;
                        };
                        period?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                        periodSpendLimit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        periodCanSpend?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        periodReset?: Date;
                    } | {
                        $typeUrl?: "/cosmos.feegrant.v1beta1.AllowedMsgAllowance";
                        allowance?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        } | {
                            $typeUrl?: "/cosmos.feegrant.v1beta1.BasicAllowance";
                            spendLimit?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            expiration?: Date;
                        } | {
                            $typeUrl?: "/cosmos.feegrant.v1beta1.PeriodicAllowance";
                            basic?: {
                                $typeUrl?: "/cosmos.feegrant.v1beta1.BasicAllowance";
                                spendLimit?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                expiration?: Date;
                            };
                            period?: {
                                seconds?: bigint;
                                nanos?: number;
                            };
                            periodSpendLimit?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            periodCanSpend?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            periodReset?: Date;
                        } | any;
                        allowedMessages?: string[];
                    };
                }): _48.Grant;
                fromAmino(object: _48.GrantAmino): _48.Grant;
                toAmino(message: _48.Grant): _48.GrantAmino;
                fromAminoMsg(object: _48.GrantAminoMsg): _48.Grant;
                toAminoMsg(message: _48.Grant): _48.GrantAminoMsg;
                fromProtoMsg(message: _48.GrantProtoMsg): _48.Grant;
                toProto(message: _48.Grant): Uint8Array;
                toProtoMsg(message: _48.Grant): _48.GrantProtoMsg;
            };
        };
    }
    namespace genutil {
        namespace module {
            const v1: {
                Module: {
                    typeUrl: string;
                    aminoType: string;
                    encode(_: _52.Module, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _52.Module;
                    fromPartial(_: {}): _52.Module;
                    fromAmino(_: _52.ModuleAmino): _52.Module;
                    toAmino(_: _52.Module): _52.ModuleAmino;
                    fromAminoMsg(object: _52.ModuleAminoMsg): _52.Module;
                    toAminoMsg(message: _52.Module): _52.ModuleAminoMsg;
                    fromProtoMsg(message: _52.ModuleProtoMsg): _52.Module;
                    toProto(message: _52.Module): Uint8Array;
                    toProtoMsg(message: _52.Module): _52.ModuleProtoMsg;
                };
            };
        }
    }
    namespace gov {
        namespace module {
            const v1: {
                Module: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _53.Module, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _53.Module;
                    fromPartial(object: {
                        maxMetadataLen?: bigint;
                        authority?: string;
                    }): _53.Module;
                    fromAmino(object: _53.ModuleAmino): _53.Module;
                    toAmino(message: _53.Module): _53.ModuleAmino;
                    fromAminoMsg(object: _53.ModuleAminoMsg): _53.Module;
                    toAminoMsg(message: _53.Module): _53.ModuleAminoMsg;
                    fromProtoMsg(message: _53.ModuleProtoMsg): _53.Module;
                    toProto(message: _53.Module): Uint8Array;
                    toProtoMsg(message: _53.Module): _53.ModuleProtoMsg;
                };
            };
        }
        const v1: {
            MsgClientImpl: typeof _236.MsgClientImpl;
            QueryClientImpl: typeof _219.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                constitution(request?: _56.QueryConstitutionRequest): Promise<_56.QueryConstitutionResponse>;
                proposal(request: _56.QueryProposalRequest): Promise<_56.QueryProposalResponse>;
                proposals(request: _56.QueryProposalsRequest): Promise<_56.QueryProposalsResponse>;
                vote(request: _56.QueryVoteRequest): Promise<_56.QueryVoteResponse>;
                votes(request: _56.QueryVotesRequest): Promise<_56.QueryVotesResponse>;
                params(request: _56.QueryParamsRequest): Promise<_56.QueryParamsResponse>;
                deposit(request: _56.QueryDepositRequest): Promise<_56.QueryDepositResponse>;
                deposits(request: _56.QueryDepositsRequest): Promise<_56.QueryDepositsResponse>;
                tallyResult(request: _56.QueryTallyResultRequest): Promise<_56.QueryTallyResultResponse>;
            };
            LCDQueryClient: typeof _202.LCDQueryClient;
            registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
            load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
            MessageComposer: {
                encoded: {
                    submitProposal(value: _57.MsgSubmitProposal): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    execLegacyContent(value: _57.MsgExecLegacyContent): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    vote(value: _57.MsgVote): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    voteWeighted(value: _57.MsgVoteWeighted): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    deposit(value: _57.MsgDeposit): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    updateParams(value: _57.MsgUpdateParams): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    cancelProposal(value: _57.MsgCancelProposal): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                };
                withTypeUrl: {
                    submitProposal(value: _57.MsgSubmitProposal): {
                        typeUrl: string;
                        value: _57.MsgSubmitProposal;
                    };
                    execLegacyContent(value: _57.MsgExecLegacyContent): {
                        typeUrl: string;
                        value: _57.MsgExecLegacyContent;
                    };
                    vote(value: _57.MsgVote): {
                        typeUrl: string;
                        value: _57.MsgVote;
                    };
                    voteWeighted(value: _57.MsgVoteWeighted): {
                        typeUrl: string;
                        value: _57.MsgVoteWeighted;
                    };
                    deposit(value: _57.MsgDeposit): {
                        typeUrl: string;
                        value: _57.MsgDeposit;
                    };
                    updateParams(value: _57.MsgUpdateParams): {
                        typeUrl: string;
                        value: _57.MsgUpdateParams;
                    };
                    cancelProposal(value: _57.MsgCancelProposal): {
                        typeUrl: string;
                        value: _57.MsgCancelProposal;
                    };
                };
                fromPartial: {
                    submitProposal(value: _57.MsgSubmitProposal): {
                        typeUrl: string;
                        value: _57.MsgSubmitProposal;
                    };
                    execLegacyContent(value: _57.MsgExecLegacyContent): {
                        typeUrl: string;
                        value: _57.MsgExecLegacyContent;
                    };
                    vote(value: _57.MsgVote): {
                        typeUrl: string;
                        value: _57.MsgVote;
                    };
                    voteWeighted(value: _57.MsgVoteWeighted): {
                        typeUrl: string;
                        value: _57.MsgVoteWeighted;
                    };
                    deposit(value: _57.MsgDeposit): {
                        typeUrl: string;
                        value: _57.MsgDeposit;
                    };
                    updateParams(value: _57.MsgUpdateParams): {
                        typeUrl: string;
                        value: _57.MsgUpdateParams;
                    };
                    cancelProposal(value: _57.MsgCancelProposal): {
                        typeUrl: string;
                        value: _57.MsgCancelProposal;
                    };
                };
            };
            AminoConverter: {
                "/cosmos.gov.v1.MsgSubmitProposal": {
                    aminoType: string;
                    toAmino: (message: _57.MsgSubmitProposal) => _57.MsgSubmitProposalAmino;
                    fromAmino: (object: _57.MsgSubmitProposalAmino) => _57.MsgSubmitProposal;
                };
                "/cosmos.gov.v1.MsgExecLegacyContent": {
                    aminoType: string;
                    toAmino: (message: _57.MsgExecLegacyContent) => _57.MsgExecLegacyContentAmino;
                    fromAmino: (object: _57.MsgExecLegacyContentAmino) => _57.MsgExecLegacyContent;
                };
                "/cosmos.gov.v1.MsgVote": {
                    aminoType: string;
                    toAmino: (message: _57.MsgVote) => _57.MsgVoteAmino;
                    fromAmino: (object: _57.MsgVoteAmino) => _57.MsgVote;
                };
                "/cosmos.gov.v1.MsgVoteWeighted": {
                    aminoType: string;
                    toAmino: (message: _57.MsgVoteWeighted) => _57.MsgVoteWeightedAmino;
                    fromAmino: (object: _57.MsgVoteWeightedAmino) => _57.MsgVoteWeighted;
                };
                "/cosmos.gov.v1.MsgDeposit": {
                    aminoType: string;
                    toAmino: (message: _57.MsgDeposit) => _57.MsgDepositAmino;
                    fromAmino: (object: _57.MsgDepositAmino) => _57.MsgDeposit;
                };
                "/cosmos.gov.v1.MsgUpdateParams": {
                    aminoType: string;
                    toAmino: (message: _57.MsgUpdateParams) => _57.MsgUpdateParamsAmino;
                    fromAmino: (object: _57.MsgUpdateParamsAmino) => _57.MsgUpdateParams;
                };
                "/cosmos.gov.v1.MsgCancelProposal": {
                    aminoType: string;
                    toAmino: (message: _57.MsgCancelProposal) => _57.MsgCancelProposalAmino;
                    fromAmino: (object: _57.MsgCancelProposalAmino) => _57.MsgCancelProposal;
                };
            };
            MsgSubmitProposal: {
                typeUrl: string;
                aminoType: string;
                encode(message: _57.MsgSubmitProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _57.MsgSubmitProposal;
                fromPartial(object: {
                    messages?: {
                        $typeUrl?: string;
                        typeUrl?: string;
                        value?: Uint8Array;
                    }[];
                    initialDeposit?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    proposer?: string;
                    metadata?: string;
                    title?: string;
                    summary?: string;
                    expedited?: boolean;
                }): _57.MsgSubmitProposal;
                fromAmino(object: _57.MsgSubmitProposalAmino): _57.MsgSubmitProposal;
                toAmino(message: _57.MsgSubmitProposal): _57.MsgSubmitProposalAmino;
                fromAminoMsg(object: _57.MsgSubmitProposalAminoMsg): _57.MsgSubmitProposal;
                toAminoMsg(message: _57.MsgSubmitProposal): _57.MsgSubmitProposalAminoMsg;
                fromProtoMsg(message: _57.MsgSubmitProposalProtoMsg): _57.MsgSubmitProposal;
                toProto(message: _57.MsgSubmitProposal): Uint8Array;
                toProtoMsg(message: _57.MsgSubmitProposal): _57.MsgSubmitProposalProtoMsg;
            };
            MsgSubmitProposalResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _57.MsgSubmitProposalResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _57.MsgSubmitProposalResponse;
                fromPartial(object: {
                    proposalId?: bigint;
                }): _57.MsgSubmitProposalResponse;
                fromAmino(object: _57.MsgSubmitProposalResponseAmino): _57.MsgSubmitProposalResponse;
                toAmino(message: _57.MsgSubmitProposalResponse): _57.MsgSubmitProposalResponseAmino;
                fromAminoMsg(object: _57.MsgSubmitProposalResponseAminoMsg): _57.MsgSubmitProposalResponse;
                toAminoMsg(message: _57.MsgSubmitProposalResponse): _57.MsgSubmitProposalResponseAminoMsg;
                fromProtoMsg(message: _57.MsgSubmitProposalResponseProtoMsg): _57.MsgSubmitProposalResponse;
                toProto(message: _57.MsgSubmitProposalResponse): Uint8Array;
                toProtoMsg(message: _57.MsgSubmitProposalResponse): _57.MsgSubmitProposalResponseProtoMsg;
            };
            MsgExecLegacyContent: {
                typeUrl: string;
                aminoType: string;
                encode(message: _57.MsgExecLegacyContent, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _57.MsgExecLegacyContent;
                fromPartial(object: {
                    content?: {
                        $typeUrl?: string;
                        typeUrl?: string;
                        value?: Uint8Array;
                    } | {
                        $typeUrl?: "/cosmos.distribution.v1beta1.CommunityPoolSpendProposal";
                        title?: string;
                        description?: string;
                        recipient?: string;
                        amount?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    } | {
                        $typeUrl?: "/cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit";
                        title?: string;
                        description?: string;
                        recipient?: string;
                        amount?: string;
                        deposit?: string;
                    } | {
                        $typeUrl?: "/cosmos.params.v1beta1.ParameterChangeProposal";
                        title?: string;
                        description?: string;
                        changes?: {
                            subspace?: string;
                            key?: string;
                            value?: string;
                        }[];
                    } | {
                        $typeUrl?: "/cosmos.upgrade.v1beta1.SoftwareUpgradeProposal";
                        title?: string;
                        description?: string;
                        plan?: {
                            name?: string;
                            time?: Date;
                            height?: bigint;
                            info?: string;
                            upgradedClientState?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            };
                        };
                    } | {
                        $typeUrl?: "/cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal";
                        title?: string;
                        description?: string;
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.StoreCodeProposal";
                        title?: string;
                        description?: string;
                        runAs?: string;
                        wasmByteCode?: Uint8Array;
                        instantiatePermission?: {
                            permission?: import("../cosmwasm/wasm/v1/types").AccessType;
                            addresses?: string[];
                        };
                        unpinCode?: boolean;
                        source?: string;
                        builder?: string;
                        codeHash?: Uint8Array;
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.InstantiateContractProposal";
                        title?: string;
                        description?: string;
                        runAs?: string;
                        admin?: string;
                        codeId?: bigint;
                        label?: string;
                        msg?: Uint8Array;
                        funds?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.InstantiateContract2Proposal";
                        title?: string;
                        description?: string;
                        runAs?: string;
                        admin?: string;
                        codeId?: bigint;
                        label?: string;
                        msg?: Uint8Array;
                        funds?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        salt?: Uint8Array;
                        fixMsg?: boolean;
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.MigrateContractProposal";
                        title?: string;
                        description?: string;
                        contract?: string;
                        codeId?: bigint;
                        msg?: Uint8Array;
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.SudoContractProposal";
                        title?: string;
                        description?: string;
                        contract?: string;
                        msg?: Uint8Array;
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.ExecuteContractProposal";
                        title?: string;
                        description?: string;
                        runAs?: string;
                        contract?: string;
                        msg?: Uint8Array;
                        funds?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.UpdateAdminProposal";
                        title?: string;
                        description?: string;
                        newAdmin?: string;
                        contract?: string;
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.ClearAdminProposal";
                        title?: string;
                        description?: string;
                        contract?: string;
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.PinCodesProposal";
                        title?: string;
                        description?: string;
                        codeIds?: bigint[];
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.UnpinCodesProposal";
                        title?: string;
                        description?: string;
                        codeIds?: bigint[];
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.UpdateInstantiateConfigProposal";
                        title?: string;
                        description?: string;
                        accessConfigUpdates?: {
                            codeId?: bigint;
                            instantiatePermission?: {
                                permission?: import("../cosmwasm/wasm/v1/types").AccessType;
                                addresses?: string[];
                            };
                        }[];
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.StoreAndInstantiateContractProposal";
                        title?: string;
                        description?: string;
                        runAs?: string;
                        wasmByteCode?: Uint8Array;
                        instantiatePermission?: {
                            permission?: import("../cosmwasm/wasm/v1/types").AccessType;
                            addresses?: string[];
                        };
                        unpinCode?: boolean;
                        admin?: string;
                        label?: string;
                        msg?: Uint8Array;
                        funds?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        source?: string;
                        builder?: string;
                        codeHash?: Uint8Array;
                    } | {
                        $typeUrl?: "/cosmos.gov.v1beta1.TextProposal";
                        title?: string;
                        description?: string;
                    };
                    authority?: string;
                }): _57.MsgExecLegacyContent;
                fromAmino(object: _57.MsgExecLegacyContentAmino): _57.MsgExecLegacyContent;
                toAmino(message: _57.MsgExecLegacyContent): _57.MsgExecLegacyContentAmino;
                fromAminoMsg(object: _57.MsgExecLegacyContentAminoMsg): _57.MsgExecLegacyContent;
                toAminoMsg(message: _57.MsgExecLegacyContent): _57.MsgExecLegacyContentAminoMsg;
                fromProtoMsg(message: _57.MsgExecLegacyContentProtoMsg): _57.MsgExecLegacyContent;
                toProto(message: _57.MsgExecLegacyContent): Uint8Array;
                toProtoMsg(message: _57.MsgExecLegacyContent): _57.MsgExecLegacyContentProtoMsg;
            };
            MsgExecLegacyContentResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _57.MsgExecLegacyContentResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _57.MsgExecLegacyContentResponse;
                fromPartial(_: {}): _57.MsgExecLegacyContentResponse;
                fromAmino(_: _57.MsgExecLegacyContentResponseAmino): _57.MsgExecLegacyContentResponse;
                toAmino(_: _57.MsgExecLegacyContentResponse): _57.MsgExecLegacyContentResponseAmino;
                fromAminoMsg(object: _57.MsgExecLegacyContentResponseAminoMsg): _57.MsgExecLegacyContentResponse;
                toAminoMsg(message: _57.MsgExecLegacyContentResponse): _57.MsgExecLegacyContentResponseAminoMsg;
                fromProtoMsg(message: _57.MsgExecLegacyContentResponseProtoMsg): _57.MsgExecLegacyContentResponse;
                toProto(message: _57.MsgExecLegacyContentResponse): Uint8Array;
                toProtoMsg(message: _57.MsgExecLegacyContentResponse): _57.MsgExecLegacyContentResponseProtoMsg;
            };
            MsgVote: {
                typeUrl: string;
                aminoType: string;
                encode(message: _57.MsgVote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _57.MsgVote;
                fromPartial(object: {
                    proposalId?: bigint;
                    voter?: string;
                    option?: _55.VoteOption;
                    metadata?: string;
                }): _57.MsgVote;
                fromAmino(object: _57.MsgVoteAmino): _57.MsgVote;
                toAmino(message: _57.MsgVote): _57.MsgVoteAmino;
                fromAminoMsg(object: _57.MsgVoteAminoMsg): _57.MsgVote;
                toAminoMsg(message: _57.MsgVote): _57.MsgVoteAminoMsg;
                fromProtoMsg(message: _57.MsgVoteProtoMsg): _57.MsgVote;
                toProto(message: _57.MsgVote): Uint8Array;
                toProtoMsg(message: _57.MsgVote): _57.MsgVoteProtoMsg;
            };
            MsgVoteResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _57.MsgVoteResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _57.MsgVoteResponse;
                fromPartial(_: {}): _57.MsgVoteResponse;
                fromAmino(_: _57.MsgVoteResponseAmino): _57.MsgVoteResponse;
                toAmino(_: _57.MsgVoteResponse): _57.MsgVoteResponseAmino;
                fromAminoMsg(object: _57.MsgVoteResponseAminoMsg): _57.MsgVoteResponse;
                toAminoMsg(message: _57.MsgVoteResponse): _57.MsgVoteResponseAminoMsg;
                fromProtoMsg(message: _57.MsgVoteResponseProtoMsg): _57.MsgVoteResponse;
                toProto(message: _57.MsgVoteResponse): Uint8Array;
                toProtoMsg(message: _57.MsgVoteResponse): _57.MsgVoteResponseProtoMsg;
            };
            MsgVoteWeighted: {
                typeUrl: string;
                aminoType: string;
                encode(message: _57.MsgVoteWeighted, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _57.MsgVoteWeighted;
                fromPartial(object: {
                    proposalId?: bigint;
                    voter?: string;
                    options?: {
                        option?: _55.VoteOption;
                        weight?: string;
                    }[];
                    metadata?: string;
                }): _57.MsgVoteWeighted;
                fromAmino(object: _57.MsgVoteWeightedAmino): _57.MsgVoteWeighted;
                toAmino(message: _57.MsgVoteWeighted): _57.MsgVoteWeightedAmino;
                fromAminoMsg(object: _57.MsgVoteWeightedAminoMsg): _57.MsgVoteWeighted;
                toAminoMsg(message: _57.MsgVoteWeighted): _57.MsgVoteWeightedAminoMsg;
                fromProtoMsg(message: _57.MsgVoteWeightedProtoMsg): _57.MsgVoteWeighted;
                toProto(message: _57.MsgVoteWeighted): Uint8Array;
                toProtoMsg(message: _57.MsgVoteWeighted): _57.MsgVoteWeightedProtoMsg;
            };
            MsgVoteWeightedResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _57.MsgVoteWeightedResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _57.MsgVoteWeightedResponse;
                fromPartial(_: {}): _57.MsgVoteWeightedResponse;
                fromAmino(_: _57.MsgVoteWeightedResponseAmino): _57.MsgVoteWeightedResponse;
                toAmino(_: _57.MsgVoteWeightedResponse): _57.MsgVoteWeightedResponseAmino;
                fromAminoMsg(object: _57.MsgVoteWeightedResponseAminoMsg): _57.MsgVoteWeightedResponse;
                toAminoMsg(message: _57.MsgVoteWeightedResponse): _57.MsgVoteWeightedResponseAminoMsg;
                fromProtoMsg(message: _57.MsgVoteWeightedResponseProtoMsg): _57.MsgVoteWeightedResponse;
                toProto(message: _57.MsgVoteWeightedResponse): Uint8Array;
                toProtoMsg(message: _57.MsgVoteWeightedResponse): _57.MsgVoteWeightedResponseProtoMsg;
            };
            MsgDeposit: {
                typeUrl: string;
                aminoType: string;
                encode(message: _57.MsgDeposit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _57.MsgDeposit;
                fromPartial(object: {
                    proposalId?: bigint;
                    depositor?: string;
                    amount?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _57.MsgDeposit;
                fromAmino(object: _57.MsgDepositAmino): _57.MsgDeposit;
                toAmino(message: _57.MsgDeposit): _57.MsgDepositAmino;
                fromAminoMsg(object: _57.MsgDepositAminoMsg): _57.MsgDeposit;
                toAminoMsg(message: _57.MsgDeposit): _57.MsgDepositAminoMsg;
                fromProtoMsg(message: _57.MsgDepositProtoMsg): _57.MsgDeposit;
                toProto(message: _57.MsgDeposit): Uint8Array;
                toProtoMsg(message: _57.MsgDeposit): _57.MsgDepositProtoMsg;
            };
            MsgDepositResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _57.MsgDepositResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _57.MsgDepositResponse;
                fromPartial(_: {}): _57.MsgDepositResponse;
                fromAmino(_: _57.MsgDepositResponseAmino): _57.MsgDepositResponse;
                toAmino(_: _57.MsgDepositResponse): _57.MsgDepositResponseAmino;
                fromAminoMsg(object: _57.MsgDepositResponseAminoMsg): _57.MsgDepositResponse;
                toAminoMsg(message: _57.MsgDepositResponse): _57.MsgDepositResponseAminoMsg;
                fromProtoMsg(message: _57.MsgDepositResponseProtoMsg): _57.MsgDepositResponse;
                toProto(message: _57.MsgDepositResponse): Uint8Array;
                toProtoMsg(message: _57.MsgDepositResponse): _57.MsgDepositResponseProtoMsg;
            };
            MsgUpdateParams: {
                typeUrl: string;
                aminoType: string;
                encode(message: _57.MsgUpdateParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _57.MsgUpdateParams;
                fromPartial(object: {
                    authority?: string;
                    params?: {
                        minDeposit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        maxDepositPeriod?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                        votingPeriod?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                        quorum?: string;
                        threshold?: string;
                        vetoThreshold?: string;
                        minInitialDepositRatio?: string;
                        proposalCancelRatio?: string;
                        proposalCancelDest?: string;
                        expeditedVotingPeriod?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                        expeditedThreshold?: string;
                        expeditedMinDeposit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        burnVoteQuorum?: boolean;
                        burnProposalDepositPrevote?: boolean;
                        burnVoteVeto?: boolean;
                    };
                }): _57.MsgUpdateParams;
                fromAmino(object: _57.MsgUpdateParamsAmino): _57.MsgUpdateParams;
                toAmino(message: _57.MsgUpdateParams): _57.MsgUpdateParamsAmino;
                fromAminoMsg(object: _57.MsgUpdateParamsAminoMsg): _57.MsgUpdateParams;
                toAminoMsg(message: _57.MsgUpdateParams): _57.MsgUpdateParamsAminoMsg;
                fromProtoMsg(message: _57.MsgUpdateParamsProtoMsg): _57.MsgUpdateParams;
                toProto(message: _57.MsgUpdateParams): Uint8Array;
                toProtoMsg(message: _57.MsgUpdateParams): _57.MsgUpdateParamsProtoMsg;
            };
            MsgUpdateParamsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _57.MsgUpdateParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _57.MsgUpdateParamsResponse;
                fromPartial(_: {}): _57.MsgUpdateParamsResponse;
                fromAmino(_: _57.MsgUpdateParamsResponseAmino): _57.MsgUpdateParamsResponse;
                toAmino(_: _57.MsgUpdateParamsResponse): _57.MsgUpdateParamsResponseAmino;
                fromAminoMsg(object: _57.MsgUpdateParamsResponseAminoMsg): _57.MsgUpdateParamsResponse;
                toAminoMsg(message: _57.MsgUpdateParamsResponse): _57.MsgUpdateParamsResponseAminoMsg;
                fromProtoMsg(message: _57.MsgUpdateParamsResponseProtoMsg): _57.MsgUpdateParamsResponse;
                toProto(message: _57.MsgUpdateParamsResponse): Uint8Array;
                toProtoMsg(message: _57.MsgUpdateParamsResponse): _57.MsgUpdateParamsResponseProtoMsg;
            };
            MsgCancelProposal: {
                typeUrl: string;
                aminoType: string;
                encode(message: _57.MsgCancelProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _57.MsgCancelProposal;
                fromPartial(object: {
                    proposalId?: bigint;
                    proposer?: string;
                }): _57.MsgCancelProposal;
                fromAmino(object: _57.MsgCancelProposalAmino): _57.MsgCancelProposal;
                toAmino(message: _57.MsgCancelProposal): _57.MsgCancelProposalAmino;
                fromAminoMsg(object: _57.MsgCancelProposalAminoMsg): _57.MsgCancelProposal;
                toAminoMsg(message: _57.MsgCancelProposal): _57.MsgCancelProposalAminoMsg;
                fromProtoMsg(message: _57.MsgCancelProposalProtoMsg): _57.MsgCancelProposal;
                toProto(message: _57.MsgCancelProposal): Uint8Array;
                toProtoMsg(message: _57.MsgCancelProposal): _57.MsgCancelProposalProtoMsg;
            };
            MsgCancelProposalResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _57.MsgCancelProposalResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _57.MsgCancelProposalResponse;
                fromPartial(object: {
                    proposalId?: bigint;
                    canceledTime?: Date;
                    canceledHeight?: bigint;
                }): _57.MsgCancelProposalResponse;
                fromAmino(object: _57.MsgCancelProposalResponseAmino): _57.MsgCancelProposalResponse;
                toAmino(message: _57.MsgCancelProposalResponse): _57.MsgCancelProposalResponseAmino;
                fromAminoMsg(object: _57.MsgCancelProposalResponseAminoMsg): _57.MsgCancelProposalResponse;
                toAminoMsg(message: _57.MsgCancelProposalResponse): _57.MsgCancelProposalResponseAminoMsg;
                fromProtoMsg(message: _57.MsgCancelProposalResponseProtoMsg): _57.MsgCancelProposalResponse;
                toProto(message: _57.MsgCancelProposalResponse): Uint8Array;
                toProtoMsg(message: _57.MsgCancelProposalResponse): _57.MsgCancelProposalResponseProtoMsg;
            };
            Cosmos_govv1beta1Content_InterfaceDecoder: (input: Uint8Array | import("..").BinaryReader) => import("../google/protobuf/any").Any | _42.CommunityPoolSpendProposal | _42.CommunityPoolSpendProposalWithDeposit | _78.ParameterChangeProposal | _101.SoftwareUpgradeProposal | _101.CancelSoftwareUpgradeProposal | import("../cosmwasm/wasm/v1/proposal").StoreCodeProposal | import("../cosmwasm/wasm/v1/proposal").InstantiateContractProposal | import("../cosmwasm/wasm/v1/proposal").InstantiateContract2Proposal | import("../cosmwasm/wasm/v1/proposal").MigrateContractProposal | import("../cosmwasm/wasm/v1/proposal").SudoContractProposal | import("../cosmwasm/wasm/v1/proposal").ExecuteContractProposal | import("../cosmwasm/wasm/v1/proposal").UpdateAdminProposal | import("../cosmwasm/wasm/v1/proposal").ClearAdminProposal | import("../cosmwasm/wasm/v1/proposal").PinCodesProposal | import("../cosmwasm/wasm/v1/proposal").UnpinCodesProposal | import("../cosmwasm/wasm/v1/proposal").UpdateInstantiateConfigProposal | import("../cosmwasm/wasm/v1/proposal").StoreAndInstantiateContractProposal | _59.TextProposal;
            Cosmos_govv1beta1Content_FromAmino: (content: import("../google/protobuf/any").AnyAmino) => import("../google/protobuf/any").Any;
            Cosmos_govv1beta1Content_ToAmino: (content: import("../google/protobuf/any").Any) => import("../google/protobuf/any").AnyAmino;
            QueryConstitutionRequest: {
                typeUrl: string;
                aminoType: string;
                encode(_: _56.QueryConstitutionRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _56.QueryConstitutionRequest;
                fromPartial(_: {}): _56.QueryConstitutionRequest;
                fromAmino(_: _56.QueryConstitutionRequestAmino): _56.QueryConstitutionRequest;
                toAmino(_: _56.QueryConstitutionRequest): _56.QueryConstitutionRequestAmino;
                fromAminoMsg(object: _56.QueryConstitutionRequestAminoMsg): _56.QueryConstitutionRequest;
                toAminoMsg(message: _56.QueryConstitutionRequest): _56.QueryConstitutionRequestAminoMsg;
                fromProtoMsg(message: _56.QueryConstitutionRequestProtoMsg): _56.QueryConstitutionRequest;
                toProto(message: _56.QueryConstitutionRequest): Uint8Array;
                toProtoMsg(message: _56.QueryConstitutionRequest): _56.QueryConstitutionRequestProtoMsg;
            };
            QueryConstitutionResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _56.QueryConstitutionResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _56.QueryConstitutionResponse;
                fromPartial(object: {
                    constitution?: string;
                }): _56.QueryConstitutionResponse;
                fromAmino(object: _56.QueryConstitutionResponseAmino): _56.QueryConstitutionResponse;
                toAmino(message: _56.QueryConstitutionResponse): _56.QueryConstitutionResponseAmino;
                fromAminoMsg(object: _56.QueryConstitutionResponseAminoMsg): _56.QueryConstitutionResponse;
                toAminoMsg(message: _56.QueryConstitutionResponse): _56.QueryConstitutionResponseAminoMsg;
                fromProtoMsg(message: _56.QueryConstitutionResponseProtoMsg): _56.QueryConstitutionResponse;
                toProto(message: _56.QueryConstitutionResponse): Uint8Array;
                toProtoMsg(message: _56.QueryConstitutionResponse): _56.QueryConstitutionResponseProtoMsg;
            };
            QueryProposalRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _56.QueryProposalRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _56.QueryProposalRequest;
                fromPartial(object: {
                    proposalId?: bigint;
                }): _56.QueryProposalRequest;
                fromAmino(object: _56.QueryProposalRequestAmino): _56.QueryProposalRequest;
                toAmino(message: _56.QueryProposalRequest): _56.QueryProposalRequestAmino;
                fromAminoMsg(object: _56.QueryProposalRequestAminoMsg): _56.QueryProposalRequest;
                toAminoMsg(message: _56.QueryProposalRequest): _56.QueryProposalRequestAminoMsg;
                fromProtoMsg(message: _56.QueryProposalRequestProtoMsg): _56.QueryProposalRequest;
                toProto(message: _56.QueryProposalRequest): Uint8Array;
                toProtoMsg(message: _56.QueryProposalRequest): _56.QueryProposalRequestProtoMsg;
            };
            QueryProposalResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _56.QueryProposalResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _56.QueryProposalResponse;
                fromPartial(object: {
                    proposal?: {
                        id?: bigint;
                        messages?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        }[];
                        status?: _55.ProposalStatus;
                        finalTallyResult?: {
                            yesCount?: string;
                            abstainCount?: string;
                            noCount?: string;
                            noWithVetoCount?: string;
                        };
                        submitTime?: Date;
                        depositEndTime?: Date;
                        totalDeposit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        votingStartTime?: Date;
                        votingEndTime?: Date;
                        metadata?: string;
                        title?: string;
                        summary?: string;
                        proposer?: string;
                        expedited?: boolean;
                        failedReason?: string;
                    };
                }): _56.QueryProposalResponse;
                fromAmino(object: _56.QueryProposalResponseAmino): _56.QueryProposalResponse;
                toAmino(message: _56.QueryProposalResponse): _56.QueryProposalResponseAmino;
                fromAminoMsg(object: _56.QueryProposalResponseAminoMsg): _56.QueryProposalResponse;
                toAminoMsg(message: _56.QueryProposalResponse): _56.QueryProposalResponseAminoMsg;
                fromProtoMsg(message: _56.QueryProposalResponseProtoMsg): _56.QueryProposalResponse;
                toProto(message: _56.QueryProposalResponse): Uint8Array;
                toProtoMsg(message: _56.QueryProposalResponse): _56.QueryProposalResponseProtoMsg;
            };
            QueryProposalsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _56.QueryProposalsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _56.QueryProposalsRequest;
                fromPartial(object: {
                    proposalStatus?: _55.ProposalStatus;
                    voter?: string;
                    depositor?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _56.QueryProposalsRequest;
                fromAmino(object: _56.QueryProposalsRequestAmino): _56.QueryProposalsRequest;
                toAmino(message: _56.QueryProposalsRequest): _56.QueryProposalsRequestAmino;
                fromAminoMsg(object: _56.QueryProposalsRequestAminoMsg): _56.QueryProposalsRequest;
                toAminoMsg(message: _56.QueryProposalsRequest): _56.QueryProposalsRequestAminoMsg;
                fromProtoMsg(message: _56.QueryProposalsRequestProtoMsg): _56.QueryProposalsRequest;
                toProto(message: _56.QueryProposalsRequest): Uint8Array;
                toProtoMsg(message: _56.QueryProposalsRequest): _56.QueryProposalsRequestProtoMsg;
            };
            QueryProposalsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _56.QueryProposalsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _56.QueryProposalsResponse;
                fromPartial(object: {
                    proposals?: {
                        id?: bigint;
                        messages?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        }[];
                        status?: _55.ProposalStatus;
                        finalTallyResult?: {
                            yesCount?: string;
                            abstainCount?: string;
                            noCount?: string;
                            noWithVetoCount?: string;
                        };
                        submitTime?: Date;
                        depositEndTime?: Date;
                        totalDeposit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        votingStartTime?: Date;
                        votingEndTime?: Date;
                        metadata?: string;
                        title?: string;
                        summary?: string;
                        proposer?: string;
                        expedited?: boolean;
                        failedReason?: string;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _56.QueryProposalsResponse;
                fromAmino(object: _56.QueryProposalsResponseAmino): _56.QueryProposalsResponse;
                toAmino(message: _56.QueryProposalsResponse): _56.QueryProposalsResponseAmino;
                fromAminoMsg(object: _56.QueryProposalsResponseAminoMsg): _56.QueryProposalsResponse;
                toAminoMsg(message: _56.QueryProposalsResponse): _56.QueryProposalsResponseAminoMsg;
                fromProtoMsg(message: _56.QueryProposalsResponseProtoMsg): _56.QueryProposalsResponse;
                toProto(message: _56.QueryProposalsResponse): Uint8Array;
                toProtoMsg(message: _56.QueryProposalsResponse): _56.QueryProposalsResponseProtoMsg;
            };
            QueryVoteRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _56.QueryVoteRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _56.QueryVoteRequest;
                fromPartial(object: {
                    proposalId?: bigint;
                    voter?: string;
                }): _56.QueryVoteRequest;
                fromAmino(object: _56.QueryVoteRequestAmino): _56.QueryVoteRequest;
                toAmino(message: _56.QueryVoteRequest): _56.QueryVoteRequestAmino;
                fromAminoMsg(object: _56.QueryVoteRequestAminoMsg): _56.QueryVoteRequest;
                toAminoMsg(message: _56.QueryVoteRequest): _56.QueryVoteRequestAminoMsg;
                fromProtoMsg(message: _56.QueryVoteRequestProtoMsg): _56.QueryVoteRequest;
                toProto(message: _56.QueryVoteRequest): Uint8Array;
                toProtoMsg(message: _56.QueryVoteRequest): _56.QueryVoteRequestProtoMsg;
            };
            QueryVoteResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _56.QueryVoteResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _56.QueryVoteResponse;
                fromPartial(object: {
                    vote?: {
                        proposalId?: bigint;
                        voter?: string;
                        options?: {
                            option?: _55.VoteOption;
                            weight?: string;
                        }[];
                        metadata?: string;
                    };
                }): _56.QueryVoteResponse;
                fromAmino(object: _56.QueryVoteResponseAmino): _56.QueryVoteResponse;
                toAmino(message: _56.QueryVoteResponse): _56.QueryVoteResponseAmino;
                fromAminoMsg(object: _56.QueryVoteResponseAminoMsg): _56.QueryVoteResponse;
                toAminoMsg(message: _56.QueryVoteResponse): _56.QueryVoteResponseAminoMsg;
                fromProtoMsg(message: _56.QueryVoteResponseProtoMsg): _56.QueryVoteResponse;
                toProto(message: _56.QueryVoteResponse): Uint8Array;
                toProtoMsg(message: _56.QueryVoteResponse): _56.QueryVoteResponseProtoMsg;
            };
            QueryVotesRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _56.QueryVotesRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _56.QueryVotesRequest;
                fromPartial(object: {
                    proposalId?: bigint;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _56.QueryVotesRequest;
                fromAmino(object: _56.QueryVotesRequestAmino): _56.QueryVotesRequest;
                toAmino(message: _56.QueryVotesRequest): _56.QueryVotesRequestAmino;
                fromAminoMsg(object: _56.QueryVotesRequestAminoMsg): _56.QueryVotesRequest;
                toAminoMsg(message: _56.QueryVotesRequest): _56.QueryVotesRequestAminoMsg;
                fromProtoMsg(message: _56.QueryVotesRequestProtoMsg): _56.QueryVotesRequest;
                toProto(message: _56.QueryVotesRequest): Uint8Array;
                toProtoMsg(message: _56.QueryVotesRequest): _56.QueryVotesRequestProtoMsg;
            };
            QueryVotesResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _56.QueryVotesResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _56.QueryVotesResponse;
                fromPartial(object: {
                    votes?: {
                        proposalId?: bigint;
                        voter?: string;
                        options?: {
                            option?: _55.VoteOption;
                            weight?: string;
                        }[];
                        metadata?: string;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _56.QueryVotesResponse;
                fromAmino(object: _56.QueryVotesResponseAmino): _56.QueryVotesResponse;
                toAmino(message: _56.QueryVotesResponse): _56.QueryVotesResponseAmino;
                fromAminoMsg(object: _56.QueryVotesResponseAminoMsg): _56.QueryVotesResponse;
                toAminoMsg(message: _56.QueryVotesResponse): _56.QueryVotesResponseAminoMsg;
                fromProtoMsg(message: _56.QueryVotesResponseProtoMsg): _56.QueryVotesResponse;
                toProto(message: _56.QueryVotesResponse): Uint8Array;
                toProtoMsg(message: _56.QueryVotesResponse): _56.QueryVotesResponseProtoMsg;
            };
            QueryParamsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _56.QueryParamsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _56.QueryParamsRequest;
                fromPartial(object: {
                    paramsType?: string;
                }): _56.QueryParamsRequest;
                fromAmino(object: _56.QueryParamsRequestAmino): _56.QueryParamsRequest;
                toAmino(message: _56.QueryParamsRequest): _56.QueryParamsRequestAmino;
                fromAminoMsg(object: _56.QueryParamsRequestAminoMsg): _56.QueryParamsRequest;
                toAminoMsg(message: _56.QueryParamsRequest): _56.QueryParamsRequestAminoMsg;
                fromProtoMsg(message: _56.QueryParamsRequestProtoMsg): _56.QueryParamsRequest;
                toProto(message: _56.QueryParamsRequest): Uint8Array;
                toProtoMsg(message: _56.QueryParamsRequest): _56.QueryParamsRequestProtoMsg;
            };
            QueryParamsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _56.QueryParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _56.QueryParamsResponse;
                fromPartial(object: {
                    votingParams?: {
                        votingPeriod?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                    };
                    depositParams?: {
                        minDeposit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        maxDepositPeriod?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                    };
                    tallyParams?: {
                        quorum?: string;
                        threshold?: string;
                        vetoThreshold?: string;
                    };
                    params?: {
                        minDeposit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        maxDepositPeriod?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                        votingPeriod?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                        quorum?: string;
                        threshold?: string;
                        vetoThreshold?: string;
                        minInitialDepositRatio?: string;
                        proposalCancelRatio?: string;
                        proposalCancelDest?: string;
                        expeditedVotingPeriod?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                        expeditedThreshold?: string;
                        expeditedMinDeposit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        burnVoteQuorum?: boolean;
                        burnProposalDepositPrevote?: boolean;
                        burnVoteVeto?: boolean;
                    };
                }): _56.QueryParamsResponse;
                fromAmino(object: _56.QueryParamsResponseAmino): _56.QueryParamsResponse;
                toAmino(message: _56.QueryParamsResponse): _56.QueryParamsResponseAmino;
                fromAminoMsg(object: _56.QueryParamsResponseAminoMsg): _56.QueryParamsResponse;
                toAminoMsg(message: _56.QueryParamsResponse): _56.QueryParamsResponseAminoMsg;
                fromProtoMsg(message: _56.QueryParamsResponseProtoMsg): _56.QueryParamsResponse;
                toProto(message: _56.QueryParamsResponse): Uint8Array;
                toProtoMsg(message: _56.QueryParamsResponse): _56.QueryParamsResponseProtoMsg;
            };
            QueryDepositRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _56.QueryDepositRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _56.QueryDepositRequest;
                fromPartial(object: {
                    proposalId?: bigint;
                    depositor?: string;
                }): _56.QueryDepositRequest;
                fromAmino(object: _56.QueryDepositRequestAmino): _56.QueryDepositRequest;
                toAmino(message: _56.QueryDepositRequest): _56.QueryDepositRequestAmino;
                fromAminoMsg(object: _56.QueryDepositRequestAminoMsg): _56.QueryDepositRequest;
                toAminoMsg(message: _56.QueryDepositRequest): _56.QueryDepositRequestAminoMsg;
                fromProtoMsg(message: _56.QueryDepositRequestProtoMsg): _56.QueryDepositRequest;
                toProto(message: _56.QueryDepositRequest): Uint8Array;
                toProtoMsg(message: _56.QueryDepositRequest): _56.QueryDepositRequestProtoMsg;
            };
            QueryDepositResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _56.QueryDepositResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _56.QueryDepositResponse;
                fromPartial(object: {
                    deposit?: {
                        proposalId?: bigint;
                        depositor?: string;
                        amount?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    };
                }): _56.QueryDepositResponse;
                fromAmino(object: _56.QueryDepositResponseAmino): _56.QueryDepositResponse;
                toAmino(message: _56.QueryDepositResponse): _56.QueryDepositResponseAmino;
                fromAminoMsg(object: _56.QueryDepositResponseAminoMsg): _56.QueryDepositResponse;
                toAminoMsg(message: _56.QueryDepositResponse): _56.QueryDepositResponseAminoMsg;
                fromProtoMsg(message: _56.QueryDepositResponseProtoMsg): _56.QueryDepositResponse;
                toProto(message: _56.QueryDepositResponse): Uint8Array;
                toProtoMsg(message: _56.QueryDepositResponse): _56.QueryDepositResponseProtoMsg;
            };
            QueryDepositsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _56.QueryDepositsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _56.QueryDepositsRequest;
                fromPartial(object: {
                    proposalId?: bigint;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _56.QueryDepositsRequest;
                fromAmino(object: _56.QueryDepositsRequestAmino): _56.QueryDepositsRequest;
                toAmino(message: _56.QueryDepositsRequest): _56.QueryDepositsRequestAmino;
                fromAminoMsg(object: _56.QueryDepositsRequestAminoMsg): _56.QueryDepositsRequest;
                toAminoMsg(message: _56.QueryDepositsRequest): _56.QueryDepositsRequestAminoMsg;
                fromProtoMsg(message: _56.QueryDepositsRequestProtoMsg): _56.QueryDepositsRequest;
                toProto(message: _56.QueryDepositsRequest): Uint8Array;
                toProtoMsg(message: _56.QueryDepositsRequest): _56.QueryDepositsRequestProtoMsg;
            };
            QueryDepositsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _56.QueryDepositsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _56.QueryDepositsResponse;
                fromPartial(object: {
                    deposits?: {
                        proposalId?: bigint;
                        depositor?: string;
                        amount?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _56.QueryDepositsResponse;
                fromAmino(object: _56.QueryDepositsResponseAmino): _56.QueryDepositsResponse;
                toAmino(message: _56.QueryDepositsResponse): _56.QueryDepositsResponseAmino;
                fromAminoMsg(object: _56.QueryDepositsResponseAminoMsg): _56.QueryDepositsResponse;
                toAminoMsg(message: _56.QueryDepositsResponse): _56.QueryDepositsResponseAminoMsg;
                fromProtoMsg(message: _56.QueryDepositsResponseProtoMsg): _56.QueryDepositsResponse;
                toProto(message: _56.QueryDepositsResponse): Uint8Array;
                toProtoMsg(message: _56.QueryDepositsResponse): _56.QueryDepositsResponseProtoMsg;
            };
            QueryTallyResultRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _56.QueryTallyResultRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _56.QueryTallyResultRequest;
                fromPartial(object: {
                    proposalId?: bigint;
                }): _56.QueryTallyResultRequest;
                fromAmino(object: _56.QueryTallyResultRequestAmino): _56.QueryTallyResultRequest;
                toAmino(message: _56.QueryTallyResultRequest): _56.QueryTallyResultRequestAmino;
                fromAminoMsg(object: _56.QueryTallyResultRequestAminoMsg): _56.QueryTallyResultRequest;
                toAminoMsg(message: _56.QueryTallyResultRequest): _56.QueryTallyResultRequestAminoMsg;
                fromProtoMsg(message: _56.QueryTallyResultRequestProtoMsg): _56.QueryTallyResultRequest;
                toProto(message: _56.QueryTallyResultRequest): Uint8Array;
                toProtoMsg(message: _56.QueryTallyResultRequest): _56.QueryTallyResultRequestProtoMsg;
            };
            QueryTallyResultResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _56.QueryTallyResultResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _56.QueryTallyResultResponse;
                fromPartial(object: {
                    tally?: {
                        yesCount?: string;
                        abstainCount?: string;
                        noCount?: string;
                        noWithVetoCount?: string;
                    };
                }): _56.QueryTallyResultResponse;
                fromAmino(object: _56.QueryTallyResultResponseAmino): _56.QueryTallyResultResponse;
                toAmino(message: _56.QueryTallyResultResponse): _56.QueryTallyResultResponseAmino;
                fromAminoMsg(object: _56.QueryTallyResultResponseAminoMsg): _56.QueryTallyResultResponse;
                toAminoMsg(message: _56.QueryTallyResultResponse): _56.QueryTallyResultResponseAminoMsg;
                fromProtoMsg(message: _56.QueryTallyResultResponseProtoMsg): _56.QueryTallyResultResponse;
                toProto(message: _56.QueryTallyResultResponse): Uint8Array;
                toProtoMsg(message: _56.QueryTallyResultResponse): _56.QueryTallyResultResponseProtoMsg;
            };
            voteOptionFromJSON(object: any): _55.VoteOption;
            voteOptionToJSON(object: _55.VoteOption): string;
            proposalStatusFromJSON(object: any): _55.ProposalStatus;
            proposalStatusToJSON(object: _55.ProposalStatus): string;
            VoteOption: typeof _55.VoteOption;
            VoteOptionSDKType: typeof _55.VoteOption;
            VoteOptionAmino: typeof _55.VoteOption;
            ProposalStatus: typeof _55.ProposalStatus;
            ProposalStatusSDKType: typeof _55.ProposalStatus;
            ProposalStatusAmino: typeof _55.ProposalStatus;
            WeightedVoteOption: {
                typeUrl: string;
                aminoType: string;
                encode(message: _55.WeightedVoteOption, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _55.WeightedVoteOption;
                fromPartial(object: {
                    option?: _55.VoteOption;
                    weight?: string;
                }): _55.WeightedVoteOption;
                fromAmino(object: _55.WeightedVoteOptionAmino): _55.WeightedVoteOption;
                toAmino(message: _55.WeightedVoteOption): _55.WeightedVoteOptionAmino;
                fromAminoMsg(object: _55.WeightedVoteOptionAminoMsg): _55.WeightedVoteOption;
                toAminoMsg(message: _55.WeightedVoteOption): _55.WeightedVoteOptionAminoMsg;
                fromProtoMsg(message: _55.WeightedVoteOptionProtoMsg): _55.WeightedVoteOption;
                toProto(message: _55.WeightedVoteOption): Uint8Array;
                toProtoMsg(message: _55.WeightedVoteOption): _55.WeightedVoteOptionProtoMsg;
            };
            Deposit: {
                typeUrl: string;
                aminoType: string;
                encode(message: _55.Deposit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _55.Deposit;
                fromPartial(object: {
                    proposalId?: bigint;
                    depositor?: string;
                    amount?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _55.Deposit;
                fromAmino(object: _55.DepositAmino): _55.Deposit;
                toAmino(message: _55.Deposit): _55.DepositAmino;
                fromAminoMsg(object: _55.DepositAminoMsg): _55.Deposit;
                toAminoMsg(message: _55.Deposit): _55.DepositAminoMsg;
                fromProtoMsg(message: _55.DepositProtoMsg): _55.Deposit;
                toProto(message: _55.Deposit): Uint8Array;
                toProtoMsg(message: _55.Deposit): _55.DepositProtoMsg;
            };
            Proposal: {
                typeUrl: string;
                aminoType: string;
                encode(message: _55.Proposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _55.Proposal;
                fromPartial(object: {
                    id?: bigint;
                    messages?: {
                        $typeUrl?: string;
                        typeUrl?: string;
                        value?: Uint8Array;
                    }[];
                    status?: _55.ProposalStatus;
                    finalTallyResult?: {
                        yesCount?: string;
                        abstainCount?: string;
                        noCount?: string;
                        noWithVetoCount?: string;
                    };
                    submitTime?: Date;
                    depositEndTime?: Date;
                    totalDeposit?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    votingStartTime?: Date;
                    votingEndTime?: Date;
                    metadata?: string;
                    title?: string;
                    summary?: string;
                    proposer?: string;
                    expedited?: boolean;
                    failedReason?: string;
                }): _55.Proposal;
                fromAmino(object: _55.ProposalAmino): _55.Proposal;
                toAmino(message: _55.Proposal): _55.ProposalAmino;
                fromAminoMsg(object: _55.ProposalAminoMsg): _55.Proposal;
                toAminoMsg(message: _55.Proposal): _55.ProposalAminoMsg;
                fromProtoMsg(message: _55.ProposalProtoMsg): _55.Proposal;
                toProto(message: _55.Proposal): Uint8Array;
                toProtoMsg(message: _55.Proposal): _55.ProposalProtoMsg;
            };
            TallyResult: {
                typeUrl: string;
                aminoType: string;
                encode(message: _55.TallyResult, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _55.TallyResult;
                fromPartial(object: {
                    yesCount?: string;
                    abstainCount?: string;
                    noCount?: string;
                    noWithVetoCount?: string;
                }): _55.TallyResult;
                fromAmino(object: _55.TallyResultAmino): _55.TallyResult;
                toAmino(message: _55.TallyResult): _55.TallyResultAmino;
                fromAminoMsg(object: _55.TallyResultAminoMsg): _55.TallyResult;
                toAminoMsg(message: _55.TallyResult): _55.TallyResultAminoMsg;
                fromProtoMsg(message: _55.TallyResultProtoMsg): _55.TallyResult;
                toProto(message: _55.TallyResult): Uint8Array;
                toProtoMsg(message: _55.TallyResult): _55.TallyResultProtoMsg;
            };
            Vote: {
                typeUrl: string;
                aminoType: string;
                encode(message: _55.Vote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _55.Vote;
                fromPartial(object: {
                    proposalId?: bigint;
                    voter?: string;
                    options?: {
                        option?: _55.VoteOption;
                        weight?: string;
                    }[];
                    metadata?: string;
                }): _55.Vote;
                fromAmino(object: _55.VoteAmino): _55.Vote;
                toAmino(message: _55.Vote): _55.VoteAmino;
                fromAminoMsg(object: _55.VoteAminoMsg): _55.Vote;
                toAminoMsg(message: _55.Vote): _55.VoteAminoMsg;
                fromProtoMsg(message: _55.VoteProtoMsg): _55.Vote;
                toProto(message: _55.Vote): Uint8Array;
                toProtoMsg(message: _55.Vote): _55.VoteProtoMsg;
            };
            DepositParams: {
                typeUrl: string;
                aminoType: string;
                encode(message: _55.DepositParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _55.DepositParams;
                fromPartial(object: {
                    minDeposit?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    maxDepositPeriod?: {
                        seconds?: bigint;
                        nanos?: number;
                    };
                }): _55.DepositParams;
                fromAmino(object: _55.DepositParamsAmino): _55.DepositParams;
                toAmino(message: _55.DepositParams): _55.DepositParamsAmino;
                fromAminoMsg(object: _55.DepositParamsAminoMsg): _55.DepositParams;
                toAminoMsg(message: _55.DepositParams): _55.DepositParamsAminoMsg;
                fromProtoMsg(message: _55.DepositParamsProtoMsg): _55.DepositParams;
                toProto(message: _55.DepositParams): Uint8Array;
                toProtoMsg(message: _55.DepositParams): _55.DepositParamsProtoMsg;
            };
            VotingParams: {
                typeUrl: string;
                aminoType: string;
                encode(message: _55.VotingParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _55.VotingParams;
                fromPartial(object: {
                    votingPeriod?: {
                        seconds?: bigint;
                        nanos?: number;
                    };
                }): _55.VotingParams;
                fromAmino(object: _55.VotingParamsAmino): _55.VotingParams;
                toAmino(message: _55.VotingParams): _55.VotingParamsAmino;
                fromAminoMsg(object: _55.VotingParamsAminoMsg): _55.VotingParams;
                toAminoMsg(message: _55.VotingParams): _55.VotingParamsAminoMsg;
                fromProtoMsg(message: _55.VotingParamsProtoMsg): _55.VotingParams;
                toProto(message: _55.VotingParams): Uint8Array;
                toProtoMsg(message: _55.VotingParams): _55.VotingParamsProtoMsg;
            };
            TallyParams: {
                typeUrl: string;
                aminoType: string;
                encode(message: _55.TallyParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _55.TallyParams;
                fromPartial(object: {
                    quorum?: string;
                    threshold?: string;
                    vetoThreshold?: string;
                }): _55.TallyParams;
                fromAmino(object: _55.TallyParamsAmino): _55.TallyParams;
                toAmino(message: _55.TallyParams): _55.TallyParamsAmino;
                fromAminoMsg(object: _55.TallyParamsAminoMsg): _55.TallyParams;
                toAminoMsg(message: _55.TallyParams): _55.TallyParamsAminoMsg;
                fromProtoMsg(message: _55.TallyParamsProtoMsg): _55.TallyParams;
                toProto(message: _55.TallyParams): Uint8Array;
                toProtoMsg(message: _55.TallyParams): _55.TallyParamsProtoMsg;
            };
            Params: {
                typeUrl: string;
                aminoType: string;
                encode(message: _55.Params, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _55.Params;
                fromPartial(object: {
                    minDeposit?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    maxDepositPeriod?: {
                        seconds?: bigint;
                        nanos?: number;
                    };
                    votingPeriod?: {
                        seconds?: bigint;
                        nanos?: number;
                    };
                    quorum?: string;
                    threshold?: string;
                    vetoThreshold?: string;
                    minInitialDepositRatio?: string;
                    proposalCancelRatio?: string;
                    proposalCancelDest?: string;
                    expeditedVotingPeriod?: {
                        seconds?: bigint;
                        nanos?: number;
                    };
                    expeditedThreshold?: string;
                    expeditedMinDeposit?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    burnVoteQuorum?: boolean;
                    burnProposalDepositPrevote?: boolean;
                    burnVoteVeto?: boolean;
                }): _55.Params;
                fromAmino(object: _55.ParamsAmino): _55.Params;
                toAmino(message: _55.Params): _55.ParamsAmino;
                fromAminoMsg(object: _55.ParamsAminoMsg): _55.Params;
                toAminoMsg(message: _55.Params): _55.ParamsAminoMsg;
                fromProtoMsg(message: _55.ParamsProtoMsg): _55.Params;
                toProto(message: _55.Params): Uint8Array;
                toProtoMsg(message: _55.Params): _55.ParamsProtoMsg;
            };
            GenesisState: {
                typeUrl: string;
                aminoType: string;
                encode(message: _54.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _54.GenesisState;
                fromPartial(object: {
                    startingProposalId?: bigint;
                    deposits?: {
                        proposalId?: bigint;
                        depositor?: string;
                        amount?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    }[];
                    votes?: {
                        proposalId?: bigint;
                        voter?: string;
                        options?: {
                            option?: _55.VoteOption;
                            weight?: string;
                        }[];
                        metadata?: string;
                    }[];
                    proposals?: {
                        id?: bigint;
                        messages?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        }[];
                        status?: _55.ProposalStatus;
                        finalTallyResult?: {
                            yesCount?: string;
                            abstainCount?: string;
                            noCount?: string;
                            noWithVetoCount?: string;
                        };
                        submitTime?: Date;
                        depositEndTime?: Date;
                        totalDeposit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        votingStartTime?: Date;
                        votingEndTime?: Date;
                        metadata?: string;
                        title?: string;
                        summary?: string;
                        proposer?: string;
                        expedited?: boolean;
                        failedReason?: string;
                    }[];
                    depositParams?: {
                        minDeposit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        maxDepositPeriod?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                    };
                    votingParams?: {
                        votingPeriod?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                    };
                    tallyParams?: {
                        quorum?: string;
                        threshold?: string;
                        vetoThreshold?: string;
                    };
                    params?: {
                        minDeposit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        maxDepositPeriod?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                        votingPeriod?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                        quorum?: string;
                        threshold?: string;
                        vetoThreshold?: string;
                        minInitialDepositRatio?: string;
                        proposalCancelRatio?: string;
                        proposalCancelDest?: string;
                        expeditedVotingPeriod?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                        expeditedThreshold?: string;
                        expeditedMinDeposit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        burnVoteQuorum?: boolean;
                        burnProposalDepositPrevote?: boolean;
                        burnVoteVeto?: boolean;
                    };
                    constitution?: string;
                }): _54.GenesisState;
                fromAmino(object: _54.GenesisStateAmino): _54.GenesisState;
                toAmino(message: _54.GenesisState): _54.GenesisStateAmino;
                fromAminoMsg(object: _54.GenesisStateAminoMsg): _54.GenesisState;
                toAminoMsg(message: _54.GenesisState): _54.GenesisStateAminoMsg;
                fromProtoMsg(message: _54.GenesisStateProtoMsg): _54.GenesisState;
                toProto(message: _54.GenesisState): Uint8Array;
                toProtoMsg(message: _54.GenesisState): _54.GenesisStateProtoMsg;
            };
        };
        const v1beta1: {
            MsgClientImpl: typeof _237.MsgClientImpl;
            QueryClientImpl: typeof _220.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                proposal(request: _60.QueryProposalRequest): Promise<_60.QueryProposalResponse>;
                proposals(request: _60.QueryProposalsRequest): Promise<_60.QueryProposalsResponse>;
                vote(request: _60.QueryVoteRequest): Promise<_60.QueryVoteResponse>;
                votes(request: _60.QueryVotesRequest): Promise<_60.QueryVotesResponse>;
                params(request: _60.QueryParamsRequest): Promise<_60.QueryParamsResponse>;
                deposit(request: _60.QueryDepositRequest): Promise<_60.QueryDepositResponse>;
                deposits(request: _60.QueryDepositsRequest): Promise<_60.QueryDepositsResponse>;
                tallyResult(request: _60.QueryTallyResultRequest): Promise<_60.QueryTallyResultResponse>;
            };
            LCDQueryClient: typeof _203.LCDQueryClient;
            registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
            load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
            MessageComposer: {
                encoded: {
                    submitProposal(value: _61.MsgSubmitProposal): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    vote(value: _61.MsgVote): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    voteWeighted(value: _61.MsgVoteWeighted): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    deposit(value: _61.MsgDeposit): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                };
                withTypeUrl: {
                    submitProposal(value: _61.MsgSubmitProposal): {
                        typeUrl: string;
                        value: _61.MsgSubmitProposal;
                    };
                    vote(value: _61.MsgVote): {
                        typeUrl: string;
                        value: _61.MsgVote;
                    };
                    voteWeighted(value: _61.MsgVoteWeighted): {
                        typeUrl: string;
                        value: _61.MsgVoteWeighted;
                    };
                    deposit(value: _61.MsgDeposit): {
                        typeUrl: string;
                        value: _61.MsgDeposit;
                    };
                };
                fromPartial: {
                    submitProposal(value: _61.MsgSubmitProposal): {
                        typeUrl: string;
                        value: _61.MsgSubmitProposal;
                    };
                    vote(value: _61.MsgVote): {
                        typeUrl: string;
                        value: _61.MsgVote;
                    };
                    voteWeighted(value: _61.MsgVoteWeighted): {
                        typeUrl: string;
                        value: _61.MsgVoteWeighted;
                    };
                    deposit(value: _61.MsgDeposit): {
                        typeUrl: string;
                        value: _61.MsgDeposit;
                    };
                };
            };
            AminoConverter: {
                "/cosmos.gov.v1beta1.MsgSubmitProposal": {
                    aminoType: string;
                    toAmino: (message: _61.MsgSubmitProposal) => _61.MsgSubmitProposalAmino;
                    fromAmino: (object: _61.MsgSubmitProposalAmino) => _61.MsgSubmitProposal;
                };
                "/cosmos.gov.v1beta1.MsgVote": {
                    aminoType: string;
                    toAmino: (message: _61.MsgVote) => _61.MsgVoteAmino;
                    fromAmino: (object: _61.MsgVoteAmino) => _61.MsgVote;
                };
                "/cosmos.gov.v1beta1.MsgVoteWeighted": {
                    aminoType: string;
                    toAmino: (message: _61.MsgVoteWeighted) => _61.MsgVoteWeightedAmino;
                    fromAmino: (object: _61.MsgVoteWeightedAmino) => _61.MsgVoteWeighted;
                };
                "/cosmos.gov.v1beta1.MsgDeposit": {
                    aminoType: string;
                    toAmino: (message: _61.MsgDeposit) => _61.MsgDepositAmino;
                    fromAmino: (object: _61.MsgDepositAmino) => _61.MsgDeposit;
                };
            };
            MsgSubmitProposal: {
                typeUrl: string;
                aminoType: string;
                encode(message: _61.MsgSubmitProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _61.MsgSubmitProposal;
                fromPartial(object: {
                    content?: {
                        $typeUrl?: string;
                        typeUrl?: string;
                        value?: Uint8Array;
                    } | {
                        $typeUrl?: "/cosmos.distribution.v1beta1.CommunityPoolSpendProposal";
                        title?: string;
                        description?: string;
                        recipient?: string;
                        amount?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    } | {
                        $typeUrl?: "/cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit";
                        title?: string;
                        description?: string;
                        recipient?: string;
                        amount?: string;
                        deposit?: string;
                    } | {
                        $typeUrl?: "/cosmos.params.v1beta1.ParameterChangeProposal";
                        title?: string;
                        description?: string;
                        changes?: {
                            subspace?: string;
                            key?: string;
                            value?: string;
                        }[];
                    } | {
                        $typeUrl?: "/cosmos.upgrade.v1beta1.SoftwareUpgradeProposal";
                        title?: string;
                        description?: string;
                        plan?: {
                            name?: string;
                            time?: Date;
                            height?: bigint;
                            info?: string;
                            upgradedClientState?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            };
                        };
                    } | {
                        $typeUrl?: "/cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal";
                        title?: string;
                        description?: string;
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.StoreCodeProposal";
                        title?: string;
                        description?: string;
                        runAs?: string;
                        wasmByteCode?: Uint8Array;
                        instantiatePermission?: {
                            permission?: import("../cosmwasm/wasm/v1/types").AccessType;
                            addresses?: string[];
                        };
                        unpinCode?: boolean;
                        source?: string;
                        builder?: string;
                        codeHash?: Uint8Array;
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.InstantiateContractProposal";
                        title?: string;
                        description?: string;
                        runAs?: string;
                        admin?: string;
                        codeId?: bigint;
                        label?: string;
                        msg?: Uint8Array;
                        funds?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.InstantiateContract2Proposal";
                        title?: string;
                        description?: string;
                        runAs?: string;
                        admin?: string;
                        codeId?: bigint;
                        label?: string;
                        msg?: Uint8Array;
                        funds?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        salt?: Uint8Array;
                        fixMsg?: boolean;
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.MigrateContractProposal";
                        title?: string;
                        description?: string;
                        contract?: string;
                        codeId?: bigint;
                        msg?: Uint8Array;
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.SudoContractProposal";
                        title?: string;
                        description?: string;
                        contract?: string;
                        msg?: Uint8Array;
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.ExecuteContractProposal";
                        title?: string;
                        description?: string;
                        runAs?: string;
                        contract?: string;
                        msg?: Uint8Array;
                        funds?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.UpdateAdminProposal";
                        title?: string;
                        description?: string;
                        newAdmin?: string;
                        contract?: string;
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.ClearAdminProposal";
                        title?: string;
                        description?: string;
                        contract?: string;
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.PinCodesProposal";
                        title?: string;
                        description?: string;
                        codeIds?: bigint[];
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.UnpinCodesProposal";
                        title?: string;
                        description?: string;
                        codeIds?: bigint[];
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.UpdateInstantiateConfigProposal";
                        title?: string;
                        description?: string;
                        accessConfigUpdates?: {
                            codeId?: bigint;
                            instantiatePermission?: {
                                permission?: import("../cosmwasm/wasm/v1/types").AccessType;
                                addresses?: string[];
                            };
                        }[];
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.StoreAndInstantiateContractProposal";
                        title?: string;
                        description?: string;
                        runAs?: string;
                        wasmByteCode?: Uint8Array;
                        instantiatePermission?: {
                            permission?: import("../cosmwasm/wasm/v1/types").AccessType;
                            addresses?: string[];
                        };
                        unpinCode?: boolean;
                        admin?: string;
                        label?: string;
                        msg?: Uint8Array;
                        funds?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        source?: string;
                        builder?: string;
                        codeHash?: Uint8Array;
                    } | {
                        $typeUrl?: "/cosmos.gov.v1beta1.TextProposal";
                        title?: string;
                        description?: string;
                    };
                    initialDeposit?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    proposer?: string;
                }): _61.MsgSubmitProposal;
                fromAmino(object: _61.MsgSubmitProposalAmino): _61.MsgSubmitProposal;
                toAmino(message: _61.MsgSubmitProposal): _61.MsgSubmitProposalAmino;
                fromAminoMsg(object: _61.MsgSubmitProposalAminoMsg): _61.MsgSubmitProposal;
                toAminoMsg(message: _61.MsgSubmitProposal): _61.MsgSubmitProposalAminoMsg;
                fromProtoMsg(message: _61.MsgSubmitProposalProtoMsg): _61.MsgSubmitProposal;
                toProto(message: _61.MsgSubmitProposal): Uint8Array;
                toProtoMsg(message: _61.MsgSubmitProposal): _61.MsgSubmitProposalProtoMsg;
            };
            MsgSubmitProposalResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _61.MsgSubmitProposalResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _61.MsgSubmitProposalResponse;
                fromPartial(object: {
                    proposalId?: bigint;
                }): _61.MsgSubmitProposalResponse;
                fromAmino(object: _61.MsgSubmitProposalResponseAmino): _61.MsgSubmitProposalResponse;
                toAmino(message: _61.MsgSubmitProposalResponse): _61.MsgSubmitProposalResponseAmino;
                fromAminoMsg(object: _61.MsgSubmitProposalResponseAminoMsg): _61.MsgSubmitProposalResponse;
                toAminoMsg(message: _61.MsgSubmitProposalResponse): _61.MsgSubmitProposalResponseAminoMsg;
                fromProtoMsg(message: _61.MsgSubmitProposalResponseProtoMsg): _61.MsgSubmitProposalResponse;
                toProto(message: _61.MsgSubmitProposalResponse): Uint8Array;
                toProtoMsg(message: _61.MsgSubmitProposalResponse): _61.MsgSubmitProposalResponseProtoMsg;
            };
            MsgVote: {
                typeUrl: string;
                aminoType: string;
                encode(message: _61.MsgVote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _61.MsgVote;
                fromPartial(object: {
                    proposalId?: bigint;
                    voter?: string;
                    option?: _59.VoteOption;
                }): _61.MsgVote;
                fromAmino(object: _61.MsgVoteAmino): _61.MsgVote;
                toAmino(message: _61.MsgVote): _61.MsgVoteAmino;
                fromAminoMsg(object: _61.MsgVoteAminoMsg): _61.MsgVote;
                toAminoMsg(message: _61.MsgVote): _61.MsgVoteAminoMsg;
                fromProtoMsg(message: _61.MsgVoteProtoMsg): _61.MsgVote;
                toProto(message: _61.MsgVote): Uint8Array;
                toProtoMsg(message: _61.MsgVote): _61.MsgVoteProtoMsg;
            };
            MsgVoteResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _61.MsgVoteResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _61.MsgVoteResponse;
                fromPartial(_: {}): _61.MsgVoteResponse;
                fromAmino(_: _61.MsgVoteResponseAmino): _61.MsgVoteResponse;
                toAmino(_: _61.MsgVoteResponse): _61.MsgVoteResponseAmino;
                fromAminoMsg(object: _61.MsgVoteResponseAminoMsg): _61.MsgVoteResponse;
                toAminoMsg(message: _61.MsgVoteResponse): _61.MsgVoteResponseAminoMsg;
                fromProtoMsg(message: _61.MsgVoteResponseProtoMsg): _61.MsgVoteResponse;
                toProto(message: _61.MsgVoteResponse): Uint8Array;
                toProtoMsg(message: _61.MsgVoteResponse): _61.MsgVoteResponseProtoMsg;
            };
            MsgVoteWeighted: {
                typeUrl: string;
                aminoType: string;
                encode(message: _61.MsgVoteWeighted, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _61.MsgVoteWeighted;
                fromPartial(object: {
                    proposalId?: bigint;
                    voter?: string;
                    options?: {
                        option?: _59.VoteOption;
                        weight?: string;
                    }[];
                }): _61.MsgVoteWeighted;
                fromAmino(object: _61.MsgVoteWeightedAmino): _61.MsgVoteWeighted;
                toAmino(message: _61.MsgVoteWeighted): _61.MsgVoteWeightedAmino;
                fromAminoMsg(object: _61.MsgVoteWeightedAminoMsg): _61.MsgVoteWeighted;
                toAminoMsg(message: _61.MsgVoteWeighted): _61.MsgVoteWeightedAminoMsg;
                fromProtoMsg(message: _61.MsgVoteWeightedProtoMsg): _61.MsgVoteWeighted;
                toProto(message: _61.MsgVoteWeighted): Uint8Array;
                toProtoMsg(message: _61.MsgVoteWeighted): _61.MsgVoteWeightedProtoMsg;
            };
            MsgVoteWeightedResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _61.MsgVoteWeightedResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _61.MsgVoteWeightedResponse;
                fromPartial(_: {}): _61.MsgVoteWeightedResponse;
                fromAmino(_: _61.MsgVoteWeightedResponseAmino): _61.MsgVoteWeightedResponse;
                toAmino(_: _61.MsgVoteWeightedResponse): _61.MsgVoteWeightedResponseAmino;
                fromAminoMsg(object: _61.MsgVoteWeightedResponseAminoMsg): _61.MsgVoteWeightedResponse;
                toAminoMsg(message: _61.MsgVoteWeightedResponse): _61.MsgVoteWeightedResponseAminoMsg;
                fromProtoMsg(message: _61.MsgVoteWeightedResponseProtoMsg): _61.MsgVoteWeightedResponse;
                toProto(message: _61.MsgVoteWeightedResponse): Uint8Array;
                toProtoMsg(message: _61.MsgVoteWeightedResponse): _61.MsgVoteWeightedResponseProtoMsg;
            };
            MsgDeposit: {
                typeUrl: string;
                aminoType: string;
                encode(message: _61.MsgDeposit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _61.MsgDeposit;
                fromPartial(object: {
                    proposalId?: bigint;
                    depositor?: string;
                    amount?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _61.MsgDeposit;
                fromAmino(object: _61.MsgDepositAmino): _61.MsgDeposit;
                toAmino(message: _61.MsgDeposit): _61.MsgDepositAmino;
                fromAminoMsg(object: _61.MsgDepositAminoMsg): _61.MsgDeposit;
                toAminoMsg(message: _61.MsgDeposit): _61.MsgDepositAminoMsg;
                fromProtoMsg(message: _61.MsgDepositProtoMsg): _61.MsgDeposit;
                toProto(message: _61.MsgDeposit): Uint8Array;
                toProtoMsg(message: _61.MsgDeposit): _61.MsgDepositProtoMsg;
            };
            MsgDepositResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _61.MsgDepositResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _61.MsgDepositResponse;
                fromPartial(_: {}): _61.MsgDepositResponse;
                fromAmino(_: _61.MsgDepositResponseAmino): _61.MsgDepositResponse;
                toAmino(_: _61.MsgDepositResponse): _61.MsgDepositResponseAmino;
                fromAminoMsg(object: _61.MsgDepositResponseAminoMsg): _61.MsgDepositResponse;
                toAminoMsg(message: _61.MsgDepositResponse): _61.MsgDepositResponseAminoMsg;
                fromProtoMsg(message: _61.MsgDepositResponseProtoMsg): _61.MsgDepositResponse;
                toProto(message: _61.MsgDepositResponse): Uint8Array;
                toProtoMsg(message: _61.MsgDepositResponse): _61.MsgDepositResponseProtoMsg;
            };
            Cosmos_govv1beta1Content_InterfaceDecoder: (input: Uint8Array | import("..").BinaryReader) => import("../google/protobuf/any").Any | _42.CommunityPoolSpendProposal | _42.CommunityPoolSpendProposalWithDeposit | _78.ParameterChangeProposal | _101.SoftwareUpgradeProposal | _101.CancelSoftwareUpgradeProposal | import("../cosmwasm/wasm/v1/proposal").StoreCodeProposal | import("../cosmwasm/wasm/v1/proposal").InstantiateContractProposal | import("../cosmwasm/wasm/v1/proposal").InstantiateContract2Proposal | import("../cosmwasm/wasm/v1/proposal").MigrateContractProposal | import("../cosmwasm/wasm/v1/proposal").SudoContractProposal | import("../cosmwasm/wasm/v1/proposal").ExecuteContractProposal | import("../cosmwasm/wasm/v1/proposal").UpdateAdminProposal | import("../cosmwasm/wasm/v1/proposal").ClearAdminProposal | import("../cosmwasm/wasm/v1/proposal").PinCodesProposal | import("../cosmwasm/wasm/v1/proposal").UnpinCodesProposal | import("../cosmwasm/wasm/v1/proposal").UpdateInstantiateConfigProposal | import("../cosmwasm/wasm/v1/proposal").StoreAndInstantiateContractProposal | _59.TextProposal;
            Cosmos_govv1beta1Content_FromAmino: (content: import("../google/protobuf/any").AnyAmino) => import("../google/protobuf/any").Any;
            Cosmos_govv1beta1Content_ToAmino: (content: import("../google/protobuf/any").Any) => import("../google/protobuf/any").AnyAmino;
            QueryProposalRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _60.QueryProposalRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _60.QueryProposalRequest;
                fromPartial(object: {
                    proposalId?: bigint;
                }): _60.QueryProposalRequest;
                fromAmino(object: _60.QueryProposalRequestAmino): _60.QueryProposalRequest;
                toAmino(message: _60.QueryProposalRequest): _60.QueryProposalRequestAmino;
                fromAminoMsg(object: _60.QueryProposalRequestAminoMsg): _60.QueryProposalRequest;
                toAminoMsg(message: _60.QueryProposalRequest): _60.QueryProposalRequestAminoMsg;
                fromProtoMsg(message: _60.QueryProposalRequestProtoMsg): _60.QueryProposalRequest;
                toProto(message: _60.QueryProposalRequest): Uint8Array;
                toProtoMsg(message: _60.QueryProposalRequest): _60.QueryProposalRequestProtoMsg;
            };
            QueryProposalResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _60.QueryProposalResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _60.QueryProposalResponse;
                fromPartial(object: {
                    proposal?: {
                        proposalId?: bigint;
                        content?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        } | {
                            $typeUrl?: "/cosmos.distribution.v1beta1.CommunityPoolSpendProposal";
                            title?: string;
                            description?: string;
                            recipient?: string;
                            amount?: {
                                denom?: string;
                                amount?: string;
                            }[];
                        } | {
                            $typeUrl?: "/cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit";
                            title?: string;
                            description?: string;
                            recipient?: string;
                            amount?: string;
                            deposit?: string;
                        } | {
                            $typeUrl?: "/cosmos.params.v1beta1.ParameterChangeProposal";
                            title?: string;
                            description?: string;
                            changes?: {
                                subspace?: string;
                                key?: string;
                                value?: string;
                            }[];
                        } | {
                            $typeUrl?: "/cosmos.upgrade.v1beta1.SoftwareUpgradeProposal";
                            title?: string;
                            description?: string;
                            plan?: {
                                name?: string;
                                time?: Date;
                                height?: bigint;
                                info?: string;
                                upgradedClientState?: {
                                    $typeUrl?: string;
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                };
                            };
                        } | {
                            $typeUrl?: "/cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal";
                            title?: string;
                            description?: string;
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.StoreCodeProposal";
                            title?: string;
                            description?: string;
                            runAs?: string;
                            wasmByteCode?: Uint8Array;
                            instantiatePermission?: {
                                permission?: import("../cosmwasm/wasm/v1/types").AccessType;
                                addresses?: string[];
                            };
                            unpinCode?: boolean;
                            source?: string;
                            builder?: string;
                            codeHash?: Uint8Array;
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.InstantiateContractProposal";
                            title?: string;
                            description?: string;
                            runAs?: string;
                            admin?: string;
                            codeId?: bigint;
                            label?: string;
                            msg?: Uint8Array;
                            funds?: {
                                denom?: string;
                                amount?: string;
                            }[];
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.InstantiateContract2Proposal";
                            title?: string;
                            description?: string;
                            runAs?: string;
                            admin?: string;
                            codeId?: bigint;
                            label?: string;
                            msg?: Uint8Array;
                            funds?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            salt?: Uint8Array;
                            fixMsg?: boolean;
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.MigrateContractProposal";
                            title?: string;
                            description?: string;
                            contract?: string;
                            codeId?: bigint;
                            msg?: Uint8Array;
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.SudoContractProposal";
                            title?: string;
                            description?: string;
                            contract?: string;
                            msg?: Uint8Array;
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.ExecuteContractProposal";
                            title?: string;
                            description?: string;
                            runAs?: string;
                            contract?: string;
                            msg?: Uint8Array;
                            funds?: {
                                denom?: string;
                                amount?: string;
                            }[];
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.UpdateAdminProposal";
                            title?: string;
                            description?: string;
                            newAdmin?: string;
                            contract?: string;
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.ClearAdminProposal";
                            title?: string;
                            description?: string;
                            contract?: string;
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.PinCodesProposal";
                            title?: string;
                            description?: string;
                            codeIds?: bigint[];
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.UnpinCodesProposal";
                            title?: string;
                            description?: string;
                            codeIds?: bigint[];
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.UpdateInstantiateConfigProposal";
                            title?: string;
                            description?: string;
                            accessConfigUpdates?: {
                                codeId?: bigint;
                                instantiatePermission?: {
                                    permission?: import("../cosmwasm/wasm/v1/types").AccessType;
                                    addresses?: string[];
                                };
                            }[];
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.StoreAndInstantiateContractProposal";
                            title?: string;
                            description?: string;
                            runAs?: string;
                            wasmByteCode?: Uint8Array;
                            instantiatePermission?: {
                                permission?: import("../cosmwasm/wasm/v1/types").AccessType;
                                addresses?: string[];
                            };
                            unpinCode?: boolean;
                            admin?: string;
                            label?: string;
                            msg?: Uint8Array;
                            funds?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            source?: string;
                            builder?: string;
                            codeHash?: Uint8Array;
                        } | {
                            $typeUrl?: "/cosmos.gov.v1beta1.TextProposal";
                            title?: string;
                            description?: string;
                        };
                        status?: _59.ProposalStatus;
                        finalTallyResult?: {
                            yes?: string;
                            abstain?: string;
                            no?: string;
                            noWithVeto?: string;
                        };
                        submitTime?: Date;
                        depositEndTime?: Date;
                        totalDeposit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        votingStartTime?: Date;
                        votingEndTime?: Date;
                    };
                }): _60.QueryProposalResponse;
                fromAmino(object: _60.QueryProposalResponseAmino): _60.QueryProposalResponse;
                toAmino(message: _60.QueryProposalResponse): _60.QueryProposalResponseAmino;
                fromAminoMsg(object: _60.QueryProposalResponseAminoMsg): _60.QueryProposalResponse;
                toAminoMsg(message: _60.QueryProposalResponse): _60.QueryProposalResponseAminoMsg;
                fromProtoMsg(message: _60.QueryProposalResponseProtoMsg): _60.QueryProposalResponse;
                toProto(message: _60.QueryProposalResponse): Uint8Array;
                toProtoMsg(message: _60.QueryProposalResponse): _60.QueryProposalResponseProtoMsg;
            };
            QueryProposalsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _60.QueryProposalsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _60.QueryProposalsRequest;
                fromPartial(object: {
                    proposalStatus?: _59.ProposalStatus;
                    voter?: string;
                    depositor?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _60.QueryProposalsRequest;
                fromAmino(object: _60.QueryProposalsRequestAmino): _60.QueryProposalsRequest;
                toAmino(message: _60.QueryProposalsRequest): _60.QueryProposalsRequestAmino;
                fromAminoMsg(object: _60.QueryProposalsRequestAminoMsg): _60.QueryProposalsRequest;
                toAminoMsg(message: _60.QueryProposalsRequest): _60.QueryProposalsRequestAminoMsg;
                fromProtoMsg(message: _60.QueryProposalsRequestProtoMsg): _60.QueryProposalsRequest;
                toProto(message: _60.QueryProposalsRequest): Uint8Array;
                toProtoMsg(message: _60.QueryProposalsRequest): _60.QueryProposalsRequestProtoMsg;
            };
            QueryProposalsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _60.QueryProposalsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _60.QueryProposalsResponse;
                fromPartial(object: {
                    proposals?: {
                        proposalId?: bigint;
                        content?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        } | {
                            $typeUrl?: "/cosmos.distribution.v1beta1.CommunityPoolSpendProposal";
                            title?: string;
                            description?: string;
                            recipient?: string;
                            amount?: {
                                denom?: string;
                                amount?: string;
                            }[];
                        } | {
                            $typeUrl?: "/cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit";
                            title?: string;
                            description?: string;
                            recipient?: string;
                            amount?: string;
                            deposit?: string;
                        } | {
                            $typeUrl?: "/cosmos.params.v1beta1.ParameterChangeProposal";
                            title?: string;
                            description?: string;
                            changes?: {
                                subspace?: string;
                                key?: string;
                                value?: string;
                            }[];
                        } | {
                            $typeUrl?: "/cosmos.upgrade.v1beta1.SoftwareUpgradeProposal";
                            title?: string;
                            description?: string;
                            plan?: {
                                name?: string;
                                time?: Date;
                                height?: bigint;
                                info?: string;
                                upgradedClientState?: {
                                    $typeUrl?: string;
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                };
                            };
                        } | {
                            $typeUrl?: "/cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal";
                            title?: string;
                            description?: string;
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.StoreCodeProposal";
                            title?: string;
                            description?: string;
                            runAs?: string;
                            wasmByteCode?: Uint8Array;
                            instantiatePermission?: {
                                permission?: import("../cosmwasm/wasm/v1/types").AccessType;
                                addresses?: string[];
                            };
                            unpinCode?: boolean;
                            source?: string;
                            builder?: string;
                            codeHash?: Uint8Array;
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.InstantiateContractProposal";
                            title?: string;
                            description?: string;
                            runAs?: string;
                            admin?: string;
                            codeId?: bigint;
                            label?: string;
                            msg?: Uint8Array;
                            funds?: {
                                denom?: string;
                                amount?: string;
                            }[];
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.InstantiateContract2Proposal";
                            title?: string;
                            description?: string;
                            runAs?: string;
                            admin?: string;
                            codeId?: bigint;
                            label?: string;
                            msg?: Uint8Array;
                            funds?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            salt?: Uint8Array;
                            fixMsg?: boolean;
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.MigrateContractProposal";
                            title?: string;
                            description?: string;
                            contract?: string;
                            codeId?: bigint;
                            msg?: Uint8Array;
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.SudoContractProposal";
                            title?: string;
                            description?: string;
                            contract?: string;
                            msg?: Uint8Array;
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.ExecuteContractProposal";
                            title?: string;
                            description?: string;
                            runAs?: string;
                            contract?: string;
                            msg?: Uint8Array;
                            funds?: {
                                denom?: string;
                                amount?: string;
                            }[];
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.UpdateAdminProposal";
                            title?: string;
                            description?: string;
                            newAdmin?: string;
                            contract?: string;
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.ClearAdminProposal";
                            title?: string;
                            description?: string;
                            contract?: string;
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.PinCodesProposal";
                            title?: string;
                            description?: string;
                            codeIds?: bigint[];
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.UnpinCodesProposal";
                            title?: string;
                            description?: string;
                            codeIds?: bigint[];
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.UpdateInstantiateConfigProposal";
                            title?: string;
                            description?: string;
                            accessConfigUpdates?: {
                                codeId?: bigint;
                                instantiatePermission?: {
                                    permission?: import("../cosmwasm/wasm/v1/types").AccessType;
                                    addresses?: string[];
                                };
                            }[];
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.StoreAndInstantiateContractProposal";
                            title?: string;
                            description?: string;
                            runAs?: string;
                            wasmByteCode?: Uint8Array;
                            instantiatePermission?: {
                                permission?: import("../cosmwasm/wasm/v1/types").AccessType;
                                addresses?: string[];
                            };
                            unpinCode?: boolean;
                            admin?: string;
                            label?: string;
                            msg?: Uint8Array;
                            funds?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            source?: string;
                            builder?: string;
                            codeHash?: Uint8Array;
                        } | {
                            $typeUrl?: "/cosmos.gov.v1beta1.TextProposal";
                            title?: string;
                            description?: string;
                        };
                        status?: _59.ProposalStatus;
                        finalTallyResult?: {
                            yes?: string;
                            abstain?: string;
                            no?: string;
                            noWithVeto?: string;
                        };
                        submitTime?: Date;
                        depositEndTime?: Date;
                        totalDeposit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        votingStartTime?: Date;
                        votingEndTime?: Date;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _60.QueryProposalsResponse;
                fromAmino(object: _60.QueryProposalsResponseAmino): _60.QueryProposalsResponse;
                toAmino(message: _60.QueryProposalsResponse): _60.QueryProposalsResponseAmino;
                fromAminoMsg(object: _60.QueryProposalsResponseAminoMsg): _60.QueryProposalsResponse;
                toAminoMsg(message: _60.QueryProposalsResponse): _60.QueryProposalsResponseAminoMsg;
                fromProtoMsg(message: _60.QueryProposalsResponseProtoMsg): _60.QueryProposalsResponse;
                toProto(message: _60.QueryProposalsResponse): Uint8Array;
                toProtoMsg(message: _60.QueryProposalsResponse): _60.QueryProposalsResponseProtoMsg;
            };
            QueryVoteRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _60.QueryVoteRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _60.QueryVoteRequest;
                fromPartial(object: {
                    proposalId?: bigint;
                    voter?: string;
                }): _60.QueryVoteRequest;
                fromAmino(object: _60.QueryVoteRequestAmino): _60.QueryVoteRequest;
                toAmino(message: _60.QueryVoteRequest): _60.QueryVoteRequestAmino;
                fromAminoMsg(object: _60.QueryVoteRequestAminoMsg): _60.QueryVoteRequest;
                toAminoMsg(message: _60.QueryVoteRequest): _60.QueryVoteRequestAminoMsg;
                fromProtoMsg(message: _60.QueryVoteRequestProtoMsg): _60.QueryVoteRequest;
                toProto(message: _60.QueryVoteRequest): Uint8Array;
                toProtoMsg(message: _60.QueryVoteRequest): _60.QueryVoteRequestProtoMsg;
            };
            QueryVoteResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _60.QueryVoteResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _60.QueryVoteResponse;
                fromPartial(object: {
                    vote?: {
                        proposalId?: bigint;
                        voter?: string;
                        option?: _59.VoteOption;
                        options?: {
                            option?: _59.VoteOption;
                            weight?: string;
                        }[];
                    };
                }): _60.QueryVoteResponse;
                fromAmino(object: _60.QueryVoteResponseAmino): _60.QueryVoteResponse;
                toAmino(message: _60.QueryVoteResponse): _60.QueryVoteResponseAmino;
                fromAminoMsg(object: _60.QueryVoteResponseAminoMsg): _60.QueryVoteResponse;
                toAminoMsg(message: _60.QueryVoteResponse): _60.QueryVoteResponseAminoMsg;
                fromProtoMsg(message: _60.QueryVoteResponseProtoMsg): _60.QueryVoteResponse;
                toProto(message: _60.QueryVoteResponse): Uint8Array;
                toProtoMsg(message: _60.QueryVoteResponse): _60.QueryVoteResponseProtoMsg;
            };
            QueryVotesRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _60.QueryVotesRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _60.QueryVotesRequest;
                fromPartial(object: {
                    proposalId?: bigint;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _60.QueryVotesRequest;
                fromAmino(object: _60.QueryVotesRequestAmino): _60.QueryVotesRequest;
                toAmino(message: _60.QueryVotesRequest): _60.QueryVotesRequestAmino;
                fromAminoMsg(object: _60.QueryVotesRequestAminoMsg): _60.QueryVotesRequest;
                toAminoMsg(message: _60.QueryVotesRequest): _60.QueryVotesRequestAminoMsg;
                fromProtoMsg(message: _60.QueryVotesRequestProtoMsg): _60.QueryVotesRequest;
                toProto(message: _60.QueryVotesRequest): Uint8Array;
                toProtoMsg(message: _60.QueryVotesRequest): _60.QueryVotesRequestProtoMsg;
            };
            QueryVotesResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _60.QueryVotesResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _60.QueryVotesResponse;
                fromPartial(object: {
                    votes?: {
                        proposalId?: bigint;
                        voter?: string;
                        option?: _59.VoteOption;
                        options?: {
                            option?: _59.VoteOption;
                            weight?: string;
                        }[];
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _60.QueryVotesResponse;
                fromAmino(object: _60.QueryVotesResponseAmino): _60.QueryVotesResponse;
                toAmino(message: _60.QueryVotesResponse): _60.QueryVotesResponseAmino;
                fromAminoMsg(object: _60.QueryVotesResponseAminoMsg): _60.QueryVotesResponse;
                toAminoMsg(message: _60.QueryVotesResponse): _60.QueryVotesResponseAminoMsg;
                fromProtoMsg(message: _60.QueryVotesResponseProtoMsg): _60.QueryVotesResponse;
                toProto(message: _60.QueryVotesResponse): Uint8Array;
                toProtoMsg(message: _60.QueryVotesResponse): _60.QueryVotesResponseProtoMsg;
            };
            QueryParamsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _60.QueryParamsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _60.QueryParamsRequest;
                fromPartial(object: {
                    paramsType?: string;
                }): _60.QueryParamsRequest;
                fromAmino(object: _60.QueryParamsRequestAmino): _60.QueryParamsRequest;
                toAmino(message: _60.QueryParamsRequest): _60.QueryParamsRequestAmino;
                fromAminoMsg(object: _60.QueryParamsRequestAminoMsg): _60.QueryParamsRequest;
                toAminoMsg(message: _60.QueryParamsRequest): _60.QueryParamsRequestAminoMsg;
                fromProtoMsg(message: _60.QueryParamsRequestProtoMsg): _60.QueryParamsRequest;
                toProto(message: _60.QueryParamsRequest): Uint8Array;
                toProtoMsg(message: _60.QueryParamsRequest): _60.QueryParamsRequestProtoMsg;
            };
            QueryParamsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _60.QueryParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _60.QueryParamsResponse;
                fromPartial(object: {
                    votingParams?: {
                        votingPeriod?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                    };
                    depositParams?: {
                        minDeposit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        maxDepositPeriod?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                    };
                    tallyParams?: {
                        quorum?: Uint8Array;
                        threshold?: Uint8Array;
                        vetoThreshold?: Uint8Array;
                    };
                }): _60.QueryParamsResponse;
                fromAmino(object: _60.QueryParamsResponseAmino): _60.QueryParamsResponse;
                toAmino(message: _60.QueryParamsResponse): _60.QueryParamsResponseAmino;
                fromAminoMsg(object: _60.QueryParamsResponseAminoMsg): _60.QueryParamsResponse;
                toAminoMsg(message: _60.QueryParamsResponse): _60.QueryParamsResponseAminoMsg;
                fromProtoMsg(message: _60.QueryParamsResponseProtoMsg): _60.QueryParamsResponse;
                toProto(message: _60.QueryParamsResponse): Uint8Array;
                toProtoMsg(message: _60.QueryParamsResponse): _60.QueryParamsResponseProtoMsg;
            };
            QueryDepositRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _60.QueryDepositRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _60.QueryDepositRequest;
                fromPartial(object: {
                    proposalId?: bigint;
                    depositor?: string;
                }): _60.QueryDepositRequest;
                fromAmino(object: _60.QueryDepositRequestAmino): _60.QueryDepositRequest;
                toAmino(message: _60.QueryDepositRequest): _60.QueryDepositRequestAmino;
                fromAminoMsg(object: _60.QueryDepositRequestAminoMsg): _60.QueryDepositRequest;
                toAminoMsg(message: _60.QueryDepositRequest): _60.QueryDepositRequestAminoMsg;
                fromProtoMsg(message: _60.QueryDepositRequestProtoMsg): _60.QueryDepositRequest;
                toProto(message: _60.QueryDepositRequest): Uint8Array;
                toProtoMsg(message: _60.QueryDepositRequest): _60.QueryDepositRequestProtoMsg;
            };
            QueryDepositResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _60.QueryDepositResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _60.QueryDepositResponse;
                fromPartial(object: {
                    deposit?: {
                        proposalId?: bigint;
                        depositor?: string;
                        amount?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    };
                }): _60.QueryDepositResponse;
                fromAmino(object: _60.QueryDepositResponseAmino): _60.QueryDepositResponse;
                toAmino(message: _60.QueryDepositResponse): _60.QueryDepositResponseAmino;
                fromAminoMsg(object: _60.QueryDepositResponseAminoMsg): _60.QueryDepositResponse;
                toAminoMsg(message: _60.QueryDepositResponse): _60.QueryDepositResponseAminoMsg;
                fromProtoMsg(message: _60.QueryDepositResponseProtoMsg): _60.QueryDepositResponse;
                toProto(message: _60.QueryDepositResponse): Uint8Array;
                toProtoMsg(message: _60.QueryDepositResponse): _60.QueryDepositResponseProtoMsg;
            };
            QueryDepositsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _60.QueryDepositsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _60.QueryDepositsRequest;
                fromPartial(object: {
                    proposalId?: bigint;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _60.QueryDepositsRequest;
                fromAmino(object: _60.QueryDepositsRequestAmino): _60.QueryDepositsRequest;
                toAmino(message: _60.QueryDepositsRequest): _60.QueryDepositsRequestAmino;
                fromAminoMsg(object: _60.QueryDepositsRequestAminoMsg): _60.QueryDepositsRequest;
                toAminoMsg(message: _60.QueryDepositsRequest): _60.QueryDepositsRequestAminoMsg;
                fromProtoMsg(message: _60.QueryDepositsRequestProtoMsg): _60.QueryDepositsRequest;
                toProto(message: _60.QueryDepositsRequest): Uint8Array;
                toProtoMsg(message: _60.QueryDepositsRequest): _60.QueryDepositsRequestProtoMsg;
            };
            QueryDepositsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _60.QueryDepositsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _60.QueryDepositsResponse;
                fromPartial(object: {
                    deposits?: {
                        proposalId?: bigint;
                        depositor?: string;
                        amount?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _60.QueryDepositsResponse;
                fromAmino(object: _60.QueryDepositsResponseAmino): _60.QueryDepositsResponse;
                toAmino(message: _60.QueryDepositsResponse): _60.QueryDepositsResponseAmino;
                fromAminoMsg(object: _60.QueryDepositsResponseAminoMsg): _60.QueryDepositsResponse;
                toAminoMsg(message: _60.QueryDepositsResponse): _60.QueryDepositsResponseAminoMsg;
                fromProtoMsg(message: _60.QueryDepositsResponseProtoMsg): _60.QueryDepositsResponse;
                toProto(message: _60.QueryDepositsResponse): Uint8Array;
                toProtoMsg(message: _60.QueryDepositsResponse): _60.QueryDepositsResponseProtoMsg;
            };
            QueryTallyResultRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _60.QueryTallyResultRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _60.QueryTallyResultRequest;
                fromPartial(object: {
                    proposalId?: bigint;
                }): _60.QueryTallyResultRequest;
                fromAmino(object: _60.QueryTallyResultRequestAmino): _60.QueryTallyResultRequest;
                toAmino(message: _60.QueryTallyResultRequest): _60.QueryTallyResultRequestAmino;
                fromAminoMsg(object: _60.QueryTallyResultRequestAminoMsg): _60.QueryTallyResultRequest;
                toAminoMsg(message: _60.QueryTallyResultRequest): _60.QueryTallyResultRequestAminoMsg;
                fromProtoMsg(message: _60.QueryTallyResultRequestProtoMsg): _60.QueryTallyResultRequest;
                toProto(message: _60.QueryTallyResultRequest): Uint8Array;
                toProtoMsg(message: _60.QueryTallyResultRequest): _60.QueryTallyResultRequestProtoMsg;
            };
            QueryTallyResultResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _60.QueryTallyResultResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _60.QueryTallyResultResponse;
                fromPartial(object: {
                    tally?: {
                        yes?: string;
                        abstain?: string;
                        no?: string;
                        noWithVeto?: string;
                    };
                }): _60.QueryTallyResultResponse;
                fromAmino(object: _60.QueryTallyResultResponseAmino): _60.QueryTallyResultResponse;
                toAmino(message: _60.QueryTallyResultResponse): _60.QueryTallyResultResponseAmino;
                fromAminoMsg(object: _60.QueryTallyResultResponseAminoMsg): _60.QueryTallyResultResponse;
                toAminoMsg(message: _60.QueryTallyResultResponse): _60.QueryTallyResultResponseAminoMsg;
                fromProtoMsg(message: _60.QueryTallyResultResponseProtoMsg): _60.QueryTallyResultResponse;
                toProto(message: _60.QueryTallyResultResponse): Uint8Array;
                toProtoMsg(message: _60.QueryTallyResultResponse): _60.QueryTallyResultResponseProtoMsg;
            };
            voteOptionFromJSON(object: any): _59.VoteOption;
            voteOptionToJSON(object: _59.VoteOption): string;
            proposalStatusFromJSON(object: any): _59.ProposalStatus;
            proposalStatusToJSON(object: _59.ProposalStatus): string;
            VoteOption: typeof _59.VoteOption;
            VoteOptionSDKType: typeof _59.VoteOption;
            VoteOptionAmino: typeof _59.VoteOption;
            ProposalStatus: typeof _59.ProposalStatus;
            ProposalStatusSDKType: typeof _59.ProposalStatus;
            ProposalStatusAmino: typeof _59.ProposalStatus;
            WeightedVoteOption: {
                typeUrl: string;
                aminoType: string;
                encode(message: _59.WeightedVoteOption, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _59.WeightedVoteOption;
                fromPartial(object: {
                    option?: _59.VoteOption;
                    weight?: string;
                }): _59.WeightedVoteOption;
                fromAmino(object: _59.WeightedVoteOptionAmino): _59.WeightedVoteOption;
                toAmino(message: _59.WeightedVoteOption): _59.WeightedVoteOptionAmino;
                fromAminoMsg(object: _59.WeightedVoteOptionAminoMsg): _59.WeightedVoteOption;
                toAminoMsg(message: _59.WeightedVoteOption): _59.WeightedVoteOptionAminoMsg;
                fromProtoMsg(message: _59.WeightedVoteOptionProtoMsg): _59.WeightedVoteOption;
                toProto(message: _59.WeightedVoteOption): Uint8Array;
                toProtoMsg(message: _59.WeightedVoteOption): _59.WeightedVoteOptionProtoMsg;
            };
            TextProposal: {
                typeUrl: string;
                aminoType: string;
                encode(message: _59.TextProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _59.TextProposal;
                fromPartial(object: {
                    $typeUrl?: "/cosmos.gov.v1beta1.TextProposal";
                    title?: string;
                    description?: string;
                }): _59.TextProposal;
                fromAmino(object: _59.TextProposalAmino): _59.TextProposal;
                toAmino(message: _59.TextProposal): _59.TextProposalAmino;
                fromAminoMsg(object: _59.TextProposalAminoMsg): _59.TextProposal;
                toAminoMsg(message: _59.TextProposal): _59.TextProposalAminoMsg;
                fromProtoMsg(message: _59.TextProposalProtoMsg): _59.TextProposal;
                toProto(message: _59.TextProposal): Uint8Array;
                toProtoMsg(message: _59.TextProposal): _59.TextProposalProtoMsg;
            };
            Deposit: {
                typeUrl: string;
                aminoType: string;
                encode(message: _59.Deposit, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _59.Deposit;
                fromPartial(object: {
                    proposalId?: bigint;
                    depositor?: string;
                    amount?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _59.Deposit;
                fromAmino(object: _59.DepositAmino): _59.Deposit;
                toAmino(message: _59.Deposit): _59.DepositAmino;
                fromAminoMsg(object: _59.DepositAminoMsg): _59.Deposit;
                toAminoMsg(message: _59.Deposit): _59.DepositAminoMsg;
                fromProtoMsg(message: _59.DepositProtoMsg): _59.Deposit;
                toProto(message: _59.Deposit): Uint8Array;
                toProtoMsg(message: _59.Deposit): _59.DepositProtoMsg;
            };
            Proposal: {
                typeUrl: string;
                aminoType: string;
                encode(message: _59.Proposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _59.Proposal;
                fromPartial(object: {
                    proposalId?: bigint;
                    content?: {
                        $typeUrl?: string;
                        typeUrl?: string;
                        value?: Uint8Array;
                    } | {
                        $typeUrl?: "/cosmos.distribution.v1beta1.CommunityPoolSpendProposal";
                        title?: string;
                        description?: string;
                        recipient?: string;
                        amount?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    } | {
                        $typeUrl?: "/cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit";
                        title?: string;
                        description?: string;
                        recipient?: string;
                        amount?: string;
                        deposit?: string;
                    } | {
                        $typeUrl?: "/cosmos.params.v1beta1.ParameterChangeProposal";
                        title?: string;
                        description?: string;
                        changes?: {
                            subspace?: string;
                            key?: string;
                            value?: string;
                        }[];
                    } | {
                        $typeUrl?: "/cosmos.upgrade.v1beta1.SoftwareUpgradeProposal";
                        title?: string;
                        description?: string;
                        plan?: {
                            name?: string;
                            time?: Date;
                            height?: bigint;
                            info?: string;
                            upgradedClientState?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            };
                        };
                    } | {
                        $typeUrl?: "/cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal";
                        title?: string;
                        description?: string;
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.StoreCodeProposal";
                        title?: string;
                        description?: string;
                        runAs?: string;
                        wasmByteCode?: Uint8Array;
                        instantiatePermission?: {
                            permission?: import("../cosmwasm/wasm/v1/types").AccessType;
                            addresses?: string[];
                        };
                        unpinCode?: boolean;
                        source?: string;
                        builder?: string;
                        codeHash?: Uint8Array;
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.InstantiateContractProposal";
                        title?: string;
                        description?: string;
                        runAs?: string;
                        admin?: string;
                        codeId?: bigint;
                        label?: string;
                        msg?: Uint8Array;
                        funds?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.InstantiateContract2Proposal";
                        title?: string;
                        description?: string;
                        runAs?: string;
                        admin?: string;
                        codeId?: bigint;
                        label?: string;
                        msg?: Uint8Array;
                        funds?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        salt?: Uint8Array;
                        fixMsg?: boolean;
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.MigrateContractProposal";
                        title?: string;
                        description?: string;
                        contract?: string;
                        codeId?: bigint;
                        msg?: Uint8Array;
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.SudoContractProposal";
                        title?: string;
                        description?: string;
                        contract?: string;
                        msg?: Uint8Array;
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.ExecuteContractProposal";
                        title?: string;
                        description?: string;
                        runAs?: string;
                        contract?: string;
                        msg?: Uint8Array;
                        funds?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.UpdateAdminProposal";
                        title?: string;
                        description?: string;
                        newAdmin?: string;
                        contract?: string;
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.ClearAdminProposal";
                        title?: string;
                        description?: string;
                        contract?: string;
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.PinCodesProposal";
                        title?: string;
                        description?: string;
                        codeIds?: bigint[];
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.UnpinCodesProposal";
                        title?: string;
                        description?: string;
                        codeIds?: bigint[];
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.UpdateInstantiateConfigProposal";
                        title?: string;
                        description?: string;
                        accessConfigUpdates?: {
                            codeId?: bigint;
                            instantiatePermission?: {
                                permission?: import("../cosmwasm/wasm/v1/types").AccessType;
                                addresses?: string[];
                            };
                        }[];
                    } | {
                        $typeUrl?: "/cosmwasm.wasm.v1.StoreAndInstantiateContractProposal";
                        title?: string;
                        description?: string;
                        runAs?: string;
                        wasmByteCode?: Uint8Array;
                        instantiatePermission?: {
                            permission?: import("../cosmwasm/wasm/v1/types").AccessType;
                            addresses?: string[];
                        };
                        unpinCode?: boolean;
                        admin?: string;
                        label?: string;
                        msg?: Uint8Array;
                        funds?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        source?: string;
                        builder?: string;
                        codeHash?: Uint8Array;
                    } | {
                        $typeUrl?: "/cosmos.gov.v1beta1.TextProposal";
                        title?: string;
                        description?: string;
                    };
                    status?: _59.ProposalStatus;
                    finalTallyResult?: {
                        yes?: string;
                        abstain?: string;
                        no?: string;
                        noWithVeto?: string;
                    };
                    submitTime?: Date;
                    depositEndTime?: Date;
                    totalDeposit?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    votingStartTime?: Date;
                    votingEndTime?: Date;
                }): _59.Proposal;
                fromAmino(object: _59.ProposalAmino): _59.Proposal;
                toAmino(message: _59.Proposal): _59.ProposalAmino;
                fromAminoMsg(object: _59.ProposalAminoMsg): _59.Proposal;
                toAminoMsg(message: _59.Proposal): _59.ProposalAminoMsg;
                fromProtoMsg(message: _59.ProposalProtoMsg): _59.Proposal;
                toProto(message: _59.Proposal): Uint8Array;
                toProtoMsg(message: _59.Proposal): _59.ProposalProtoMsg;
            };
            TallyResult: {
                typeUrl: string;
                aminoType: string;
                encode(message: _59.TallyResult, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _59.TallyResult;
                fromPartial(object: {
                    yes?: string;
                    abstain?: string;
                    no?: string;
                    noWithVeto?: string;
                }): _59.TallyResult;
                fromAmino(object: _59.TallyResultAmino): _59.TallyResult;
                toAmino(message: _59.TallyResult): _59.TallyResultAmino;
                fromAminoMsg(object: _59.TallyResultAminoMsg): _59.TallyResult;
                toAminoMsg(message: _59.TallyResult): _59.TallyResultAminoMsg;
                fromProtoMsg(message: _59.TallyResultProtoMsg): _59.TallyResult;
                toProto(message: _59.TallyResult): Uint8Array;
                toProtoMsg(message: _59.TallyResult): _59.TallyResultProtoMsg;
            };
            Vote: {
                typeUrl: string;
                aminoType: string;
                encode(message: _59.Vote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _59.Vote;
                fromPartial(object: {
                    proposalId?: bigint;
                    voter?: string;
                    option?: _59.VoteOption;
                    options?: {
                        option?: _59.VoteOption;
                        weight?: string;
                    }[];
                }): _59.Vote;
                fromAmino(object: _59.VoteAmino): _59.Vote;
                toAmino(message: _59.Vote): _59.VoteAmino;
                fromAminoMsg(object: _59.VoteAminoMsg): _59.Vote;
                toAminoMsg(message: _59.Vote): _59.VoteAminoMsg;
                fromProtoMsg(message: _59.VoteProtoMsg): _59.Vote;
                toProto(message: _59.Vote): Uint8Array;
                toProtoMsg(message: _59.Vote): _59.VoteProtoMsg;
            };
            DepositParams: {
                typeUrl: string;
                aminoType: string;
                encode(message: _59.DepositParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _59.DepositParams;
                fromPartial(object: {
                    minDeposit?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    maxDepositPeriod?: {
                        seconds?: bigint;
                        nanos?: number;
                    };
                }): _59.DepositParams;
                fromAmino(object: _59.DepositParamsAmino): _59.DepositParams;
                toAmino(message: _59.DepositParams): _59.DepositParamsAmino;
                fromAminoMsg(object: _59.DepositParamsAminoMsg): _59.DepositParams;
                toAminoMsg(message: _59.DepositParams): _59.DepositParamsAminoMsg;
                fromProtoMsg(message: _59.DepositParamsProtoMsg): _59.DepositParams;
                toProto(message: _59.DepositParams): Uint8Array;
                toProtoMsg(message: _59.DepositParams): _59.DepositParamsProtoMsg;
            };
            VotingParams: {
                typeUrl: string;
                aminoType: string;
                encode(message: _59.VotingParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _59.VotingParams;
                fromPartial(object: {
                    votingPeriod?: {
                        seconds?: bigint;
                        nanos?: number;
                    };
                }): _59.VotingParams;
                fromAmino(object: _59.VotingParamsAmino): _59.VotingParams;
                toAmino(message: _59.VotingParams): _59.VotingParamsAmino;
                fromAminoMsg(object: _59.VotingParamsAminoMsg): _59.VotingParams;
                toAminoMsg(message: _59.VotingParams): _59.VotingParamsAminoMsg;
                fromProtoMsg(message: _59.VotingParamsProtoMsg): _59.VotingParams;
                toProto(message: _59.VotingParams): Uint8Array;
                toProtoMsg(message: _59.VotingParams): _59.VotingParamsProtoMsg;
            };
            TallyParams: {
                typeUrl: string;
                aminoType: string;
                encode(message: _59.TallyParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _59.TallyParams;
                fromPartial(object: {
                    quorum?: Uint8Array;
                    threshold?: Uint8Array;
                    vetoThreshold?: Uint8Array;
                }): _59.TallyParams;
                fromAmino(object: _59.TallyParamsAmino): _59.TallyParams;
                toAmino(message: _59.TallyParams): _59.TallyParamsAmino;
                fromAminoMsg(object: _59.TallyParamsAminoMsg): _59.TallyParams;
                toAminoMsg(message: _59.TallyParams): _59.TallyParamsAminoMsg;
                fromProtoMsg(message: _59.TallyParamsProtoMsg): _59.TallyParams;
                toProto(message: _59.TallyParams): Uint8Array;
                toProtoMsg(message: _59.TallyParams): _59.TallyParamsProtoMsg;
            };
            GenesisState: {
                typeUrl: string;
                aminoType: string;
                encode(message: _58.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _58.GenesisState;
                fromPartial(object: {
                    startingProposalId?: bigint;
                    deposits?: {
                        proposalId?: bigint;
                        depositor?: string;
                        amount?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    }[];
                    votes?: {
                        proposalId?: bigint;
                        voter?: string;
                        option?: _59.VoteOption;
                        options?: {
                            option?: _59.VoteOption;
                            weight?: string;
                        }[];
                    }[];
                    proposals?: {
                        proposalId?: bigint;
                        content?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        } | {
                            $typeUrl?: "/cosmos.distribution.v1beta1.CommunityPoolSpendProposal";
                            title?: string;
                            description?: string;
                            recipient?: string;
                            amount?: {
                                denom?: string;
                                amount?: string;
                            }[];
                        } | {
                            $typeUrl?: "/cosmos.distribution.v1beta1.CommunityPoolSpendProposalWithDeposit";
                            title?: string;
                            description?: string;
                            recipient?: string;
                            amount?: string;
                            deposit?: string;
                        } | {
                            $typeUrl?: "/cosmos.params.v1beta1.ParameterChangeProposal";
                            title?: string;
                            description?: string;
                            changes?: {
                                subspace?: string;
                                key?: string;
                                value?: string;
                            }[];
                        } | {
                            $typeUrl?: "/cosmos.upgrade.v1beta1.SoftwareUpgradeProposal";
                            title?: string;
                            description?: string;
                            plan?: {
                                name?: string;
                                time?: Date;
                                height?: bigint;
                                info?: string;
                                upgradedClientState?: {
                                    $typeUrl?: string;
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                };
                            };
                        } | {
                            $typeUrl?: "/cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal";
                            title?: string;
                            description?: string;
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.StoreCodeProposal";
                            title?: string;
                            description?: string;
                            runAs?: string;
                            wasmByteCode?: Uint8Array;
                            instantiatePermission?: {
                                permission?: import("../cosmwasm/wasm/v1/types").AccessType;
                                addresses?: string[];
                            };
                            unpinCode?: boolean;
                            source?: string;
                            builder?: string;
                            codeHash?: Uint8Array;
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.InstantiateContractProposal";
                            title?: string;
                            description?: string;
                            runAs?: string;
                            admin?: string;
                            codeId?: bigint;
                            label?: string;
                            msg?: Uint8Array;
                            funds?: {
                                denom?: string;
                                amount?: string;
                            }[];
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.InstantiateContract2Proposal";
                            title?: string;
                            description?: string;
                            runAs?: string;
                            admin?: string;
                            codeId?: bigint;
                            label?: string;
                            msg?: Uint8Array;
                            funds?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            salt?: Uint8Array;
                            fixMsg?: boolean;
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.MigrateContractProposal";
                            title?: string;
                            description?: string;
                            contract?: string;
                            codeId?: bigint;
                            msg?: Uint8Array;
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.SudoContractProposal";
                            title?: string;
                            description?: string;
                            contract?: string;
                            msg?: Uint8Array;
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.ExecuteContractProposal";
                            title?: string;
                            description?: string;
                            runAs?: string;
                            contract?: string;
                            msg?: Uint8Array;
                            funds?: {
                                denom?: string;
                                amount?: string;
                            }[];
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.UpdateAdminProposal";
                            title?: string;
                            description?: string;
                            newAdmin?: string;
                            contract?: string;
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.ClearAdminProposal";
                            title?: string;
                            description?: string;
                            contract?: string;
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.PinCodesProposal";
                            title?: string;
                            description?: string;
                            codeIds?: bigint[];
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.UnpinCodesProposal";
                            title?: string;
                            description?: string;
                            codeIds?: bigint[];
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.UpdateInstantiateConfigProposal";
                            title?: string;
                            description?: string;
                            accessConfigUpdates?: {
                                codeId?: bigint;
                                instantiatePermission?: {
                                    permission?: import("../cosmwasm/wasm/v1/types").AccessType;
                                    addresses?: string[];
                                };
                            }[];
                        } | {
                            $typeUrl?: "/cosmwasm.wasm.v1.StoreAndInstantiateContractProposal";
                            title?: string;
                            description?: string;
                            runAs?: string;
                            wasmByteCode?: Uint8Array;
                            instantiatePermission?: {
                                permission?: import("../cosmwasm/wasm/v1/types").AccessType;
                                addresses?: string[];
                            };
                            unpinCode?: boolean;
                            admin?: string;
                            label?: string;
                            msg?: Uint8Array;
                            funds?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            source?: string;
                            builder?: string;
                            codeHash?: Uint8Array;
                        } | {
                            $typeUrl?: "/cosmos.gov.v1beta1.TextProposal";
                            title?: string;
                            description?: string;
                        };
                        status?: _59.ProposalStatus;
                        finalTallyResult?: {
                            yes?: string;
                            abstain?: string;
                            no?: string;
                            noWithVeto?: string;
                        };
                        submitTime?: Date;
                        depositEndTime?: Date;
                        totalDeposit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        votingStartTime?: Date;
                        votingEndTime?: Date;
                    }[];
                    depositParams?: {
                        minDeposit?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        maxDepositPeriod?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                    };
                    votingParams?: {
                        votingPeriod?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                    };
                    tallyParams?: {
                        quorum?: Uint8Array;
                        threshold?: Uint8Array;
                        vetoThreshold?: Uint8Array;
                    };
                }): _58.GenesisState;
                fromAmino(object: _58.GenesisStateAmino): _58.GenesisState;
                toAmino(message: _58.GenesisState): _58.GenesisStateAmino;
                fromAminoMsg(object: _58.GenesisStateAminoMsg): _58.GenesisState;
                toAminoMsg(message: _58.GenesisState): _58.GenesisStateAminoMsg;
                fromProtoMsg(message: _58.GenesisStateProtoMsg): _58.GenesisState;
                toProto(message: _58.GenesisState): Uint8Array;
                toProtoMsg(message: _58.GenesisState): _58.GenesisStateProtoMsg;
            };
        };
    }
    namespace group {
        namespace module {
            const v1: {
                Module: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _62.Module, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _62.Module;
                    fromPartial(object: {
                        maxExecutionPeriod?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                        maxMetadataLen?: bigint;
                    }): _62.Module;
                    fromAmino(object: _62.ModuleAmino): _62.Module;
                    toAmino(message: _62.Module): _62.ModuleAmino;
                    fromAminoMsg(object: _62.ModuleAminoMsg): _62.Module;
                    toAminoMsg(message: _62.Module): _62.ModuleAminoMsg;
                    fromProtoMsg(message: _62.ModuleProtoMsg): _62.Module;
                    toProto(message: _62.Module): Uint8Array;
                    toProtoMsg(message: _62.Module): _62.ModuleProtoMsg;
                };
            };
        }
        const v1: {
            MsgClientImpl: typeof _238.MsgClientImpl;
            QueryClientImpl: typeof _221.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                groupInfo(request: _65.QueryGroupInfoRequest): Promise<_65.QueryGroupInfoResponse>;
                groupPolicyInfo(request: _65.QueryGroupPolicyInfoRequest): Promise<_65.QueryGroupPolicyInfoResponse>;
                groupMembers(request: _65.QueryGroupMembersRequest): Promise<_65.QueryGroupMembersResponse>;
                groupsByAdmin(request: _65.QueryGroupsByAdminRequest): Promise<_65.QueryGroupsByAdminResponse>;
                groupPoliciesByGroup(request: _65.QueryGroupPoliciesByGroupRequest): Promise<_65.QueryGroupPoliciesByGroupResponse>;
                groupPoliciesByAdmin(request: _65.QueryGroupPoliciesByAdminRequest): Promise<_65.QueryGroupPoliciesByAdminResponse>;
                proposal(request: _65.QueryProposalRequest): Promise<_65.QueryProposalResponse>;
                proposalsByGroupPolicy(request: _65.QueryProposalsByGroupPolicyRequest): Promise<_65.QueryProposalsByGroupPolicyResponse>;
                voteByProposalVoter(request: _65.QueryVoteByProposalVoterRequest): Promise<_65.QueryVoteByProposalVoterResponse>;
                votesByProposal(request: _65.QueryVotesByProposalRequest): Promise<_65.QueryVotesByProposalResponse>;
                votesByVoter(request: _65.QueryVotesByVoterRequest): Promise<_65.QueryVotesByVoterResponse>;
                groupsByMember(request: _65.QueryGroupsByMemberRequest): Promise<_65.QueryGroupsByMemberResponse>;
                tallyResult(request: _65.QueryTallyResultRequest): Promise<_65.QueryTallyResultResponse>;
                groups(request?: _65.QueryGroupsRequest): Promise<_65.QueryGroupsResponse>;
            };
            LCDQueryClient: typeof _204.LCDQueryClient;
            registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
            load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
            MessageComposer: {
                encoded: {
                    createGroup(value: _66.MsgCreateGroup): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    updateGroupMembers(value: _66.MsgUpdateGroupMembers): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    updateGroupAdmin(value: _66.MsgUpdateGroupAdmin): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    updateGroupMetadata(value: _66.MsgUpdateGroupMetadata): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    createGroupPolicy(value: _66.MsgCreateGroupPolicy): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    createGroupWithPolicy(value: _66.MsgCreateGroupWithPolicy): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    updateGroupPolicyAdmin(value: _66.MsgUpdateGroupPolicyAdmin): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    updateGroupPolicyDecisionPolicy(value: _66.MsgUpdateGroupPolicyDecisionPolicy): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    updateGroupPolicyMetadata(value: _66.MsgUpdateGroupPolicyMetadata): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    submitProposal(value: _66.MsgSubmitProposal): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    withdrawProposal(value: _66.MsgWithdrawProposal): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    vote(value: _66.MsgVote): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    exec(value: _66.MsgExec): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    leaveGroup(value: _66.MsgLeaveGroup): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                };
                withTypeUrl: {
                    createGroup(value: _66.MsgCreateGroup): {
                        typeUrl: string;
                        value: _66.MsgCreateGroup;
                    };
                    updateGroupMembers(value: _66.MsgUpdateGroupMembers): {
                        typeUrl: string;
                        value: _66.MsgUpdateGroupMembers;
                    };
                    updateGroupAdmin(value: _66.MsgUpdateGroupAdmin): {
                        typeUrl: string;
                        value: _66.MsgUpdateGroupAdmin;
                    };
                    updateGroupMetadata(value: _66.MsgUpdateGroupMetadata): {
                        typeUrl: string;
                        value: _66.MsgUpdateGroupMetadata;
                    };
                    createGroupPolicy(value: _66.MsgCreateGroupPolicy): {
                        typeUrl: string;
                        value: _66.MsgCreateGroupPolicy;
                    };
                    createGroupWithPolicy(value: _66.MsgCreateGroupWithPolicy): {
                        typeUrl: string;
                        value: _66.MsgCreateGroupWithPolicy;
                    };
                    updateGroupPolicyAdmin(value: _66.MsgUpdateGroupPolicyAdmin): {
                        typeUrl: string;
                        value: _66.MsgUpdateGroupPolicyAdmin;
                    };
                    updateGroupPolicyDecisionPolicy(value: _66.MsgUpdateGroupPolicyDecisionPolicy): {
                        typeUrl: string;
                        value: _66.MsgUpdateGroupPolicyDecisionPolicy;
                    };
                    updateGroupPolicyMetadata(value: _66.MsgUpdateGroupPolicyMetadata): {
                        typeUrl: string;
                        value: _66.MsgUpdateGroupPolicyMetadata;
                    };
                    submitProposal(value: _66.MsgSubmitProposal): {
                        typeUrl: string;
                        value: _66.MsgSubmitProposal;
                    };
                    withdrawProposal(value: _66.MsgWithdrawProposal): {
                        typeUrl: string;
                        value: _66.MsgWithdrawProposal;
                    };
                    vote(value: _66.MsgVote): {
                        typeUrl: string;
                        value: _66.MsgVote;
                    };
                    exec(value: _66.MsgExec): {
                        typeUrl: string;
                        value: _66.MsgExec;
                    };
                    leaveGroup(value: _66.MsgLeaveGroup): {
                        typeUrl: string;
                        value: _66.MsgLeaveGroup;
                    };
                };
                fromPartial: {
                    createGroup(value: _66.MsgCreateGroup): {
                        typeUrl: string;
                        value: _66.MsgCreateGroup;
                    };
                    updateGroupMembers(value: _66.MsgUpdateGroupMembers): {
                        typeUrl: string;
                        value: _66.MsgUpdateGroupMembers;
                    };
                    updateGroupAdmin(value: _66.MsgUpdateGroupAdmin): {
                        typeUrl: string;
                        value: _66.MsgUpdateGroupAdmin;
                    };
                    updateGroupMetadata(value: _66.MsgUpdateGroupMetadata): {
                        typeUrl: string;
                        value: _66.MsgUpdateGroupMetadata;
                    };
                    createGroupPolicy(value: _66.MsgCreateGroupPolicy): {
                        typeUrl: string;
                        value: _66.MsgCreateGroupPolicy;
                    };
                    createGroupWithPolicy(value: _66.MsgCreateGroupWithPolicy): {
                        typeUrl: string;
                        value: _66.MsgCreateGroupWithPolicy;
                    };
                    updateGroupPolicyAdmin(value: _66.MsgUpdateGroupPolicyAdmin): {
                        typeUrl: string;
                        value: _66.MsgUpdateGroupPolicyAdmin;
                    };
                    updateGroupPolicyDecisionPolicy(value: _66.MsgUpdateGroupPolicyDecisionPolicy): {
                        typeUrl: string;
                        value: _66.MsgUpdateGroupPolicyDecisionPolicy;
                    };
                    updateGroupPolicyMetadata(value: _66.MsgUpdateGroupPolicyMetadata): {
                        typeUrl: string;
                        value: _66.MsgUpdateGroupPolicyMetadata;
                    };
                    submitProposal(value: _66.MsgSubmitProposal): {
                        typeUrl: string;
                        value: _66.MsgSubmitProposal;
                    };
                    withdrawProposal(value: _66.MsgWithdrawProposal): {
                        typeUrl: string;
                        value: _66.MsgWithdrawProposal;
                    };
                    vote(value: _66.MsgVote): {
                        typeUrl: string;
                        value: _66.MsgVote;
                    };
                    exec(value: _66.MsgExec): {
                        typeUrl: string;
                        value: _66.MsgExec;
                    };
                    leaveGroup(value: _66.MsgLeaveGroup): {
                        typeUrl: string;
                        value: _66.MsgLeaveGroup;
                    };
                };
            };
            AminoConverter: {
                "/cosmos.group.v1.MsgCreateGroup": {
                    aminoType: string;
                    toAmino: (message: _66.MsgCreateGroup) => _66.MsgCreateGroupAmino;
                    fromAmino: (object: _66.MsgCreateGroupAmino) => _66.MsgCreateGroup;
                };
                "/cosmos.group.v1.MsgUpdateGroupMembers": {
                    aminoType: string;
                    toAmino: (message: _66.MsgUpdateGroupMembers) => _66.MsgUpdateGroupMembersAmino;
                    fromAmino: (object: _66.MsgUpdateGroupMembersAmino) => _66.MsgUpdateGroupMembers;
                };
                "/cosmos.group.v1.MsgUpdateGroupAdmin": {
                    aminoType: string;
                    toAmino: (message: _66.MsgUpdateGroupAdmin) => _66.MsgUpdateGroupAdminAmino;
                    fromAmino: (object: _66.MsgUpdateGroupAdminAmino) => _66.MsgUpdateGroupAdmin;
                };
                "/cosmos.group.v1.MsgUpdateGroupMetadata": {
                    aminoType: string;
                    toAmino: (message: _66.MsgUpdateGroupMetadata) => _66.MsgUpdateGroupMetadataAmino;
                    fromAmino: (object: _66.MsgUpdateGroupMetadataAmino) => _66.MsgUpdateGroupMetadata;
                };
                "/cosmos.group.v1.MsgCreateGroupPolicy": {
                    aminoType: string;
                    toAmino: (message: _66.MsgCreateGroupPolicy) => _66.MsgCreateGroupPolicyAmino;
                    fromAmino: (object: _66.MsgCreateGroupPolicyAmino) => _66.MsgCreateGroupPolicy;
                };
                "/cosmos.group.v1.MsgCreateGroupWithPolicy": {
                    aminoType: string;
                    toAmino: (message: _66.MsgCreateGroupWithPolicy) => _66.MsgCreateGroupWithPolicyAmino;
                    fromAmino: (object: _66.MsgCreateGroupWithPolicyAmino) => _66.MsgCreateGroupWithPolicy;
                };
                "/cosmos.group.v1.MsgUpdateGroupPolicyAdmin": {
                    aminoType: string;
                    toAmino: (message: _66.MsgUpdateGroupPolicyAdmin) => _66.MsgUpdateGroupPolicyAdminAmino;
                    fromAmino: (object: _66.MsgUpdateGroupPolicyAdminAmino) => _66.MsgUpdateGroupPolicyAdmin;
                };
                "/cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy": {
                    aminoType: string;
                    toAmino: (message: _66.MsgUpdateGroupPolicyDecisionPolicy) => _66.MsgUpdateGroupPolicyDecisionPolicyAmino;
                    fromAmino: (object: _66.MsgUpdateGroupPolicyDecisionPolicyAmino) => _66.MsgUpdateGroupPolicyDecisionPolicy;
                };
                "/cosmos.group.v1.MsgUpdateGroupPolicyMetadata": {
                    aminoType: string;
                    toAmino: (message: _66.MsgUpdateGroupPolicyMetadata) => _66.MsgUpdateGroupPolicyMetadataAmino;
                    fromAmino: (object: _66.MsgUpdateGroupPolicyMetadataAmino) => _66.MsgUpdateGroupPolicyMetadata;
                };
                "/cosmos.group.v1.MsgSubmitProposal": {
                    aminoType: string;
                    toAmino: (message: _66.MsgSubmitProposal) => _66.MsgSubmitProposalAmino;
                    fromAmino: (object: _66.MsgSubmitProposalAmino) => _66.MsgSubmitProposal;
                };
                "/cosmos.group.v1.MsgWithdrawProposal": {
                    aminoType: string;
                    toAmino: (message: _66.MsgWithdrawProposal) => _66.MsgWithdrawProposalAmino;
                    fromAmino: (object: _66.MsgWithdrawProposalAmino) => _66.MsgWithdrawProposal;
                };
                "/cosmos.group.v1.MsgVote": {
                    aminoType: string;
                    toAmino: (message: _66.MsgVote) => _66.MsgVoteAmino;
                    fromAmino: (object: _66.MsgVoteAmino) => _66.MsgVote;
                };
                "/cosmos.group.v1.MsgExec": {
                    aminoType: string;
                    toAmino: (message: _66.MsgExec) => _66.MsgExecAmino;
                    fromAmino: (object: _66.MsgExecAmino) => _66.MsgExec;
                };
                "/cosmos.group.v1.MsgLeaveGroup": {
                    aminoType: string;
                    toAmino: (message: _66.MsgLeaveGroup) => _66.MsgLeaveGroupAmino;
                    fromAmino: (object: _66.MsgLeaveGroupAmino) => _66.MsgLeaveGroup;
                };
            };
            voteOptionFromJSON(object: any): _67.VoteOption;
            voteOptionToJSON(object: _67.VoteOption): string;
            proposalStatusFromJSON(object: any): _67.ProposalStatus;
            proposalStatusToJSON(object: _67.ProposalStatus): string;
            proposalExecutorResultFromJSON(object: any): _67.ProposalExecutorResult;
            proposalExecutorResultToJSON(object: _67.ProposalExecutorResult): string;
            VoteOption: typeof _67.VoteOption;
            VoteOptionSDKType: typeof _67.VoteOption;
            VoteOptionAmino: typeof _67.VoteOption;
            ProposalStatus: typeof _67.ProposalStatus;
            ProposalStatusSDKType: typeof _67.ProposalStatus;
            ProposalStatusAmino: typeof _67.ProposalStatus;
            ProposalExecutorResult: typeof _67.ProposalExecutorResult;
            ProposalExecutorResultSDKType: typeof _67.ProposalExecutorResult;
            ProposalExecutorResultAmino: typeof _67.ProposalExecutorResult;
            Member: {
                typeUrl: string;
                aminoType: string;
                encode(message: _67.Member, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.Member;
                fromPartial(object: {
                    address?: string;
                    weight?: string;
                    metadata?: string;
                    addedAt?: Date;
                }): _67.Member;
                fromAmino(object: _67.MemberAmino): _67.Member;
                toAmino(message: _67.Member): _67.MemberAmino;
                fromAminoMsg(object: _67.MemberAminoMsg): _67.Member;
                toAminoMsg(message: _67.Member): _67.MemberAminoMsg;
                fromProtoMsg(message: _67.MemberProtoMsg): _67.Member;
                toProto(message: _67.Member): Uint8Array;
                toProtoMsg(message: _67.Member): _67.MemberProtoMsg;
            };
            MemberRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _67.MemberRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.MemberRequest;
                fromPartial(object: {
                    address?: string;
                    weight?: string;
                    metadata?: string;
                }): _67.MemberRequest;
                fromAmino(object: _67.MemberRequestAmino): _67.MemberRequest;
                toAmino(message: _67.MemberRequest): _67.MemberRequestAmino;
                fromAminoMsg(object: _67.MemberRequestAminoMsg): _67.MemberRequest;
                toAminoMsg(message: _67.MemberRequest): _67.MemberRequestAminoMsg;
                fromProtoMsg(message: _67.MemberRequestProtoMsg): _67.MemberRequest;
                toProto(message: _67.MemberRequest): Uint8Array;
                toProtoMsg(message: _67.MemberRequest): _67.MemberRequestProtoMsg;
            };
            ThresholdDecisionPolicy: {
                typeUrl: string;
                aminoType: string;
                encode(message: _67.ThresholdDecisionPolicy, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.ThresholdDecisionPolicy;
                fromPartial(object: {
                    $typeUrl?: "/cosmos.group.v1.ThresholdDecisionPolicy";
                    threshold?: string;
                    windows?: {
                        votingPeriod?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                        minExecutionPeriod?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                    };
                }): _67.ThresholdDecisionPolicy;
                fromAmino(object: _67.ThresholdDecisionPolicyAmino): _67.ThresholdDecisionPolicy;
                toAmino(message: _67.ThresholdDecisionPolicy): _67.ThresholdDecisionPolicyAmino;
                fromAminoMsg(object: _67.ThresholdDecisionPolicyAminoMsg): _67.ThresholdDecisionPolicy;
                toAminoMsg(message: _67.ThresholdDecisionPolicy): _67.ThresholdDecisionPolicyAminoMsg;
                fromProtoMsg(message: _67.ThresholdDecisionPolicyProtoMsg): _67.ThresholdDecisionPolicy;
                toProto(message: _67.ThresholdDecisionPolicy): Uint8Array;
                toProtoMsg(message: _67.ThresholdDecisionPolicy): _67.ThresholdDecisionPolicyProtoMsg;
            };
            PercentageDecisionPolicy: {
                typeUrl: string;
                aminoType: string;
                encode(message: _67.PercentageDecisionPolicy, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.PercentageDecisionPolicy;
                fromPartial(object: {
                    $typeUrl?: "/cosmos.group.v1.PercentageDecisionPolicy";
                    percentage?: string;
                    windows?: {
                        votingPeriod?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                        minExecutionPeriod?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                    };
                }): _67.PercentageDecisionPolicy;
                fromAmino(object: _67.PercentageDecisionPolicyAmino): _67.PercentageDecisionPolicy;
                toAmino(message: _67.PercentageDecisionPolicy): _67.PercentageDecisionPolicyAmino;
                fromAminoMsg(object: _67.PercentageDecisionPolicyAminoMsg): _67.PercentageDecisionPolicy;
                toAminoMsg(message: _67.PercentageDecisionPolicy): _67.PercentageDecisionPolicyAminoMsg;
                fromProtoMsg(message: _67.PercentageDecisionPolicyProtoMsg): _67.PercentageDecisionPolicy;
                toProto(message: _67.PercentageDecisionPolicy): Uint8Array;
                toProtoMsg(message: _67.PercentageDecisionPolicy): _67.PercentageDecisionPolicyProtoMsg;
            };
            DecisionPolicyWindows: {
                typeUrl: string;
                aminoType: string;
                encode(message: _67.DecisionPolicyWindows, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.DecisionPolicyWindows;
                fromPartial(object: {
                    votingPeriod?: {
                        seconds?: bigint;
                        nanos?: number;
                    };
                    minExecutionPeriod?: {
                        seconds?: bigint;
                        nanos?: number;
                    };
                }): _67.DecisionPolicyWindows;
                fromAmino(object: _67.DecisionPolicyWindowsAmino): _67.DecisionPolicyWindows;
                toAmino(message: _67.DecisionPolicyWindows): _67.DecisionPolicyWindowsAmino;
                fromAminoMsg(object: _67.DecisionPolicyWindowsAminoMsg): _67.DecisionPolicyWindows;
                toAminoMsg(message: _67.DecisionPolicyWindows): _67.DecisionPolicyWindowsAminoMsg;
                fromProtoMsg(message: _67.DecisionPolicyWindowsProtoMsg): _67.DecisionPolicyWindows;
                toProto(message: _67.DecisionPolicyWindows): Uint8Array;
                toProtoMsg(message: _67.DecisionPolicyWindows): _67.DecisionPolicyWindowsProtoMsg;
            };
            GroupInfo: {
                typeUrl: string;
                aminoType: string;
                encode(message: _67.GroupInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.GroupInfo;
                fromPartial(object: {
                    id?: bigint;
                    admin?: string;
                    metadata?: string;
                    version?: bigint;
                    totalWeight?: string;
                    createdAt?: Date;
                }): _67.GroupInfo;
                fromAmino(object: _67.GroupInfoAmino): _67.GroupInfo;
                toAmino(message: _67.GroupInfo): _67.GroupInfoAmino;
                fromAminoMsg(object: _67.GroupInfoAminoMsg): _67.GroupInfo;
                toAminoMsg(message: _67.GroupInfo): _67.GroupInfoAminoMsg;
                fromProtoMsg(message: _67.GroupInfoProtoMsg): _67.GroupInfo;
                toProto(message: _67.GroupInfo): Uint8Array;
                toProtoMsg(message: _67.GroupInfo): _67.GroupInfoProtoMsg;
            };
            GroupMember: {
                typeUrl: string;
                aminoType: string;
                encode(message: _67.GroupMember, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.GroupMember;
                fromPartial(object: {
                    groupId?: bigint;
                    member?: {
                        address?: string;
                        weight?: string;
                        metadata?: string;
                        addedAt?: Date;
                    };
                }): _67.GroupMember;
                fromAmino(object: _67.GroupMemberAmino): _67.GroupMember;
                toAmino(message: _67.GroupMember): _67.GroupMemberAmino;
                fromAminoMsg(object: _67.GroupMemberAminoMsg): _67.GroupMember;
                toAminoMsg(message: _67.GroupMember): _67.GroupMemberAminoMsg;
                fromProtoMsg(message: _67.GroupMemberProtoMsg): _67.GroupMember;
                toProto(message: _67.GroupMember): Uint8Array;
                toProtoMsg(message: _67.GroupMember): _67.GroupMemberProtoMsg;
            };
            GroupPolicyInfo: {
                typeUrl: string;
                aminoType: string;
                encode(message: _67.GroupPolicyInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.GroupPolicyInfo;
                fromPartial(object: {
                    address?: string;
                    groupId?: bigint;
                    admin?: string;
                    metadata?: string;
                    version?: bigint;
                    decisionPolicy?: {
                        $typeUrl?: string;
                        typeUrl?: string;
                        value?: Uint8Array;
                    } | {
                        $typeUrl?: "/cosmos.group.v1.ThresholdDecisionPolicy";
                        threshold?: string;
                        windows?: {
                            votingPeriod?: {
                                seconds?: bigint;
                                nanos?: number;
                            };
                            minExecutionPeriod?: {
                                seconds?: bigint;
                                nanos?: number;
                            };
                        };
                    } | {
                        $typeUrl?: "/cosmos.group.v1.PercentageDecisionPolicy";
                        percentage?: string;
                        windows?: {
                            votingPeriod?: {
                                seconds?: bigint;
                                nanos?: number;
                            };
                            minExecutionPeriod?: {
                                seconds?: bigint;
                                nanos?: number;
                            };
                        };
                    };
                    createdAt?: Date;
                }): _67.GroupPolicyInfo;
                fromAmino(object: _67.GroupPolicyInfoAmino): _67.GroupPolicyInfo;
                toAmino(message: _67.GroupPolicyInfo): _67.GroupPolicyInfoAmino;
                fromAminoMsg(object: _67.GroupPolicyInfoAminoMsg): _67.GroupPolicyInfo;
                toAminoMsg(message: _67.GroupPolicyInfo): _67.GroupPolicyInfoAminoMsg;
                fromProtoMsg(message: _67.GroupPolicyInfoProtoMsg): _67.GroupPolicyInfo;
                toProto(message: _67.GroupPolicyInfo): Uint8Array;
                toProtoMsg(message: _67.GroupPolicyInfo): _67.GroupPolicyInfoProtoMsg;
            };
            Proposal: {
                typeUrl: string;
                aminoType: string;
                encode(message: _67.Proposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.Proposal;
                fromPartial(object: {
                    id?: bigint;
                    groupPolicyAddress?: string;
                    metadata?: string;
                    proposers?: string[];
                    submitTime?: Date;
                    groupVersion?: bigint;
                    groupPolicyVersion?: bigint;
                    status?: _67.ProposalStatus;
                    finalTallyResult?: {
                        yesCount?: string;
                        abstainCount?: string;
                        noCount?: string;
                        noWithVetoCount?: string;
                    };
                    votingPeriodEnd?: Date;
                    executorResult?: _67.ProposalExecutorResult;
                    messages?: {
                        $typeUrl?: string;
                        typeUrl?: string;
                        value?: Uint8Array;
                    }[];
                    title?: string;
                    summary?: string;
                }): _67.Proposal;
                fromAmino(object: _67.ProposalAmino): _67.Proposal;
                toAmino(message: _67.Proposal): _67.ProposalAmino;
                fromAminoMsg(object: _67.ProposalAminoMsg): _67.Proposal;
                toAminoMsg(message: _67.Proposal): _67.ProposalAminoMsg;
                fromProtoMsg(message: _67.ProposalProtoMsg): _67.Proposal;
                toProto(message: _67.Proposal): Uint8Array;
                toProtoMsg(message: _67.Proposal): _67.ProposalProtoMsg;
            };
            TallyResult: {
                typeUrl: string;
                aminoType: string;
                encode(message: _67.TallyResult, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.TallyResult;
                fromPartial(object: {
                    yesCount?: string;
                    abstainCount?: string;
                    noCount?: string;
                    noWithVetoCount?: string;
                }): _67.TallyResult;
                fromAmino(object: _67.TallyResultAmino): _67.TallyResult;
                toAmino(message: _67.TallyResult): _67.TallyResultAmino;
                fromAminoMsg(object: _67.TallyResultAminoMsg): _67.TallyResult;
                toAminoMsg(message: _67.TallyResult): _67.TallyResultAminoMsg;
                fromProtoMsg(message: _67.TallyResultProtoMsg): _67.TallyResult;
                toProto(message: _67.TallyResult): Uint8Array;
                toProtoMsg(message: _67.TallyResult): _67.TallyResultProtoMsg;
            };
            Vote: {
                typeUrl: string;
                aminoType: string;
                encode(message: _67.Vote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _67.Vote;
                fromPartial(object: {
                    proposalId?: bigint;
                    voter?: string;
                    option?: _67.VoteOption;
                    metadata?: string;
                    submitTime?: Date;
                }): _67.Vote;
                fromAmino(object: _67.VoteAmino): _67.Vote;
                toAmino(message: _67.Vote): _67.VoteAmino;
                fromAminoMsg(object: _67.VoteAminoMsg): _67.Vote;
                toAminoMsg(message: _67.Vote): _67.VoteAminoMsg;
                fromProtoMsg(message: _67.VoteProtoMsg): _67.Vote;
                toProto(message: _67.Vote): Uint8Array;
                toProtoMsg(message: _67.Vote): _67.VoteProtoMsg;
            };
            Cosmos_groupv1DecisionPolicy_InterfaceDecoder: (input: Uint8Array | import("..").BinaryReader) => import("../google/protobuf/any").Any | _67.ThresholdDecisionPolicy | _67.PercentageDecisionPolicy;
            Cosmos_groupv1DecisionPolicy_FromAmino: (content: import("../google/protobuf/any").AnyAmino) => import("../google/protobuf/any").Any;
            Cosmos_groupv1DecisionPolicy_ToAmino: (content: import("../google/protobuf/any").Any) => import("../google/protobuf/any").AnyAmino;
            execFromJSON(object: any): _66.Exec;
            execToJSON(object: _66.Exec): string;
            Exec: typeof _66.Exec;
            ExecSDKType: typeof _66.Exec;
            ExecAmino: typeof _66.Exec;
            MsgCreateGroup: {
                typeUrl: string;
                aminoType: string;
                encode(message: _66.MsgCreateGroup, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.MsgCreateGroup;
                fromPartial(object: {
                    admin?: string;
                    members?: {
                        address?: string;
                        weight?: string;
                        metadata?: string;
                    }[];
                    metadata?: string;
                }): _66.MsgCreateGroup;
                fromAmino(object: _66.MsgCreateGroupAmino): _66.MsgCreateGroup;
                toAmino(message: _66.MsgCreateGroup): _66.MsgCreateGroupAmino;
                fromAminoMsg(object: _66.MsgCreateGroupAminoMsg): _66.MsgCreateGroup;
                toAminoMsg(message: _66.MsgCreateGroup): _66.MsgCreateGroupAminoMsg;
                fromProtoMsg(message: _66.MsgCreateGroupProtoMsg): _66.MsgCreateGroup;
                toProto(message: _66.MsgCreateGroup): Uint8Array;
                toProtoMsg(message: _66.MsgCreateGroup): _66.MsgCreateGroupProtoMsg;
            };
            MsgCreateGroupResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _66.MsgCreateGroupResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.MsgCreateGroupResponse;
                fromPartial(object: {
                    groupId?: bigint;
                }): _66.MsgCreateGroupResponse;
                fromAmino(object: _66.MsgCreateGroupResponseAmino): _66.MsgCreateGroupResponse;
                toAmino(message: _66.MsgCreateGroupResponse): _66.MsgCreateGroupResponseAmino;
                fromAminoMsg(object: _66.MsgCreateGroupResponseAminoMsg): _66.MsgCreateGroupResponse;
                toAminoMsg(message: _66.MsgCreateGroupResponse): _66.MsgCreateGroupResponseAminoMsg;
                fromProtoMsg(message: _66.MsgCreateGroupResponseProtoMsg): _66.MsgCreateGroupResponse;
                toProto(message: _66.MsgCreateGroupResponse): Uint8Array;
                toProtoMsg(message: _66.MsgCreateGroupResponse): _66.MsgCreateGroupResponseProtoMsg;
            };
            MsgUpdateGroupMembers: {
                typeUrl: string;
                aminoType: string;
                encode(message: _66.MsgUpdateGroupMembers, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.MsgUpdateGroupMembers;
                fromPartial(object: {
                    admin?: string;
                    groupId?: bigint;
                    memberUpdates?: {
                        address?: string;
                        weight?: string;
                        metadata?: string;
                    }[];
                }): _66.MsgUpdateGroupMembers;
                fromAmino(object: _66.MsgUpdateGroupMembersAmino): _66.MsgUpdateGroupMembers;
                toAmino(message: _66.MsgUpdateGroupMembers): _66.MsgUpdateGroupMembersAmino;
                fromAminoMsg(object: _66.MsgUpdateGroupMembersAminoMsg): _66.MsgUpdateGroupMembers;
                toAminoMsg(message: _66.MsgUpdateGroupMembers): _66.MsgUpdateGroupMembersAminoMsg;
                fromProtoMsg(message: _66.MsgUpdateGroupMembersProtoMsg): _66.MsgUpdateGroupMembers;
                toProto(message: _66.MsgUpdateGroupMembers): Uint8Array;
                toProtoMsg(message: _66.MsgUpdateGroupMembers): _66.MsgUpdateGroupMembersProtoMsg;
            };
            MsgUpdateGroupMembersResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _66.MsgUpdateGroupMembersResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.MsgUpdateGroupMembersResponse;
                fromPartial(_: {}): _66.MsgUpdateGroupMembersResponse;
                fromAmino(_: _66.MsgUpdateGroupMembersResponseAmino): _66.MsgUpdateGroupMembersResponse;
                toAmino(_: _66.MsgUpdateGroupMembersResponse): _66.MsgUpdateGroupMembersResponseAmino;
                fromAminoMsg(object: _66.MsgUpdateGroupMembersResponseAminoMsg): _66.MsgUpdateGroupMembersResponse;
                toAminoMsg(message: _66.MsgUpdateGroupMembersResponse): _66.MsgUpdateGroupMembersResponseAminoMsg;
                fromProtoMsg(message: _66.MsgUpdateGroupMembersResponseProtoMsg): _66.MsgUpdateGroupMembersResponse;
                toProto(message: _66.MsgUpdateGroupMembersResponse): Uint8Array;
                toProtoMsg(message: _66.MsgUpdateGroupMembersResponse): _66.MsgUpdateGroupMembersResponseProtoMsg;
            };
            MsgUpdateGroupAdmin: {
                typeUrl: string;
                aminoType: string;
                encode(message: _66.MsgUpdateGroupAdmin, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.MsgUpdateGroupAdmin;
                fromPartial(object: {
                    admin?: string;
                    groupId?: bigint;
                    newAdmin?: string;
                }): _66.MsgUpdateGroupAdmin;
                fromAmino(object: _66.MsgUpdateGroupAdminAmino): _66.MsgUpdateGroupAdmin;
                toAmino(message: _66.MsgUpdateGroupAdmin): _66.MsgUpdateGroupAdminAmino;
                fromAminoMsg(object: _66.MsgUpdateGroupAdminAminoMsg): _66.MsgUpdateGroupAdmin;
                toAminoMsg(message: _66.MsgUpdateGroupAdmin): _66.MsgUpdateGroupAdminAminoMsg;
                fromProtoMsg(message: _66.MsgUpdateGroupAdminProtoMsg): _66.MsgUpdateGroupAdmin;
                toProto(message: _66.MsgUpdateGroupAdmin): Uint8Array;
                toProtoMsg(message: _66.MsgUpdateGroupAdmin): _66.MsgUpdateGroupAdminProtoMsg;
            };
            MsgUpdateGroupAdminResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _66.MsgUpdateGroupAdminResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.MsgUpdateGroupAdminResponse;
                fromPartial(_: {}): _66.MsgUpdateGroupAdminResponse;
                fromAmino(_: _66.MsgUpdateGroupAdminResponseAmino): _66.MsgUpdateGroupAdminResponse;
                toAmino(_: _66.MsgUpdateGroupAdminResponse): _66.MsgUpdateGroupAdminResponseAmino;
                fromAminoMsg(object: _66.MsgUpdateGroupAdminResponseAminoMsg): _66.MsgUpdateGroupAdminResponse;
                toAminoMsg(message: _66.MsgUpdateGroupAdminResponse): _66.MsgUpdateGroupAdminResponseAminoMsg;
                fromProtoMsg(message: _66.MsgUpdateGroupAdminResponseProtoMsg): _66.MsgUpdateGroupAdminResponse;
                toProto(message: _66.MsgUpdateGroupAdminResponse): Uint8Array;
                toProtoMsg(message: _66.MsgUpdateGroupAdminResponse): _66.MsgUpdateGroupAdminResponseProtoMsg;
            };
            MsgUpdateGroupMetadata: {
                typeUrl: string;
                aminoType: string;
                encode(message: _66.MsgUpdateGroupMetadata, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.MsgUpdateGroupMetadata;
                fromPartial(object: {
                    admin?: string;
                    groupId?: bigint;
                    metadata?: string;
                }): _66.MsgUpdateGroupMetadata;
                fromAmino(object: _66.MsgUpdateGroupMetadataAmino): _66.MsgUpdateGroupMetadata;
                toAmino(message: _66.MsgUpdateGroupMetadata): _66.MsgUpdateGroupMetadataAmino;
                fromAminoMsg(object: _66.MsgUpdateGroupMetadataAminoMsg): _66.MsgUpdateGroupMetadata;
                toAminoMsg(message: _66.MsgUpdateGroupMetadata): _66.MsgUpdateGroupMetadataAminoMsg;
                fromProtoMsg(message: _66.MsgUpdateGroupMetadataProtoMsg): _66.MsgUpdateGroupMetadata;
                toProto(message: _66.MsgUpdateGroupMetadata): Uint8Array;
                toProtoMsg(message: _66.MsgUpdateGroupMetadata): _66.MsgUpdateGroupMetadataProtoMsg;
            };
            MsgUpdateGroupMetadataResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _66.MsgUpdateGroupMetadataResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.MsgUpdateGroupMetadataResponse;
                fromPartial(_: {}): _66.MsgUpdateGroupMetadataResponse;
                fromAmino(_: _66.MsgUpdateGroupMetadataResponseAmino): _66.MsgUpdateGroupMetadataResponse;
                toAmino(_: _66.MsgUpdateGroupMetadataResponse): _66.MsgUpdateGroupMetadataResponseAmino;
                fromAminoMsg(object: _66.MsgUpdateGroupMetadataResponseAminoMsg): _66.MsgUpdateGroupMetadataResponse;
                toAminoMsg(message: _66.MsgUpdateGroupMetadataResponse): _66.MsgUpdateGroupMetadataResponseAminoMsg;
                fromProtoMsg(message: _66.MsgUpdateGroupMetadataResponseProtoMsg): _66.MsgUpdateGroupMetadataResponse;
                toProto(message: _66.MsgUpdateGroupMetadataResponse): Uint8Array;
                toProtoMsg(message: _66.MsgUpdateGroupMetadataResponse): _66.MsgUpdateGroupMetadataResponseProtoMsg;
            };
            MsgCreateGroupPolicy: {
                typeUrl: string;
                aminoType: string;
                encode(message: _66.MsgCreateGroupPolicy, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.MsgCreateGroupPolicy;
                fromPartial(object: {
                    admin?: string;
                    groupId?: bigint;
                    metadata?: string;
                    decisionPolicy?: {
                        $typeUrl?: string;
                        typeUrl?: string;
                        value?: Uint8Array;
                    } | {
                        $typeUrl?: "/cosmos.group.v1.ThresholdDecisionPolicy";
                        threshold?: string;
                        windows?: {
                            votingPeriod?: {
                                seconds?: bigint;
                                nanos?: number;
                            };
                            minExecutionPeriod?: {
                                seconds?: bigint;
                                nanos?: number;
                            };
                        };
                    } | {
                        $typeUrl?: "/cosmos.group.v1.PercentageDecisionPolicy";
                        percentage?: string;
                        windows?: {
                            votingPeriod?: {
                                seconds?: bigint;
                                nanos?: number;
                            };
                            minExecutionPeriod?: {
                                seconds?: bigint;
                                nanos?: number;
                            };
                        };
                    };
                }): _66.MsgCreateGroupPolicy;
                fromAmino(object: _66.MsgCreateGroupPolicyAmino): _66.MsgCreateGroupPolicy;
                toAmino(message: _66.MsgCreateGroupPolicy): _66.MsgCreateGroupPolicyAmino;
                fromAminoMsg(object: _66.MsgCreateGroupPolicyAminoMsg): _66.MsgCreateGroupPolicy;
                toAminoMsg(message: _66.MsgCreateGroupPolicy): _66.MsgCreateGroupPolicyAminoMsg;
                fromProtoMsg(message: _66.MsgCreateGroupPolicyProtoMsg): _66.MsgCreateGroupPolicy;
                toProto(message: _66.MsgCreateGroupPolicy): Uint8Array;
                toProtoMsg(message: _66.MsgCreateGroupPolicy): _66.MsgCreateGroupPolicyProtoMsg;
            };
            MsgCreateGroupPolicyResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _66.MsgCreateGroupPolicyResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.MsgCreateGroupPolicyResponse;
                fromPartial(object: {
                    address?: string;
                }): _66.MsgCreateGroupPolicyResponse;
                fromAmino(object: _66.MsgCreateGroupPolicyResponseAmino): _66.MsgCreateGroupPolicyResponse;
                toAmino(message: _66.MsgCreateGroupPolicyResponse): _66.MsgCreateGroupPolicyResponseAmino;
                fromAminoMsg(object: _66.MsgCreateGroupPolicyResponseAminoMsg): _66.MsgCreateGroupPolicyResponse;
                toAminoMsg(message: _66.MsgCreateGroupPolicyResponse): _66.MsgCreateGroupPolicyResponseAminoMsg;
                fromProtoMsg(message: _66.MsgCreateGroupPolicyResponseProtoMsg): _66.MsgCreateGroupPolicyResponse;
                toProto(message: _66.MsgCreateGroupPolicyResponse): Uint8Array;
                toProtoMsg(message: _66.MsgCreateGroupPolicyResponse): _66.MsgCreateGroupPolicyResponseProtoMsg;
            };
            MsgUpdateGroupPolicyAdmin: {
                typeUrl: string;
                aminoType: string;
                encode(message: _66.MsgUpdateGroupPolicyAdmin, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.MsgUpdateGroupPolicyAdmin;
                fromPartial(object: {
                    admin?: string;
                    groupPolicyAddress?: string;
                    newAdmin?: string;
                }): _66.MsgUpdateGroupPolicyAdmin;
                fromAmino(object: _66.MsgUpdateGroupPolicyAdminAmino): _66.MsgUpdateGroupPolicyAdmin;
                toAmino(message: _66.MsgUpdateGroupPolicyAdmin): _66.MsgUpdateGroupPolicyAdminAmino;
                fromAminoMsg(object: _66.MsgUpdateGroupPolicyAdminAminoMsg): _66.MsgUpdateGroupPolicyAdmin;
                toAminoMsg(message: _66.MsgUpdateGroupPolicyAdmin): _66.MsgUpdateGroupPolicyAdminAminoMsg;
                fromProtoMsg(message: _66.MsgUpdateGroupPolicyAdminProtoMsg): _66.MsgUpdateGroupPolicyAdmin;
                toProto(message: _66.MsgUpdateGroupPolicyAdmin): Uint8Array;
                toProtoMsg(message: _66.MsgUpdateGroupPolicyAdmin): _66.MsgUpdateGroupPolicyAdminProtoMsg;
            };
            MsgUpdateGroupPolicyAdminResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _66.MsgUpdateGroupPolicyAdminResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.MsgUpdateGroupPolicyAdminResponse;
                fromPartial(_: {}): _66.MsgUpdateGroupPolicyAdminResponse;
                fromAmino(_: _66.MsgUpdateGroupPolicyAdminResponseAmino): _66.MsgUpdateGroupPolicyAdminResponse;
                toAmino(_: _66.MsgUpdateGroupPolicyAdminResponse): _66.MsgUpdateGroupPolicyAdminResponseAmino;
                fromAminoMsg(object: _66.MsgUpdateGroupPolicyAdminResponseAminoMsg): _66.MsgUpdateGroupPolicyAdminResponse;
                toAminoMsg(message: _66.MsgUpdateGroupPolicyAdminResponse): _66.MsgUpdateGroupPolicyAdminResponseAminoMsg;
                fromProtoMsg(message: _66.MsgUpdateGroupPolicyAdminResponseProtoMsg): _66.MsgUpdateGroupPolicyAdminResponse;
                toProto(message: _66.MsgUpdateGroupPolicyAdminResponse): Uint8Array;
                toProtoMsg(message: _66.MsgUpdateGroupPolicyAdminResponse): _66.MsgUpdateGroupPolicyAdminResponseProtoMsg;
            };
            MsgCreateGroupWithPolicy: {
                typeUrl: string;
                aminoType: string;
                encode(message: _66.MsgCreateGroupWithPolicy, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.MsgCreateGroupWithPolicy;
                fromPartial(object: {
                    admin?: string;
                    members?: {
                        address?: string;
                        weight?: string;
                        metadata?: string;
                    }[];
                    groupMetadata?: string;
                    groupPolicyMetadata?: string;
                    groupPolicyAsAdmin?: boolean;
                    decisionPolicy?: {
                        $typeUrl?: string;
                        typeUrl?: string;
                        value?: Uint8Array;
                    } | {
                        $typeUrl?: "/cosmos.group.v1.ThresholdDecisionPolicy";
                        threshold?: string;
                        windows?: {
                            votingPeriod?: {
                                seconds?: bigint;
                                nanos?: number;
                            };
                            minExecutionPeriod?: {
                                seconds?: bigint;
                                nanos?: number;
                            };
                        };
                    } | {
                        $typeUrl?: "/cosmos.group.v1.PercentageDecisionPolicy";
                        percentage?: string;
                        windows?: {
                            votingPeriod?: {
                                seconds?: bigint;
                                nanos?: number;
                            };
                            minExecutionPeriod?: {
                                seconds?: bigint;
                                nanos?: number;
                            };
                        };
                    };
                }): _66.MsgCreateGroupWithPolicy;
                fromAmino(object: _66.MsgCreateGroupWithPolicyAmino): _66.MsgCreateGroupWithPolicy;
                toAmino(message: _66.MsgCreateGroupWithPolicy): _66.MsgCreateGroupWithPolicyAmino;
                fromAminoMsg(object: _66.MsgCreateGroupWithPolicyAminoMsg): _66.MsgCreateGroupWithPolicy;
                toAminoMsg(message: _66.MsgCreateGroupWithPolicy): _66.MsgCreateGroupWithPolicyAminoMsg;
                fromProtoMsg(message: _66.MsgCreateGroupWithPolicyProtoMsg): _66.MsgCreateGroupWithPolicy;
                toProto(message: _66.MsgCreateGroupWithPolicy): Uint8Array;
                toProtoMsg(message: _66.MsgCreateGroupWithPolicy): _66.MsgCreateGroupWithPolicyProtoMsg;
            };
            MsgCreateGroupWithPolicyResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _66.MsgCreateGroupWithPolicyResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.MsgCreateGroupWithPolicyResponse;
                fromPartial(object: {
                    groupId?: bigint;
                    groupPolicyAddress?: string;
                }): _66.MsgCreateGroupWithPolicyResponse;
                fromAmino(object: _66.MsgCreateGroupWithPolicyResponseAmino): _66.MsgCreateGroupWithPolicyResponse;
                toAmino(message: _66.MsgCreateGroupWithPolicyResponse): _66.MsgCreateGroupWithPolicyResponseAmino;
                fromAminoMsg(object: _66.MsgCreateGroupWithPolicyResponseAminoMsg): _66.MsgCreateGroupWithPolicyResponse;
                toAminoMsg(message: _66.MsgCreateGroupWithPolicyResponse): _66.MsgCreateGroupWithPolicyResponseAminoMsg;
                fromProtoMsg(message: _66.MsgCreateGroupWithPolicyResponseProtoMsg): _66.MsgCreateGroupWithPolicyResponse;
                toProto(message: _66.MsgCreateGroupWithPolicyResponse): Uint8Array;
                toProtoMsg(message: _66.MsgCreateGroupWithPolicyResponse): _66.MsgCreateGroupWithPolicyResponseProtoMsg;
            };
            MsgUpdateGroupPolicyDecisionPolicy: {
                typeUrl: string;
                aminoType: string;
                encode(message: _66.MsgUpdateGroupPolicyDecisionPolicy, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.MsgUpdateGroupPolicyDecisionPolicy;
                fromPartial(object: {
                    admin?: string;
                    groupPolicyAddress?: string;
                    decisionPolicy?: {
                        $typeUrl?: string;
                        typeUrl?: string;
                        value?: Uint8Array;
                    } | {
                        $typeUrl?: "/cosmos.group.v1.ThresholdDecisionPolicy";
                        threshold?: string;
                        windows?: {
                            votingPeriod?: {
                                seconds?: bigint;
                                nanos?: number;
                            };
                            minExecutionPeriod?: {
                                seconds?: bigint;
                                nanos?: number;
                            };
                        };
                    } | {
                        $typeUrl?: "/cosmos.group.v1.PercentageDecisionPolicy";
                        percentage?: string;
                        windows?: {
                            votingPeriod?: {
                                seconds?: bigint;
                                nanos?: number;
                            };
                            minExecutionPeriod?: {
                                seconds?: bigint;
                                nanos?: number;
                            };
                        };
                    };
                }): _66.MsgUpdateGroupPolicyDecisionPolicy;
                fromAmino(object: _66.MsgUpdateGroupPolicyDecisionPolicyAmino): _66.MsgUpdateGroupPolicyDecisionPolicy;
                toAmino(message: _66.MsgUpdateGroupPolicyDecisionPolicy): _66.MsgUpdateGroupPolicyDecisionPolicyAmino;
                fromAminoMsg(object: _66.MsgUpdateGroupPolicyDecisionPolicyAminoMsg): _66.MsgUpdateGroupPolicyDecisionPolicy;
                toAminoMsg(message: _66.MsgUpdateGroupPolicyDecisionPolicy): _66.MsgUpdateGroupPolicyDecisionPolicyAminoMsg;
                fromProtoMsg(message: _66.MsgUpdateGroupPolicyDecisionPolicyProtoMsg): _66.MsgUpdateGroupPolicyDecisionPolicy;
                toProto(message: _66.MsgUpdateGroupPolicyDecisionPolicy): Uint8Array;
                toProtoMsg(message: _66.MsgUpdateGroupPolicyDecisionPolicy): _66.MsgUpdateGroupPolicyDecisionPolicyProtoMsg;
            };
            MsgUpdateGroupPolicyDecisionPolicyResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _66.MsgUpdateGroupPolicyDecisionPolicyResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.MsgUpdateGroupPolicyDecisionPolicyResponse;
                fromPartial(_: {}): _66.MsgUpdateGroupPolicyDecisionPolicyResponse;
                fromAmino(_: _66.MsgUpdateGroupPolicyDecisionPolicyResponseAmino): _66.MsgUpdateGroupPolicyDecisionPolicyResponse;
                toAmino(_: _66.MsgUpdateGroupPolicyDecisionPolicyResponse): _66.MsgUpdateGroupPolicyDecisionPolicyResponseAmino;
                fromAminoMsg(object: _66.MsgUpdateGroupPolicyDecisionPolicyResponseAminoMsg): _66.MsgUpdateGroupPolicyDecisionPolicyResponse;
                toAminoMsg(message: _66.MsgUpdateGroupPolicyDecisionPolicyResponse): _66.MsgUpdateGroupPolicyDecisionPolicyResponseAminoMsg;
                fromProtoMsg(message: _66.MsgUpdateGroupPolicyDecisionPolicyResponseProtoMsg): _66.MsgUpdateGroupPolicyDecisionPolicyResponse;
                toProto(message: _66.MsgUpdateGroupPolicyDecisionPolicyResponse): Uint8Array;
                toProtoMsg(message: _66.MsgUpdateGroupPolicyDecisionPolicyResponse): _66.MsgUpdateGroupPolicyDecisionPolicyResponseProtoMsg;
            };
            MsgUpdateGroupPolicyMetadata: {
                typeUrl: string;
                aminoType: string;
                encode(message: _66.MsgUpdateGroupPolicyMetadata, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.MsgUpdateGroupPolicyMetadata;
                fromPartial(object: {
                    admin?: string;
                    groupPolicyAddress?: string;
                    metadata?: string;
                }): _66.MsgUpdateGroupPolicyMetadata;
                fromAmino(object: _66.MsgUpdateGroupPolicyMetadataAmino): _66.MsgUpdateGroupPolicyMetadata;
                toAmino(message: _66.MsgUpdateGroupPolicyMetadata): _66.MsgUpdateGroupPolicyMetadataAmino;
                fromAminoMsg(object: _66.MsgUpdateGroupPolicyMetadataAminoMsg): _66.MsgUpdateGroupPolicyMetadata;
                toAminoMsg(message: _66.MsgUpdateGroupPolicyMetadata): _66.MsgUpdateGroupPolicyMetadataAminoMsg;
                fromProtoMsg(message: _66.MsgUpdateGroupPolicyMetadataProtoMsg): _66.MsgUpdateGroupPolicyMetadata;
                toProto(message: _66.MsgUpdateGroupPolicyMetadata): Uint8Array;
                toProtoMsg(message: _66.MsgUpdateGroupPolicyMetadata): _66.MsgUpdateGroupPolicyMetadataProtoMsg;
            };
            MsgUpdateGroupPolicyMetadataResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _66.MsgUpdateGroupPolicyMetadataResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.MsgUpdateGroupPolicyMetadataResponse;
                fromPartial(_: {}): _66.MsgUpdateGroupPolicyMetadataResponse;
                fromAmino(_: _66.MsgUpdateGroupPolicyMetadataResponseAmino): _66.MsgUpdateGroupPolicyMetadataResponse;
                toAmino(_: _66.MsgUpdateGroupPolicyMetadataResponse): _66.MsgUpdateGroupPolicyMetadataResponseAmino;
                fromAminoMsg(object: _66.MsgUpdateGroupPolicyMetadataResponseAminoMsg): _66.MsgUpdateGroupPolicyMetadataResponse;
                toAminoMsg(message: _66.MsgUpdateGroupPolicyMetadataResponse): _66.MsgUpdateGroupPolicyMetadataResponseAminoMsg;
                fromProtoMsg(message: _66.MsgUpdateGroupPolicyMetadataResponseProtoMsg): _66.MsgUpdateGroupPolicyMetadataResponse;
                toProto(message: _66.MsgUpdateGroupPolicyMetadataResponse): Uint8Array;
                toProtoMsg(message: _66.MsgUpdateGroupPolicyMetadataResponse): _66.MsgUpdateGroupPolicyMetadataResponseProtoMsg;
            };
            MsgSubmitProposal: {
                typeUrl: string;
                aminoType: string;
                encode(message: _66.MsgSubmitProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.MsgSubmitProposal;
                fromPartial(object: {
                    groupPolicyAddress?: string;
                    proposers?: string[];
                    metadata?: string;
                    messages?: {
                        $typeUrl?: string;
                        typeUrl?: string;
                        value?: Uint8Array;
                    }[];
                    exec?: _66.Exec;
                    title?: string;
                    summary?: string;
                }): _66.MsgSubmitProposal;
                fromAmino(object: _66.MsgSubmitProposalAmino): _66.MsgSubmitProposal;
                toAmino(message: _66.MsgSubmitProposal): _66.MsgSubmitProposalAmino;
                fromAminoMsg(object: _66.MsgSubmitProposalAminoMsg): _66.MsgSubmitProposal;
                toAminoMsg(message: _66.MsgSubmitProposal): _66.MsgSubmitProposalAminoMsg;
                fromProtoMsg(message: _66.MsgSubmitProposalProtoMsg): _66.MsgSubmitProposal;
                toProto(message: _66.MsgSubmitProposal): Uint8Array;
                toProtoMsg(message: _66.MsgSubmitProposal): _66.MsgSubmitProposalProtoMsg;
            };
            MsgSubmitProposalResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _66.MsgSubmitProposalResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.MsgSubmitProposalResponse;
                fromPartial(object: {
                    proposalId?: bigint;
                }): _66.MsgSubmitProposalResponse;
                fromAmino(object: _66.MsgSubmitProposalResponseAmino): _66.MsgSubmitProposalResponse;
                toAmino(message: _66.MsgSubmitProposalResponse): _66.MsgSubmitProposalResponseAmino;
                fromAminoMsg(object: _66.MsgSubmitProposalResponseAminoMsg): _66.MsgSubmitProposalResponse;
                toAminoMsg(message: _66.MsgSubmitProposalResponse): _66.MsgSubmitProposalResponseAminoMsg;
                fromProtoMsg(message: _66.MsgSubmitProposalResponseProtoMsg): _66.MsgSubmitProposalResponse;
                toProto(message: _66.MsgSubmitProposalResponse): Uint8Array;
                toProtoMsg(message: _66.MsgSubmitProposalResponse): _66.MsgSubmitProposalResponseProtoMsg;
            };
            MsgWithdrawProposal: {
                typeUrl: string;
                aminoType: string;
                encode(message: _66.MsgWithdrawProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.MsgWithdrawProposal;
                fromPartial(object: {
                    proposalId?: bigint;
                    address?: string;
                }): _66.MsgWithdrawProposal;
                fromAmino(object: _66.MsgWithdrawProposalAmino): _66.MsgWithdrawProposal;
                toAmino(message: _66.MsgWithdrawProposal): _66.MsgWithdrawProposalAmino;
                fromAminoMsg(object: _66.MsgWithdrawProposalAminoMsg): _66.MsgWithdrawProposal;
                toAminoMsg(message: _66.MsgWithdrawProposal): _66.MsgWithdrawProposalAminoMsg;
                fromProtoMsg(message: _66.MsgWithdrawProposalProtoMsg): _66.MsgWithdrawProposal;
                toProto(message: _66.MsgWithdrawProposal): Uint8Array;
                toProtoMsg(message: _66.MsgWithdrawProposal): _66.MsgWithdrawProposalProtoMsg;
            };
            MsgWithdrawProposalResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _66.MsgWithdrawProposalResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.MsgWithdrawProposalResponse;
                fromPartial(_: {}): _66.MsgWithdrawProposalResponse;
                fromAmino(_: _66.MsgWithdrawProposalResponseAmino): _66.MsgWithdrawProposalResponse;
                toAmino(_: _66.MsgWithdrawProposalResponse): _66.MsgWithdrawProposalResponseAmino;
                fromAminoMsg(object: _66.MsgWithdrawProposalResponseAminoMsg): _66.MsgWithdrawProposalResponse;
                toAminoMsg(message: _66.MsgWithdrawProposalResponse): _66.MsgWithdrawProposalResponseAminoMsg;
                fromProtoMsg(message: _66.MsgWithdrawProposalResponseProtoMsg): _66.MsgWithdrawProposalResponse;
                toProto(message: _66.MsgWithdrawProposalResponse): Uint8Array;
                toProtoMsg(message: _66.MsgWithdrawProposalResponse): _66.MsgWithdrawProposalResponseProtoMsg;
            };
            MsgVote: {
                typeUrl: string;
                aminoType: string;
                encode(message: _66.MsgVote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.MsgVote;
                fromPartial(object: {
                    proposalId?: bigint;
                    voter?: string;
                    option?: _67.VoteOption;
                    metadata?: string;
                    exec?: _66.Exec;
                }): _66.MsgVote;
                fromAmino(object: _66.MsgVoteAmino): _66.MsgVote;
                toAmino(message: _66.MsgVote): _66.MsgVoteAmino;
                fromAminoMsg(object: _66.MsgVoteAminoMsg): _66.MsgVote;
                toAminoMsg(message: _66.MsgVote): _66.MsgVoteAminoMsg;
                fromProtoMsg(message: _66.MsgVoteProtoMsg): _66.MsgVote;
                toProto(message: _66.MsgVote): Uint8Array;
                toProtoMsg(message: _66.MsgVote): _66.MsgVoteProtoMsg;
            };
            MsgVoteResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _66.MsgVoteResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.MsgVoteResponse;
                fromPartial(_: {}): _66.MsgVoteResponse;
                fromAmino(_: _66.MsgVoteResponseAmino): _66.MsgVoteResponse;
                toAmino(_: _66.MsgVoteResponse): _66.MsgVoteResponseAmino;
                fromAminoMsg(object: _66.MsgVoteResponseAminoMsg): _66.MsgVoteResponse;
                toAminoMsg(message: _66.MsgVoteResponse): _66.MsgVoteResponseAminoMsg;
                fromProtoMsg(message: _66.MsgVoteResponseProtoMsg): _66.MsgVoteResponse;
                toProto(message: _66.MsgVoteResponse): Uint8Array;
                toProtoMsg(message: _66.MsgVoteResponse): _66.MsgVoteResponseProtoMsg;
            };
            MsgExec: {
                typeUrl: string;
                aminoType: string;
                encode(message: _66.MsgExec, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.MsgExec;
                fromPartial(object: {
                    proposalId?: bigint;
                    executor?: string;
                }): _66.MsgExec;
                fromAmino(object: _66.MsgExecAmino): _66.MsgExec;
                toAmino(message: _66.MsgExec): _66.MsgExecAmino;
                fromAminoMsg(object: _66.MsgExecAminoMsg): _66.MsgExec;
                toAminoMsg(message: _66.MsgExec): _66.MsgExecAminoMsg;
                fromProtoMsg(message: _66.MsgExecProtoMsg): _66.MsgExec;
                toProto(message: _66.MsgExec): Uint8Array;
                toProtoMsg(message: _66.MsgExec): _66.MsgExecProtoMsg;
            };
            MsgExecResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _66.MsgExecResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.MsgExecResponse;
                fromPartial(object: {
                    result?: _67.ProposalExecutorResult;
                }): _66.MsgExecResponse;
                fromAmino(object: _66.MsgExecResponseAmino): _66.MsgExecResponse;
                toAmino(message: _66.MsgExecResponse): _66.MsgExecResponseAmino;
                fromAminoMsg(object: _66.MsgExecResponseAminoMsg): _66.MsgExecResponse;
                toAminoMsg(message: _66.MsgExecResponse): _66.MsgExecResponseAminoMsg;
                fromProtoMsg(message: _66.MsgExecResponseProtoMsg): _66.MsgExecResponse;
                toProto(message: _66.MsgExecResponse): Uint8Array;
                toProtoMsg(message: _66.MsgExecResponse): _66.MsgExecResponseProtoMsg;
            };
            MsgLeaveGroup: {
                typeUrl: string;
                aminoType: string;
                encode(message: _66.MsgLeaveGroup, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.MsgLeaveGroup;
                fromPartial(object: {
                    address?: string;
                    groupId?: bigint;
                }): _66.MsgLeaveGroup;
                fromAmino(object: _66.MsgLeaveGroupAmino): _66.MsgLeaveGroup;
                toAmino(message: _66.MsgLeaveGroup): _66.MsgLeaveGroupAmino;
                fromAminoMsg(object: _66.MsgLeaveGroupAminoMsg): _66.MsgLeaveGroup;
                toAminoMsg(message: _66.MsgLeaveGroup): _66.MsgLeaveGroupAminoMsg;
                fromProtoMsg(message: _66.MsgLeaveGroupProtoMsg): _66.MsgLeaveGroup;
                toProto(message: _66.MsgLeaveGroup): Uint8Array;
                toProtoMsg(message: _66.MsgLeaveGroup): _66.MsgLeaveGroupProtoMsg;
            };
            MsgLeaveGroupResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _66.MsgLeaveGroupResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _66.MsgLeaveGroupResponse;
                fromPartial(_: {}): _66.MsgLeaveGroupResponse;
                fromAmino(_: _66.MsgLeaveGroupResponseAmino): _66.MsgLeaveGroupResponse;
                toAmino(_: _66.MsgLeaveGroupResponse): _66.MsgLeaveGroupResponseAmino;
                fromAminoMsg(object: _66.MsgLeaveGroupResponseAminoMsg): _66.MsgLeaveGroupResponse;
                toAminoMsg(message: _66.MsgLeaveGroupResponse): _66.MsgLeaveGroupResponseAminoMsg;
                fromProtoMsg(message: _66.MsgLeaveGroupResponseProtoMsg): _66.MsgLeaveGroupResponse;
                toProto(message: _66.MsgLeaveGroupResponse): Uint8Array;
                toProtoMsg(message: _66.MsgLeaveGroupResponse): _66.MsgLeaveGroupResponseProtoMsg;
            };
            QueryGroupInfoRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _65.QueryGroupInfoRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.QueryGroupInfoRequest;
                fromPartial(object: {
                    groupId?: bigint;
                }): _65.QueryGroupInfoRequest;
                fromAmino(object: _65.QueryGroupInfoRequestAmino): _65.QueryGroupInfoRequest;
                toAmino(message: _65.QueryGroupInfoRequest): _65.QueryGroupInfoRequestAmino;
                fromAminoMsg(object: _65.QueryGroupInfoRequestAminoMsg): _65.QueryGroupInfoRequest;
                toAminoMsg(message: _65.QueryGroupInfoRequest): _65.QueryGroupInfoRequestAminoMsg;
                fromProtoMsg(message: _65.QueryGroupInfoRequestProtoMsg): _65.QueryGroupInfoRequest;
                toProto(message: _65.QueryGroupInfoRequest): Uint8Array;
                toProtoMsg(message: _65.QueryGroupInfoRequest): _65.QueryGroupInfoRequestProtoMsg;
            };
            QueryGroupInfoResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _65.QueryGroupInfoResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.QueryGroupInfoResponse;
                fromPartial(object: {
                    info?: {
                        id?: bigint;
                        admin?: string;
                        metadata?: string;
                        version?: bigint;
                        totalWeight?: string;
                        createdAt?: Date;
                    };
                }): _65.QueryGroupInfoResponse;
                fromAmino(object: _65.QueryGroupInfoResponseAmino): _65.QueryGroupInfoResponse;
                toAmino(message: _65.QueryGroupInfoResponse): _65.QueryGroupInfoResponseAmino;
                fromAminoMsg(object: _65.QueryGroupInfoResponseAminoMsg): _65.QueryGroupInfoResponse;
                toAminoMsg(message: _65.QueryGroupInfoResponse): _65.QueryGroupInfoResponseAminoMsg;
                fromProtoMsg(message: _65.QueryGroupInfoResponseProtoMsg): _65.QueryGroupInfoResponse;
                toProto(message: _65.QueryGroupInfoResponse): Uint8Array;
                toProtoMsg(message: _65.QueryGroupInfoResponse): _65.QueryGroupInfoResponseProtoMsg;
            };
            QueryGroupPolicyInfoRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _65.QueryGroupPolicyInfoRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.QueryGroupPolicyInfoRequest;
                fromPartial(object: {
                    address?: string;
                }): _65.QueryGroupPolicyInfoRequest;
                fromAmino(object: _65.QueryGroupPolicyInfoRequestAmino): _65.QueryGroupPolicyInfoRequest;
                toAmino(message: _65.QueryGroupPolicyInfoRequest): _65.QueryGroupPolicyInfoRequestAmino;
                fromAminoMsg(object: _65.QueryGroupPolicyInfoRequestAminoMsg): _65.QueryGroupPolicyInfoRequest;
                toAminoMsg(message: _65.QueryGroupPolicyInfoRequest): _65.QueryGroupPolicyInfoRequestAminoMsg;
                fromProtoMsg(message: _65.QueryGroupPolicyInfoRequestProtoMsg): _65.QueryGroupPolicyInfoRequest;
                toProto(message: _65.QueryGroupPolicyInfoRequest): Uint8Array;
                toProtoMsg(message: _65.QueryGroupPolicyInfoRequest): _65.QueryGroupPolicyInfoRequestProtoMsg;
            };
            QueryGroupPolicyInfoResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _65.QueryGroupPolicyInfoResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.QueryGroupPolicyInfoResponse;
                fromPartial(object: {
                    info?: {
                        address?: string;
                        groupId?: bigint;
                        admin?: string;
                        metadata?: string;
                        version?: bigint;
                        decisionPolicy?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        } | {
                            $typeUrl?: "/cosmos.group.v1.ThresholdDecisionPolicy";
                            threshold?: string;
                            windows?: {
                                votingPeriod?: {
                                    seconds?: bigint;
                                    nanos?: number;
                                };
                                minExecutionPeriod?: {
                                    seconds?: bigint;
                                    nanos?: number;
                                };
                            };
                        } | {
                            $typeUrl?: "/cosmos.group.v1.PercentageDecisionPolicy";
                            percentage?: string;
                            windows?: {
                                votingPeriod?: {
                                    seconds?: bigint;
                                    nanos?: number;
                                };
                                minExecutionPeriod?: {
                                    seconds?: bigint;
                                    nanos?: number;
                                };
                            };
                        };
                        createdAt?: Date;
                    };
                }): _65.QueryGroupPolicyInfoResponse;
                fromAmino(object: _65.QueryGroupPolicyInfoResponseAmino): _65.QueryGroupPolicyInfoResponse;
                toAmino(message: _65.QueryGroupPolicyInfoResponse): _65.QueryGroupPolicyInfoResponseAmino;
                fromAminoMsg(object: _65.QueryGroupPolicyInfoResponseAminoMsg): _65.QueryGroupPolicyInfoResponse;
                toAminoMsg(message: _65.QueryGroupPolicyInfoResponse): _65.QueryGroupPolicyInfoResponseAminoMsg;
                fromProtoMsg(message: _65.QueryGroupPolicyInfoResponseProtoMsg): _65.QueryGroupPolicyInfoResponse;
                toProto(message: _65.QueryGroupPolicyInfoResponse): Uint8Array;
                toProtoMsg(message: _65.QueryGroupPolicyInfoResponse): _65.QueryGroupPolicyInfoResponseProtoMsg;
            };
            QueryGroupMembersRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _65.QueryGroupMembersRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.QueryGroupMembersRequest;
                fromPartial(object: {
                    groupId?: bigint;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _65.QueryGroupMembersRequest;
                fromAmino(object: _65.QueryGroupMembersRequestAmino): _65.QueryGroupMembersRequest;
                toAmino(message: _65.QueryGroupMembersRequest): _65.QueryGroupMembersRequestAmino;
                fromAminoMsg(object: _65.QueryGroupMembersRequestAminoMsg): _65.QueryGroupMembersRequest;
                toAminoMsg(message: _65.QueryGroupMembersRequest): _65.QueryGroupMembersRequestAminoMsg;
                fromProtoMsg(message: _65.QueryGroupMembersRequestProtoMsg): _65.QueryGroupMembersRequest;
                toProto(message: _65.QueryGroupMembersRequest): Uint8Array;
                toProtoMsg(message: _65.QueryGroupMembersRequest): _65.QueryGroupMembersRequestProtoMsg;
            };
            QueryGroupMembersResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _65.QueryGroupMembersResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.QueryGroupMembersResponse;
                fromPartial(object: {
                    members?: {
                        groupId?: bigint;
                        member?: {
                            address?: string;
                            weight?: string;
                            metadata?: string;
                            addedAt?: Date;
                        };
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _65.QueryGroupMembersResponse;
                fromAmino(object: _65.QueryGroupMembersResponseAmino): _65.QueryGroupMembersResponse;
                toAmino(message: _65.QueryGroupMembersResponse): _65.QueryGroupMembersResponseAmino;
                fromAminoMsg(object: _65.QueryGroupMembersResponseAminoMsg): _65.QueryGroupMembersResponse;
                toAminoMsg(message: _65.QueryGroupMembersResponse): _65.QueryGroupMembersResponseAminoMsg;
                fromProtoMsg(message: _65.QueryGroupMembersResponseProtoMsg): _65.QueryGroupMembersResponse;
                toProto(message: _65.QueryGroupMembersResponse): Uint8Array;
                toProtoMsg(message: _65.QueryGroupMembersResponse): _65.QueryGroupMembersResponseProtoMsg;
            };
            QueryGroupsByAdminRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _65.QueryGroupsByAdminRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.QueryGroupsByAdminRequest;
                fromPartial(object: {
                    admin?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _65.QueryGroupsByAdminRequest;
                fromAmino(object: _65.QueryGroupsByAdminRequestAmino): _65.QueryGroupsByAdminRequest;
                toAmino(message: _65.QueryGroupsByAdminRequest): _65.QueryGroupsByAdminRequestAmino;
                fromAminoMsg(object: _65.QueryGroupsByAdminRequestAminoMsg): _65.QueryGroupsByAdminRequest;
                toAminoMsg(message: _65.QueryGroupsByAdminRequest): _65.QueryGroupsByAdminRequestAminoMsg;
                fromProtoMsg(message: _65.QueryGroupsByAdminRequestProtoMsg): _65.QueryGroupsByAdminRequest;
                toProto(message: _65.QueryGroupsByAdminRequest): Uint8Array;
                toProtoMsg(message: _65.QueryGroupsByAdminRequest): _65.QueryGroupsByAdminRequestProtoMsg;
            };
            QueryGroupsByAdminResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _65.QueryGroupsByAdminResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.QueryGroupsByAdminResponse;
                fromPartial(object: {
                    groups?: {
                        id?: bigint;
                        admin?: string;
                        metadata?: string;
                        version?: bigint;
                        totalWeight?: string;
                        createdAt?: Date;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _65.QueryGroupsByAdminResponse;
                fromAmino(object: _65.QueryGroupsByAdminResponseAmino): _65.QueryGroupsByAdminResponse;
                toAmino(message: _65.QueryGroupsByAdminResponse): _65.QueryGroupsByAdminResponseAmino;
                fromAminoMsg(object: _65.QueryGroupsByAdminResponseAminoMsg): _65.QueryGroupsByAdminResponse;
                toAminoMsg(message: _65.QueryGroupsByAdminResponse): _65.QueryGroupsByAdminResponseAminoMsg;
                fromProtoMsg(message: _65.QueryGroupsByAdminResponseProtoMsg): _65.QueryGroupsByAdminResponse;
                toProto(message: _65.QueryGroupsByAdminResponse): Uint8Array;
                toProtoMsg(message: _65.QueryGroupsByAdminResponse): _65.QueryGroupsByAdminResponseProtoMsg;
            };
            QueryGroupPoliciesByGroupRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _65.QueryGroupPoliciesByGroupRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.QueryGroupPoliciesByGroupRequest;
                fromPartial(object: {
                    groupId?: bigint;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _65.QueryGroupPoliciesByGroupRequest;
                fromAmino(object: _65.QueryGroupPoliciesByGroupRequestAmino): _65.QueryGroupPoliciesByGroupRequest;
                toAmino(message: _65.QueryGroupPoliciesByGroupRequest): _65.QueryGroupPoliciesByGroupRequestAmino;
                fromAminoMsg(object: _65.QueryGroupPoliciesByGroupRequestAminoMsg): _65.QueryGroupPoliciesByGroupRequest;
                toAminoMsg(message: _65.QueryGroupPoliciesByGroupRequest): _65.QueryGroupPoliciesByGroupRequestAminoMsg;
                fromProtoMsg(message: _65.QueryGroupPoliciesByGroupRequestProtoMsg): _65.QueryGroupPoliciesByGroupRequest;
                toProto(message: _65.QueryGroupPoliciesByGroupRequest): Uint8Array;
                toProtoMsg(message: _65.QueryGroupPoliciesByGroupRequest): _65.QueryGroupPoliciesByGroupRequestProtoMsg;
            };
            QueryGroupPoliciesByGroupResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _65.QueryGroupPoliciesByGroupResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.QueryGroupPoliciesByGroupResponse;
                fromPartial(object: {
                    groupPolicies?: {
                        address?: string;
                        groupId?: bigint;
                        admin?: string;
                        metadata?: string;
                        version?: bigint;
                        decisionPolicy?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        } | {
                            $typeUrl?: "/cosmos.group.v1.ThresholdDecisionPolicy";
                            threshold?: string;
                            windows?: {
                                votingPeriod?: {
                                    seconds?: bigint;
                                    nanos?: number;
                                };
                                minExecutionPeriod?: {
                                    seconds?: bigint;
                                    nanos?: number;
                                };
                            };
                        } | {
                            $typeUrl?: "/cosmos.group.v1.PercentageDecisionPolicy";
                            percentage?: string;
                            windows?: {
                                votingPeriod?: {
                                    seconds?: bigint;
                                    nanos?: number;
                                };
                                minExecutionPeriod?: {
                                    seconds?: bigint;
                                    nanos?: number;
                                };
                            };
                        };
                        createdAt?: Date;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _65.QueryGroupPoliciesByGroupResponse;
                fromAmino(object: _65.QueryGroupPoliciesByGroupResponseAmino): _65.QueryGroupPoliciesByGroupResponse;
                toAmino(message: _65.QueryGroupPoliciesByGroupResponse): _65.QueryGroupPoliciesByGroupResponseAmino;
                fromAminoMsg(object: _65.QueryGroupPoliciesByGroupResponseAminoMsg): _65.QueryGroupPoliciesByGroupResponse;
                toAminoMsg(message: _65.QueryGroupPoliciesByGroupResponse): _65.QueryGroupPoliciesByGroupResponseAminoMsg;
                fromProtoMsg(message: _65.QueryGroupPoliciesByGroupResponseProtoMsg): _65.QueryGroupPoliciesByGroupResponse;
                toProto(message: _65.QueryGroupPoliciesByGroupResponse): Uint8Array;
                toProtoMsg(message: _65.QueryGroupPoliciesByGroupResponse): _65.QueryGroupPoliciesByGroupResponseProtoMsg;
            };
            QueryGroupPoliciesByAdminRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _65.QueryGroupPoliciesByAdminRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.QueryGroupPoliciesByAdminRequest;
                fromPartial(object: {
                    admin?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _65.QueryGroupPoliciesByAdminRequest;
                fromAmino(object: _65.QueryGroupPoliciesByAdminRequestAmino): _65.QueryGroupPoliciesByAdminRequest;
                toAmino(message: _65.QueryGroupPoliciesByAdminRequest): _65.QueryGroupPoliciesByAdminRequestAmino;
                fromAminoMsg(object: _65.QueryGroupPoliciesByAdminRequestAminoMsg): _65.QueryGroupPoliciesByAdminRequest;
                toAminoMsg(message: _65.QueryGroupPoliciesByAdminRequest): _65.QueryGroupPoliciesByAdminRequestAminoMsg;
                fromProtoMsg(message: _65.QueryGroupPoliciesByAdminRequestProtoMsg): _65.QueryGroupPoliciesByAdminRequest;
                toProto(message: _65.QueryGroupPoliciesByAdminRequest): Uint8Array;
                toProtoMsg(message: _65.QueryGroupPoliciesByAdminRequest): _65.QueryGroupPoliciesByAdminRequestProtoMsg;
            };
            QueryGroupPoliciesByAdminResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _65.QueryGroupPoliciesByAdminResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.QueryGroupPoliciesByAdminResponse;
                fromPartial(object: {
                    groupPolicies?: {
                        address?: string;
                        groupId?: bigint;
                        admin?: string;
                        metadata?: string;
                        version?: bigint;
                        decisionPolicy?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        } | {
                            $typeUrl?: "/cosmos.group.v1.ThresholdDecisionPolicy";
                            threshold?: string;
                            windows?: {
                                votingPeriod?: {
                                    seconds?: bigint;
                                    nanos?: number;
                                };
                                minExecutionPeriod?: {
                                    seconds?: bigint;
                                    nanos?: number;
                                };
                            };
                        } | {
                            $typeUrl?: "/cosmos.group.v1.PercentageDecisionPolicy";
                            percentage?: string;
                            windows?: {
                                votingPeriod?: {
                                    seconds?: bigint;
                                    nanos?: number;
                                };
                                minExecutionPeriod?: {
                                    seconds?: bigint;
                                    nanos?: number;
                                };
                            };
                        };
                        createdAt?: Date;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _65.QueryGroupPoliciesByAdminResponse;
                fromAmino(object: _65.QueryGroupPoliciesByAdminResponseAmino): _65.QueryGroupPoliciesByAdminResponse;
                toAmino(message: _65.QueryGroupPoliciesByAdminResponse): _65.QueryGroupPoliciesByAdminResponseAmino;
                fromAminoMsg(object: _65.QueryGroupPoliciesByAdminResponseAminoMsg): _65.QueryGroupPoliciesByAdminResponse;
                toAminoMsg(message: _65.QueryGroupPoliciesByAdminResponse): _65.QueryGroupPoliciesByAdminResponseAminoMsg;
                fromProtoMsg(message: _65.QueryGroupPoliciesByAdminResponseProtoMsg): _65.QueryGroupPoliciesByAdminResponse;
                toProto(message: _65.QueryGroupPoliciesByAdminResponse): Uint8Array;
                toProtoMsg(message: _65.QueryGroupPoliciesByAdminResponse): _65.QueryGroupPoliciesByAdminResponseProtoMsg;
            };
            QueryProposalRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _65.QueryProposalRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.QueryProposalRequest;
                fromPartial(object: {
                    proposalId?: bigint;
                }): _65.QueryProposalRequest;
                fromAmino(object: _65.QueryProposalRequestAmino): _65.QueryProposalRequest;
                toAmino(message: _65.QueryProposalRequest): _65.QueryProposalRequestAmino;
                fromAminoMsg(object: _65.QueryProposalRequestAminoMsg): _65.QueryProposalRequest;
                toAminoMsg(message: _65.QueryProposalRequest): _65.QueryProposalRequestAminoMsg;
                fromProtoMsg(message: _65.QueryProposalRequestProtoMsg): _65.QueryProposalRequest;
                toProto(message: _65.QueryProposalRequest): Uint8Array;
                toProtoMsg(message: _65.QueryProposalRequest): _65.QueryProposalRequestProtoMsg;
            };
            QueryProposalResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _65.QueryProposalResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.QueryProposalResponse;
                fromPartial(object: {
                    proposal?: {
                        id?: bigint;
                        groupPolicyAddress?: string;
                        metadata?: string;
                        proposers?: string[];
                        submitTime?: Date;
                        groupVersion?: bigint;
                        groupPolicyVersion?: bigint;
                        status?: _67.ProposalStatus;
                        finalTallyResult?: {
                            yesCount?: string;
                            abstainCount?: string;
                            noCount?: string;
                            noWithVetoCount?: string;
                        };
                        votingPeriodEnd?: Date;
                        executorResult?: _67.ProposalExecutorResult;
                        messages?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        }[];
                        title?: string;
                        summary?: string;
                    };
                }): _65.QueryProposalResponse;
                fromAmino(object: _65.QueryProposalResponseAmino): _65.QueryProposalResponse;
                toAmino(message: _65.QueryProposalResponse): _65.QueryProposalResponseAmino;
                fromAminoMsg(object: _65.QueryProposalResponseAminoMsg): _65.QueryProposalResponse;
                toAminoMsg(message: _65.QueryProposalResponse): _65.QueryProposalResponseAminoMsg;
                fromProtoMsg(message: _65.QueryProposalResponseProtoMsg): _65.QueryProposalResponse;
                toProto(message: _65.QueryProposalResponse): Uint8Array;
                toProtoMsg(message: _65.QueryProposalResponse): _65.QueryProposalResponseProtoMsg;
            };
            QueryProposalsByGroupPolicyRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _65.QueryProposalsByGroupPolicyRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.QueryProposalsByGroupPolicyRequest;
                fromPartial(object: {
                    address?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _65.QueryProposalsByGroupPolicyRequest;
                fromAmino(object: _65.QueryProposalsByGroupPolicyRequestAmino): _65.QueryProposalsByGroupPolicyRequest;
                toAmino(message: _65.QueryProposalsByGroupPolicyRequest): _65.QueryProposalsByGroupPolicyRequestAmino;
                fromAminoMsg(object: _65.QueryProposalsByGroupPolicyRequestAminoMsg): _65.QueryProposalsByGroupPolicyRequest;
                toAminoMsg(message: _65.QueryProposalsByGroupPolicyRequest): _65.QueryProposalsByGroupPolicyRequestAminoMsg;
                fromProtoMsg(message: _65.QueryProposalsByGroupPolicyRequestProtoMsg): _65.QueryProposalsByGroupPolicyRequest;
                toProto(message: _65.QueryProposalsByGroupPolicyRequest): Uint8Array;
                toProtoMsg(message: _65.QueryProposalsByGroupPolicyRequest): _65.QueryProposalsByGroupPolicyRequestProtoMsg;
            };
            QueryProposalsByGroupPolicyResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _65.QueryProposalsByGroupPolicyResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.QueryProposalsByGroupPolicyResponse;
                fromPartial(object: {
                    proposals?: {
                        id?: bigint;
                        groupPolicyAddress?: string;
                        metadata?: string;
                        proposers?: string[];
                        submitTime?: Date;
                        groupVersion?: bigint;
                        groupPolicyVersion?: bigint;
                        status?: _67.ProposalStatus;
                        finalTallyResult?: {
                            yesCount?: string;
                            abstainCount?: string;
                            noCount?: string;
                            noWithVetoCount?: string;
                        };
                        votingPeriodEnd?: Date;
                        executorResult?: _67.ProposalExecutorResult;
                        messages?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        }[];
                        title?: string;
                        summary?: string;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _65.QueryProposalsByGroupPolicyResponse;
                fromAmino(object: _65.QueryProposalsByGroupPolicyResponseAmino): _65.QueryProposalsByGroupPolicyResponse;
                toAmino(message: _65.QueryProposalsByGroupPolicyResponse): _65.QueryProposalsByGroupPolicyResponseAmino;
                fromAminoMsg(object: _65.QueryProposalsByGroupPolicyResponseAminoMsg): _65.QueryProposalsByGroupPolicyResponse;
                toAminoMsg(message: _65.QueryProposalsByGroupPolicyResponse): _65.QueryProposalsByGroupPolicyResponseAminoMsg;
                fromProtoMsg(message: _65.QueryProposalsByGroupPolicyResponseProtoMsg): _65.QueryProposalsByGroupPolicyResponse;
                toProto(message: _65.QueryProposalsByGroupPolicyResponse): Uint8Array;
                toProtoMsg(message: _65.QueryProposalsByGroupPolicyResponse): _65.QueryProposalsByGroupPolicyResponseProtoMsg;
            };
            QueryVoteByProposalVoterRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _65.QueryVoteByProposalVoterRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.QueryVoteByProposalVoterRequest;
                fromPartial(object: {
                    proposalId?: bigint;
                    voter?: string;
                }): _65.QueryVoteByProposalVoterRequest;
                fromAmino(object: _65.QueryVoteByProposalVoterRequestAmino): _65.QueryVoteByProposalVoterRequest;
                toAmino(message: _65.QueryVoteByProposalVoterRequest): _65.QueryVoteByProposalVoterRequestAmino;
                fromAminoMsg(object: _65.QueryVoteByProposalVoterRequestAminoMsg): _65.QueryVoteByProposalVoterRequest;
                toAminoMsg(message: _65.QueryVoteByProposalVoterRequest): _65.QueryVoteByProposalVoterRequestAminoMsg;
                fromProtoMsg(message: _65.QueryVoteByProposalVoterRequestProtoMsg): _65.QueryVoteByProposalVoterRequest;
                toProto(message: _65.QueryVoteByProposalVoterRequest): Uint8Array;
                toProtoMsg(message: _65.QueryVoteByProposalVoterRequest): _65.QueryVoteByProposalVoterRequestProtoMsg;
            };
            QueryVoteByProposalVoterResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _65.QueryVoteByProposalVoterResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.QueryVoteByProposalVoterResponse;
                fromPartial(object: {
                    vote?: {
                        proposalId?: bigint;
                        voter?: string;
                        option?: _67.VoteOption;
                        metadata?: string;
                        submitTime?: Date;
                    };
                }): _65.QueryVoteByProposalVoterResponse;
                fromAmino(object: _65.QueryVoteByProposalVoterResponseAmino): _65.QueryVoteByProposalVoterResponse;
                toAmino(message: _65.QueryVoteByProposalVoterResponse): _65.QueryVoteByProposalVoterResponseAmino;
                fromAminoMsg(object: _65.QueryVoteByProposalVoterResponseAminoMsg): _65.QueryVoteByProposalVoterResponse;
                toAminoMsg(message: _65.QueryVoteByProposalVoterResponse): _65.QueryVoteByProposalVoterResponseAminoMsg;
                fromProtoMsg(message: _65.QueryVoteByProposalVoterResponseProtoMsg): _65.QueryVoteByProposalVoterResponse;
                toProto(message: _65.QueryVoteByProposalVoterResponse): Uint8Array;
                toProtoMsg(message: _65.QueryVoteByProposalVoterResponse): _65.QueryVoteByProposalVoterResponseProtoMsg;
            };
            QueryVotesByProposalRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _65.QueryVotesByProposalRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.QueryVotesByProposalRequest;
                fromPartial(object: {
                    proposalId?: bigint;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _65.QueryVotesByProposalRequest;
                fromAmino(object: _65.QueryVotesByProposalRequestAmino): _65.QueryVotesByProposalRequest;
                toAmino(message: _65.QueryVotesByProposalRequest): _65.QueryVotesByProposalRequestAmino;
                fromAminoMsg(object: _65.QueryVotesByProposalRequestAminoMsg): _65.QueryVotesByProposalRequest;
                toAminoMsg(message: _65.QueryVotesByProposalRequest): _65.QueryVotesByProposalRequestAminoMsg;
                fromProtoMsg(message: _65.QueryVotesByProposalRequestProtoMsg): _65.QueryVotesByProposalRequest;
                toProto(message: _65.QueryVotesByProposalRequest): Uint8Array;
                toProtoMsg(message: _65.QueryVotesByProposalRequest): _65.QueryVotesByProposalRequestProtoMsg;
            };
            QueryVotesByProposalResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _65.QueryVotesByProposalResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.QueryVotesByProposalResponse;
                fromPartial(object: {
                    votes?: {
                        proposalId?: bigint;
                        voter?: string;
                        option?: _67.VoteOption;
                        metadata?: string;
                        submitTime?: Date;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _65.QueryVotesByProposalResponse;
                fromAmino(object: _65.QueryVotesByProposalResponseAmino): _65.QueryVotesByProposalResponse;
                toAmino(message: _65.QueryVotesByProposalResponse): _65.QueryVotesByProposalResponseAmino;
                fromAminoMsg(object: _65.QueryVotesByProposalResponseAminoMsg): _65.QueryVotesByProposalResponse;
                toAminoMsg(message: _65.QueryVotesByProposalResponse): _65.QueryVotesByProposalResponseAminoMsg;
                fromProtoMsg(message: _65.QueryVotesByProposalResponseProtoMsg): _65.QueryVotesByProposalResponse;
                toProto(message: _65.QueryVotesByProposalResponse): Uint8Array;
                toProtoMsg(message: _65.QueryVotesByProposalResponse): _65.QueryVotesByProposalResponseProtoMsg;
            };
            QueryVotesByVoterRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _65.QueryVotesByVoterRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.QueryVotesByVoterRequest;
                fromPartial(object: {
                    voter?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _65.QueryVotesByVoterRequest;
                fromAmino(object: _65.QueryVotesByVoterRequestAmino): _65.QueryVotesByVoterRequest;
                toAmino(message: _65.QueryVotesByVoterRequest): _65.QueryVotesByVoterRequestAmino;
                fromAminoMsg(object: _65.QueryVotesByVoterRequestAminoMsg): _65.QueryVotesByVoterRequest;
                toAminoMsg(message: _65.QueryVotesByVoterRequest): _65.QueryVotesByVoterRequestAminoMsg;
                fromProtoMsg(message: _65.QueryVotesByVoterRequestProtoMsg): _65.QueryVotesByVoterRequest;
                toProto(message: _65.QueryVotesByVoterRequest): Uint8Array;
                toProtoMsg(message: _65.QueryVotesByVoterRequest): _65.QueryVotesByVoterRequestProtoMsg;
            };
            QueryVotesByVoterResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _65.QueryVotesByVoterResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.QueryVotesByVoterResponse;
                fromPartial(object: {
                    votes?: {
                        proposalId?: bigint;
                        voter?: string;
                        option?: _67.VoteOption;
                        metadata?: string;
                        submitTime?: Date;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _65.QueryVotesByVoterResponse;
                fromAmino(object: _65.QueryVotesByVoterResponseAmino): _65.QueryVotesByVoterResponse;
                toAmino(message: _65.QueryVotesByVoterResponse): _65.QueryVotesByVoterResponseAmino;
                fromAminoMsg(object: _65.QueryVotesByVoterResponseAminoMsg): _65.QueryVotesByVoterResponse;
                toAminoMsg(message: _65.QueryVotesByVoterResponse): _65.QueryVotesByVoterResponseAminoMsg;
                fromProtoMsg(message: _65.QueryVotesByVoterResponseProtoMsg): _65.QueryVotesByVoterResponse;
                toProto(message: _65.QueryVotesByVoterResponse): Uint8Array;
                toProtoMsg(message: _65.QueryVotesByVoterResponse): _65.QueryVotesByVoterResponseProtoMsg;
            };
            QueryGroupsByMemberRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _65.QueryGroupsByMemberRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.QueryGroupsByMemberRequest;
                fromPartial(object: {
                    address?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _65.QueryGroupsByMemberRequest;
                fromAmino(object: _65.QueryGroupsByMemberRequestAmino): _65.QueryGroupsByMemberRequest;
                toAmino(message: _65.QueryGroupsByMemberRequest): _65.QueryGroupsByMemberRequestAmino;
                fromAminoMsg(object: _65.QueryGroupsByMemberRequestAminoMsg): _65.QueryGroupsByMemberRequest;
                toAminoMsg(message: _65.QueryGroupsByMemberRequest): _65.QueryGroupsByMemberRequestAminoMsg;
                fromProtoMsg(message: _65.QueryGroupsByMemberRequestProtoMsg): _65.QueryGroupsByMemberRequest;
                toProto(message: _65.QueryGroupsByMemberRequest): Uint8Array;
                toProtoMsg(message: _65.QueryGroupsByMemberRequest): _65.QueryGroupsByMemberRequestProtoMsg;
            };
            QueryGroupsByMemberResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _65.QueryGroupsByMemberResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.QueryGroupsByMemberResponse;
                fromPartial(object: {
                    groups?: {
                        id?: bigint;
                        admin?: string;
                        metadata?: string;
                        version?: bigint;
                        totalWeight?: string;
                        createdAt?: Date;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _65.QueryGroupsByMemberResponse;
                fromAmino(object: _65.QueryGroupsByMemberResponseAmino): _65.QueryGroupsByMemberResponse;
                toAmino(message: _65.QueryGroupsByMemberResponse): _65.QueryGroupsByMemberResponseAmino;
                fromAminoMsg(object: _65.QueryGroupsByMemberResponseAminoMsg): _65.QueryGroupsByMemberResponse;
                toAminoMsg(message: _65.QueryGroupsByMemberResponse): _65.QueryGroupsByMemberResponseAminoMsg;
                fromProtoMsg(message: _65.QueryGroupsByMemberResponseProtoMsg): _65.QueryGroupsByMemberResponse;
                toProto(message: _65.QueryGroupsByMemberResponse): Uint8Array;
                toProtoMsg(message: _65.QueryGroupsByMemberResponse): _65.QueryGroupsByMemberResponseProtoMsg;
            };
            QueryTallyResultRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _65.QueryTallyResultRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.QueryTallyResultRequest;
                fromPartial(object: {
                    proposalId?: bigint;
                }): _65.QueryTallyResultRequest;
                fromAmino(object: _65.QueryTallyResultRequestAmino): _65.QueryTallyResultRequest;
                toAmino(message: _65.QueryTallyResultRequest): _65.QueryTallyResultRequestAmino;
                fromAminoMsg(object: _65.QueryTallyResultRequestAminoMsg): _65.QueryTallyResultRequest;
                toAminoMsg(message: _65.QueryTallyResultRequest): _65.QueryTallyResultRequestAminoMsg;
                fromProtoMsg(message: _65.QueryTallyResultRequestProtoMsg): _65.QueryTallyResultRequest;
                toProto(message: _65.QueryTallyResultRequest): Uint8Array;
                toProtoMsg(message: _65.QueryTallyResultRequest): _65.QueryTallyResultRequestProtoMsg;
            };
            QueryTallyResultResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _65.QueryTallyResultResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.QueryTallyResultResponse;
                fromPartial(object: {
                    tally?: {
                        yesCount?: string;
                        abstainCount?: string;
                        noCount?: string;
                        noWithVetoCount?: string;
                    };
                }): _65.QueryTallyResultResponse;
                fromAmino(object: _65.QueryTallyResultResponseAmino): _65.QueryTallyResultResponse;
                toAmino(message: _65.QueryTallyResultResponse): _65.QueryTallyResultResponseAmino;
                fromAminoMsg(object: _65.QueryTallyResultResponseAminoMsg): _65.QueryTallyResultResponse;
                toAminoMsg(message: _65.QueryTallyResultResponse): _65.QueryTallyResultResponseAminoMsg;
                fromProtoMsg(message: _65.QueryTallyResultResponseProtoMsg): _65.QueryTallyResultResponse;
                toProto(message: _65.QueryTallyResultResponse): Uint8Array;
                toProtoMsg(message: _65.QueryTallyResultResponse): _65.QueryTallyResultResponseProtoMsg;
            };
            QueryGroupsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _65.QueryGroupsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.QueryGroupsRequest;
                fromPartial(object: {
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _65.QueryGroupsRequest;
                fromAmino(object: _65.QueryGroupsRequestAmino): _65.QueryGroupsRequest;
                toAmino(message: _65.QueryGroupsRequest): _65.QueryGroupsRequestAmino;
                fromAminoMsg(object: _65.QueryGroupsRequestAminoMsg): _65.QueryGroupsRequest;
                toAminoMsg(message: _65.QueryGroupsRequest): _65.QueryGroupsRequestAminoMsg;
                fromProtoMsg(message: _65.QueryGroupsRequestProtoMsg): _65.QueryGroupsRequest;
                toProto(message: _65.QueryGroupsRequest): Uint8Array;
                toProtoMsg(message: _65.QueryGroupsRequest): _65.QueryGroupsRequestProtoMsg;
            };
            QueryGroupsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _65.QueryGroupsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _65.QueryGroupsResponse;
                fromPartial(object: {
                    groups?: {
                        id?: bigint;
                        admin?: string;
                        metadata?: string;
                        version?: bigint;
                        totalWeight?: string;
                        createdAt?: Date;
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _65.QueryGroupsResponse;
                fromAmino(object: _65.QueryGroupsResponseAmino): _65.QueryGroupsResponse;
                toAmino(message: _65.QueryGroupsResponse): _65.QueryGroupsResponseAmino;
                fromAminoMsg(object: _65.QueryGroupsResponseAminoMsg): _65.QueryGroupsResponse;
                toAminoMsg(message: _65.QueryGroupsResponse): _65.QueryGroupsResponseAminoMsg;
                fromProtoMsg(message: _65.QueryGroupsResponseProtoMsg): _65.QueryGroupsResponse;
                toProto(message: _65.QueryGroupsResponse): Uint8Array;
                toProtoMsg(message: _65.QueryGroupsResponse): _65.QueryGroupsResponseProtoMsg;
            };
            GenesisState: {
                typeUrl: string;
                aminoType: string;
                encode(message: _64.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _64.GenesisState;
                fromPartial(object: {
                    groupSeq?: bigint;
                    groups?: {
                        id?: bigint;
                        admin?: string;
                        metadata?: string;
                        version?: bigint;
                        totalWeight?: string;
                        createdAt?: Date;
                    }[];
                    groupMembers?: {
                        groupId?: bigint;
                        member?: {
                            address?: string;
                            weight?: string;
                            metadata?: string;
                            addedAt?: Date;
                        };
                    }[];
                    groupPolicySeq?: bigint;
                    groupPolicies?: {
                        address?: string;
                        groupId?: bigint;
                        admin?: string;
                        metadata?: string;
                        version?: bigint;
                        decisionPolicy?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        } | {
                            $typeUrl?: "/cosmos.group.v1.ThresholdDecisionPolicy";
                            threshold?: string;
                            windows?: {
                                votingPeriod?: {
                                    seconds?: bigint;
                                    nanos?: number;
                                };
                                minExecutionPeriod?: {
                                    seconds?: bigint;
                                    nanos?: number;
                                };
                            };
                        } | {
                            $typeUrl?: "/cosmos.group.v1.PercentageDecisionPolicy";
                            percentage?: string;
                            windows?: {
                                votingPeriod?: {
                                    seconds?: bigint;
                                    nanos?: number;
                                };
                                minExecutionPeriod?: {
                                    seconds?: bigint;
                                    nanos?: number;
                                };
                            };
                        };
                        createdAt?: Date;
                    }[];
                    proposalSeq?: bigint;
                    proposals?: {
                        id?: bigint;
                        groupPolicyAddress?: string;
                        metadata?: string;
                        proposers?: string[];
                        submitTime?: Date;
                        groupVersion?: bigint;
                        groupPolicyVersion?: bigint;
                        status?: _67.ProposalStatus;
                        finalTallyResult?: {
                            yesCount?: string;
                            abstainCount?: string;
                            noCount?: string;
                            noWithVetoCount?: string;
                        };
                        votingPeriodEnd?: Date;
                        executorResult?: _67.ProposalExecutorResult;
                        messages?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        }[];
                        title?: string;
                        summary?: string;
                    }[];
                    votes?: {
                        proposalId?: bigint;
                        voter?: string;
                        option?: _67.VoteOption;
                        metadata?: string;
                        submitTime?: Date;
                    }[];
                }): _64.GenesisState;
                fromAmino(object: _64.GenesisStateAmino): _64.GenesisState;
                toAmino(message: _64.GenesisState): _64.GenesisStateAmino;
                fromAminoMsg(object: _64.GenesisStateAminoMsg): _64.GenesisState;
                toAminoMsg(message: _64.GenesisState): _64.GenesisStateAminoMsg;
                fromProtoMsg(message: _64.GenesisStateProtoMsg): _64.GenesisState;
                toProto(message: _64.GenesisState): Uint8Array;
                toProtoMsg(message: _64.GenesisState): _64.GenesisStateProtoMsg;
            };
            EventCreateGroup: {
                typeUrl: string;
                aminoType: string;
                encode(message: _63.EventCreateGroup, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _63.EventCreateGroup;
                fromPartial(object: {
                    groupId?: bigint;
                }): _63.EventCreateGroup;
                fromAmino(object: _63.EventCreateGroupAmino): _63.EventCreateGroup;
                toAmino(message: _63.EventCreateGroup): _63.EventCreateGroupAmino;
                fromAminoMsg(object: _63.EventCreateGroupAminoMsg): _63.EventCreateGroup;
                toAminoMsg(message: _63.EventCreateGroup): _63.EventCreateGroupAminoMsg;
                fromProtoMsg(message: _63.EventCreateGroupProtoMsg): _63.EventCreateGroup;
                toProto(message: _63.EventCreateGroup): Uint8Array;
                toProtoMsg(message: _63.EventCreateGroup): _63.EventCreateGroupProtoMsg;
            };
            EventUpdateGroup: {
                typeUrl: string;
                aminoType: string;
                encode(message: _63.EventUpdateGroup, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _63.EventUpdateGroup;
                fromPartial(object: {
                    groupId?: bigint;
                }): _63.EventUpdateGroup;
                fromAmino(object: _63.EventUpdateGroupAmino): _63.EventUpdateGroup;
                toAmino(message: _63.EventUpdateGroup): _63.EventUpdateGroupAmino;
                fromAminoMsg(object: _63.EventUpdateGroupAminoMsg): _63.EventUpdateGroup;
                toAminoMsg(message: _63.EventUpdateGroup): _63.EventUpdateGroupAminoMsg;
                fromProtoMsg(message: _63.EventUpdateGroupProtoMsg): _63.EventUpdateGroup;
                toProto(message: _63.EventUpdateGroup): Uint8Array;
                toProtoMsg(message: _63.EventUpdateGroup): _63.EventUpdateGroupProtoMsg;
            };
            EventCreateGroupPolicy: {
                typeUrl: string;
                aminoType: string;
                encode(message: _63.EventCreateGroupPolicy, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _63.EventCreateGroupPolicy;
                fromPartial(object: {
                    address?: string;
                }): _63.EventCreateGroupPolicy;
                fromAmino(object: _63.EventCreateGroupPolicyAmino): _63.EventCreateGroupPolicy;
                toAmino(message: _63.EventCreateGroupPolicy): _63.EventCreateGroupPolicyAmino;
                fromAminoMsg(object: _63.EventCreateGroupPolicyAminoMsg): _63.EventCreateGroupPolicy;
                toAminoMsg(message: _63.EventCreateGroupPolicy): _63.EventCreateGroupPolicyAminoMsg;
                fromProtoMsg(message: _63.EventCreateGroupPolicyProtoMsg): _63.EventCreateGroupPolicy;
                toProto(message: _63.EventCreateGroupPolicy): Uint8Array;
                toProtoMsg(message: _63.EventCreateGroupPolicy): _63.EventCreateGroupPolicyProtoMsg;
            };
            EventUpdateGroupPolicy: {
                typeUrl: string;
                aminoType: string;
                encode(message: _63.EventUpdateGroupPolicy, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _63.EventUpdateGroupPolicy;
                fromPartial(object: {
                    address?: string;
                }): _63.EventUpdateGroupPolicy;
                fromAmino(object: _63.EventUpdateGroupPolicyAmino): _63.EventUpdateGroupPolicy;
                toAmino(message: _63.EventUpdateGroupPolicy): _63.EventUpdateGroupPolicyAmino;
                fromAminoMsg(object: _63.EventUpdateGroupPolicyAminoMsg): _63.EventUpdateGroupPolicy;
                toAminoMsg(message: _63.EventUpdateGroupPolicy): _63.EventUpdateGroupPolicyAminoMsg;
                fromProtoMsg(message: _63.EventUpdateGroupPolicyProtoMsg): _63.EventUpdateGroupPolicy;
                toProto(message: _63.EventUpdateGroupPolicy): Uint8Array;
                toProtoMsg(message: _63.EventUpdateGroupPolicy): _63.EventUpdateGroupPolicyProtoMsg;
            };
            EventSubmitProposal: {
                typeUrl: string;
                aminoType: string;
                encode(message: _63.EventSubmitProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _63.EventSubmitProposal;
                fromPartial(object: {
                    proposalId?: bigint;
                }): _63.EventSubmitProposal;
                fromAmino(object: _63.EventSubmitProposalAmino): _63.EventSubmitProposal;
                toAmino(message: _63.EventSubmitProposal): _63.EventSubmitProposalAmino;
                fromAminoMsg(object: _63.EventSubmitProposalAminoMsg): _63.EventSubmitProposal;
                toAminoMsg(message: _63.EventSubmitProposal): _63.EventSubmitProposalAminoMsg;
                fromProtoMsg(message: _63.EventSubmitProposalProtoMsg): _63.EventSubmitProposal;
                toProto(message: _63.EventSubmitProposal): Uint8Array;
                toProtoMsg(message: _63.EventSubmitProposal): _63.EventSubmitProposalProtoMsg;
            };
            EventWithdrawProposal: {
                typeUrl: string;
                aminoType: string;
                encode(message: _63.EventWithdrawProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _63.EventWithdrawProposal;
                fromPartial(object: {
                    proposalId?: bigint;
                }): _63.EventWithdrawProposal;
                fromAmino(object: _63.EventWithdrawProposalAmino): _63.EventWithdrawProposal;
                toAmino(message: _63.EventWithdrawProposal): _63.EventWithdrawProposalAmino;
                fromAminoMsg(object: _63.EventWithdrawProposalAminoMsg): _63.EventWithdrawProposal;
                toAminoMsg(message: _63.EventWithdrawProposal): _63.EventWithdrawProposalAminoMsg;
                fromProtoMsg(message: _63.EventWithdrawProposalProtoMsg): _63.EventWithdrawProposal;
                toProto(message: _63.EventWithdrawProposal): Uint8Array;
                toProtoMsg(message: _63.EventWithdrawProposal): _63.EventWithdrawProposalProtoMsg;
            };
            EventVote: {
                typeUrl: string;
                aminoType: string;
                encode(message: _63.EventVote, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _63.EventVote;
                fromPartial(object: {
                    proposalId?: bigint;
                }): _63.EventVote;
                fromAmino(object: _63.EventVoteAmino): _63.EventVote;
                toAmino(message: _63.EventVote): _63.EventVoteAmino;
                fromAminoMsg(object: _63.EventVoteAminoMsg): _63.EventVote;
                toAminoMsg(message: _63.EventVote): _63.EventVoteAminoMsg;
                fromProtoMsg(message: _63.EventVoteProtoMsg): _63.EventVote;
                toProto(message: _63.EventVote): Uint8Array;
                toProtoMsg(message: _63.EventVote): _63.EventVoteProtoMsg;
            };
            EventExec: {
                typeUrl: string;
                aminoType: string;
                encode(message: _63.EventExec, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _63.EventExec;
                fromPartial(object: {
                    proposalId?: bigint;
                    result?: _67.ProposalExecutorResult;
                    logs?: string;
                }): _63.EventExec;
                fromAmino(object: _63.EventExecAmino): _63.EventExec;
                toAmino(message: _63.EventExec): _63.EventExecAmino;
                fromAminoMsg(object: _63.EventExecAminoMsg): _63.EventExec;
                toAminoMsg(message: _63.EventExec): _63.EventExecAminoMsg;
                fromProtoMsg(message: _63.EventExecProtoMsg): _63.EventExec;
                toProto(message: _63.EventExec): Uint8Array;
                toProtoMsg(message: _63.EventExec): _63.EventExecProtoMsg;
            };
            EventLeaveGroup: {
                typeUrl: string;
                aminoType: string;
                encode(message: _63.EventLeaveGroup, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _63.EventLeaveGroup;
                fromPartial(object: {
                    groupId?: bigint;
                    address?: string;
                }): _63.EventLeaveGroup;
                fromAmino(object: _63.EventLeaveGroupAmino): _63.EventLeaveGroup;
                toAmino(message: _63.EventLeaveGroup): _63.EventLeaveGroupAmino;
                fromAminoMsg(object: _63.EventLeaveGroupAminoMsg): _63.EventLeaveGroup;
                toAminoMsg(message: _63.EventLeaveGroup): _63.EventLeaveGroupAminoMsg;
                fromProtoMsg(message: _63.EventLeaveGroupProtoMsg): _63.EventLeaveGroup;
                toProto(message: _63.EventLeaveGroup): Uint8Array;
                toProtoMsg(message: _63.EventLeaveGroup): _63.EventLeaveGroupProtoMsg;
            };
            EventProposalPruned: {
                typeUrl: string;
                aminoType: string;
                encode(message: _63.EventProposalPruned, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _63.EventProposalPruned;
                fromPartial(object: {
                    proposalId?: bigint;
                    status?: _67.ProposalStatus;
                    tallyResult?: {
                        yesCount?: string;
                        abstainCount?: string;
                        noCount?: string;
                        noWithVetoCount?: string;
                    };
                }): _63.EventProposalPruned;
                fromAmino(object: _63.EventProposalPrunedAmino): _63.EventProposalPruned;
                toAmino(message: _63.EventProposalPruned): _63.EventProposalPrunedAmino;
                fromAminoMsg(object: _63.EventProposalPrunedAminoMsg): _63.EventProposalPruned;
                toAminoMsg(message: _63.EventProposalPruned): _63.EventProposalPrunedAminoMsg;
                fromProtoMsg(message: _63.EventProposalPrunedProtoMsg): _63.EventProposalPruned;
                toProto(message: _63.EventProposalPruned): Uint8Array;
                toProtoMsg(message: _63.EventProposalPruned): _63.EventProposalPrunedProtoMsg;
            };
        };
    }
    namespace mint {
        namespace module {
            const v1: {
                Module: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _68.Module, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _68.Module;
                    fromPartial(object: {
                        feeCollectorName?: string;
                        authority?: string;
                    }): _68.Module;
                    fromAmino(object: _68.ModuleAmino): _68.Module;
                    toAmino(message: _68.Module): _68.ModuleAmino;
                    fromAminoMsg(object: _68.ModuleAminoMsg): _68.Module;
                    toAminoMsg(message: _68.Module): _68.ModuleAminoMsg;
                    fromProtoMsg(message: _68.ModuleProtoMsg): _68.Module;
                    toProto(message: _68.Module): Uint8Array;
                    toProtoMsg(message: _68.Module): _68.ModuleProtoMsg;
                };
            };
        }
        const v1beta1: {
            MsgClientImpl: typeof _239.MsgClientImpl;
            QueryClientImpl: typeof _222.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                params(request?: _71.QueryParamsRequest): Promise<_71.QueryParamsResponse>;
                inflation(request?: _71.QueryInflationRequest): Promise<_71.QueryInflationResponse>;
                annualProvisions(request?: _71.QueryAnnualProvisionsRequest): Promise<_71.QueryAnnualProvisionsResponse>;
            };
            LCDQueryClient: typeof _205.LCDQueryClient;
            registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
            load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
            MessageComposer: {
                encoded: {
                    updateParams(value: _72.MsgUpdateParams): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                };
                withTypeUrl: {
                    updateParams(value: _72.MsgUpdateParams): {
                        typeUrl: string;
                        value: _72.MsgUpdateParams;
                    };
                };
                fromPartial: {
                    updateParams(value: _72.MsgUpdateParams): {
                        typeUrl: string;
                        value: _72.MsgUpdateParams;
                    };
                };
            };
            AminoConverter: {
                "/cosmos.mint.v1beta1.MsgUpdateParams": {
                    aminoType: string;
                    toAmino: (message: _72.MsgUpdateParams) => _72.MsgUpdateParamsAmino;
                    fromAmino: (object: _72.MsgUpdateParamsAmino) => _72.MsgUpdateParams;
                };
            };
            MsgUpdateParams: {
                typeUrl: string;
                aminoType: string;
                encode(message: _72.MsgUpdateParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _72.MsgUpdateParams;
                fromPartial(object: {
                    authority?: string;
                    params?: {
                        mintDenom?: string;
                        inflationRateChange?: string;
                        inflationMax?: string;
                        inflationMin?: string;
                        goalBonded?: string;
                        blocksPerYear?: bigint;
                    };
                }): _72.MsgUpdateParams;
                fromAmino(object: _72.MsgUpdateParamsAmino): _72.MsgUpdateParams;
                toAmino(message: _72.MsgUpdateParams): _72.MsgUpdateParamsAmino;
                fromAminoMsg(object: _72.MsgUpdateParamsAminoMsg): _72.MsgUpdateParams;
                toAminoMsg(message: _72.MsgUpdateParams): _72.MsgUpdateParamsAminoMsg;
                fromProtoMsg(message: _72.MsgUpdateParamsProtoMsg): _72.MsgUpdateParams;
                toProto(message: _72.MsgUpdateParams): Uint8Array;
                toProtoMsg(message: _72.MsgUpdateParams): _72.MsgUpdateParamsProtoMsg;
            };
            MsgUpdateParamsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _72.MsgUpdateParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _72.MsgUpdateParamsResponse;
                fromPartial(_: {}): _72.MsgUpdateParamsResponse;
                fromAmino(_: _72.MsgUpdateParamsResponseAmino): _72.MsgUpdateParamsResponse;
                toAmino(_: _72.MsgUpdateParamsResponse): _72.MsgUpdateParamsResponseAmino;
                fromAminoMsg(object: _72.MsgUpdateParamsResponseAminoMsg): _72.MsgUpdateParamsResponse;
                toAminoMsg(message: _72.MsgUpdateParamsResponse): _72.MsgUpdateParamsResponseAminoMsg;
                fromProtoMsg(message: _72.MsgUpdateParamsResponseProtoMsg): _72.MsgUpdateParamsResponse;
                toProto(message: _72.MsgUpdateParamsResponse): Uint8Array;
                toProtoMsg(message: _72.MsgUpdateParamsResponse): _72.MsgUpdateParamsResponseProtoMsg;
            };
            QueryParamsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(_: _71.QueryParamsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _71.QueryParamsRequest;
                fromPartial(_: {}): _71.QueryParamsRequest;
                fromAmino(_: _71.QueryParamsRequestAmino): _71.QueryParamsRequest;
                toAmino(_: _71.QueryParamsRequest): _71.QueryParamsRequestAmino;
                fromAminoMsg(object: _71.QueryParamsRequestAminoMsg): _71.QueryParamsRequest;
                toAminoMsg(message: _71.QueryParamsRequest): _71.QueryParamsRequestAminoMsg;
                fromProtoMsg(message: _71.QueryParamsRequestProtoMsg): _71.QueryParamsRequest;
                toProto(message: _71.QueryParamsRequest): Uint8Array;
                toProtoMsg(message: _71.QueryParamsRequest): _71.QueryParamsRequestProtoMsg;
            };
            QueryParamsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _71.QueryParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _71.QueryParamsResponse;
                fromPartial(object: {
                    params?: {
                        mintDenom?: string;
                        inflationRateChange?: string;
                        inflationMax?: string;
                        inflationMin?: string;
                        goalBonded?: string;
                        blocksPerYear?: bigint;
                    };
                }): _71.QueryParamsResponse;
                fromAmino(object: _71.QueryParamsResponseAmino): _71.QueryParamsResponse;
                toAmino(message: _71.QueryParamsResponse): _71.QueryParamsResponseAmino;
                fromAminoMsg(object: _71.QueryParamsResponseAminoMsg): _71.QueryParamsResponse;
                toAminoMsg(message: _71.QueryParamsResponse): _71.QueryParamsResponseAminoMsg;
                fromProtoMsg(message: _71.QueryParamsResponseProtoMsg): _71.QueryParamsResponse;
                toProto(message: _71.QueryParamsResponse): Uint8Array;
                toProtoMsg(message: _71.QueryParamsResponse): _71.QueryParamsResponseProtoMsg;
            };
            QueryInflationRequest: {
                typeUrl: string;
                aminoType: string;
                encode(_: _71.QueryInflationRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _71.QueryInflationRequest;
                fromPartial(_: {}): _71.QueryInflationRequest;
                fromAmino(_: _71.QueryInflationRequestAmino): _71.QueryInflationRequest;
                toAmino(_: _71.QueryInflationRequest): _71.QueryInflationRequestAmino;
                fromAminoMsg(object: _71.QueryInflationRequestAminoMsg): _71.QueryInflationRequest;
                toAminoMsg(message: _71.QueryInflationRequest): _71.QueryInflationRequestAminoMsg;
                fromProtoMsg(message: _71.QueryInflationRequestProtoMsg): _71.QueryInflationRequest;
                toProto(message: _71.QueryInflationRequest): Uint8Array;
                toProtoMsg(message: _71.QueryInflationRequest): _71.QueryInflationRequestProtoMsg;
            };
            QueryInflationResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _71.QueryInflationResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _71.QueryInflationResponse;
                fromPartial(object: {
                    inflation?: Uint8Array;
                }): _71.QueryInflationResponse;
                fromAmino(object: _71.QueryInflationResponseAmino): _71.QueryInflationResponse;
                toAmino(message: _71.QueryInflationResponse): _71.QueryInflationResponseAmino;
                fromAminoMsg(object: _71.QueryInflationResponseAminoMsg): _71.QueryInflationResponse;
                toAminoMsg(message: _71.QueryInflationResponse): _71.QueryInflationResponseAminoMsg;
                fromProtoMsg(message: _71.QueryInflationResponseProtoMsg): _71.QueryInflationResponse;
                toProto(message: _71.QueryInflationResponse): Uint8Array;
                toProtoMsg(message: _71.QueryInflationResponse): _71.QueryInflationResponseProtoMsg;
            };
            QueryAnnualProvisionsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(_: _71.QueryAnnualProvisionsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _71.QueryAnnualProvisionsRequest;
                fromPartial(_: {}): _71.QueryAnnualProvisionsRequest;
                fromAmino(_: _71.QueryAnnualProvisionsRequestAmino): _71.QueryAnnualProvisionsRequest;
                toAmino(_: _71.QueryAnnualProvisionsRequest): _71.QueryAnnualProvisionsRequestAmino;
                fromAminoMsg(object: _71.QueryAnnualProvisionsRequestAminoMsg): _71.QueryAnnualProvisionsRequest;
                toAminoMsg(message: _71.QueryAnnualProvisionsRequest): _71.QueryAnnualProvisionsRequestAminoMsg;
                fromProtoMsg(message: _71.QueryAnnualProvisionsRequestProtoMsg): _71.QueryAnnualProvisionsRequest;
                toProto(message: _71.QueryAnnualProvisionsRequest): Uint8Array;
                toProtoMsg(message: _71.QueryAnnualProvisionsRequest): _71.QueryAnnualProvisionsRequestProtoMsg;
            };
            QueryAnnualProvisionsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _71.QueryAnnualProvisionsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _71.QueryAnnualProvisionsResponse;
                fromPartial(object: {
                    annualProvisions?: Uint8Array;
                }): _71.QueryAnnualProvisionsResponse;
                fromAmino(object: _71.QueryAnnualProvisionsResponseAmino): _71.QueryAnnualProvisionsResponse;
                toAmino(message: _71.QueryAnnualProvisionsResponse): _71.QueryAnnualProvisionsResponseAmino;
                fromAminoMsg(object: _71.QueryAnnualProvisionsResponseAminoMsg): _71.QueryAnnualProvisionsResponse;
                toAminoMsg(message: _71.QueryAnnualProvisionsResponse): _71.QueryAnnualProvisionsResponseAminoMsg;
                fromProtoMsg(message: _71.QueryAnnualProvisionsResponseProtoMsg): _71.QueryAnnualProvisionsResponse;
                toProto(message: _71.QueryAnnualProvisionsResponse): Uint8Array;
                toProtoMsg(message: _71.QueryAnnualProvisionsResponse): _71.QueryAnnualProvisionsResponseProtoMsg;
            };
            Minter: {
                typeUrl: string;
                aminoType: string;
                encode(message: _70.Minter, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _70.Minter;
                fromPartial(object: {
                    inflation?: string;
                    annualProvisions?: string;
                }): _70.Minter;
                fromAmino(object: _70.MinterAmino): _70.Minter;
                toAmino(message: _70.Minter): _70.MinterAmino;
                fromAminoMsg(object: _70.MinterAminoMsg): _70.Minter;
                toAminoMsg(message: _70.Minter): _70.MinterAminoMsg;
                fromProtoMsg(message: _70.MinterProtoMsg): _70.Minter;
                toProto(message: _70.Minter): Uint8Array;
                toProtoMsg(message: _70.Minter): _70.MinterProtoMsg;
            };
            Params: {
                typeUrl: string;
                aminoType: string;
                encode(message: _70.Params, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _70.Params;
                fromPartial(object: {
                    mintDenom?: string;
                    inflationRateChange?: string;
                    inflationMax?: string;
                    inflationMin?: string;
                    goalBonded?: string;
                    blocksPerYear?: bigint;
                }): _70.Params;
                fromAmino(object: _70.ParamsAmino): _70.Params;
                toAmino(message: _70.Params): _70.ParamsAmino;
                fromAminoMsg(object: _70.ParamsAminoMsg): _70.Params;
                toAminoMsg(message: _70.Params): _70.ParamsAminoMsg;
                fromProtoMsg(message: _70.ParamsProtoMsg): _70.Params;
                toProto(message: _70.Params): Uint8Array;
                toProtoMsg(message: _70.Params): _70.ParamsProtoMsg;
            };
            GenesisState: {
                typeUrl: string;
                aminoType: string;
                encode(message: _69.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _69.GenesisState;
                fromPartial(object: {
                    minter?: {
                        inflation?: string;
                        annualProvisions?: string;
                    };
                    params?: {
                        mintDenom?: string;
                        inflationRateChange?: string;
                        inflationMax?: string;
                        inflationMin?: string;
                        goalBonded?: string;
                        blocksPerYear?: bigint;
                    };
                }): _69.GenesisState;
                fromAmino(object: _69.GenesisStateAmino): _69.GenesisState;
                toAmino(message: _69.GenesisState): _69.GenesisStateAmino;
                fromAminoMsg(object: _69.GenesisStateAminoMsg): _69.GenesisState;
                toAminoMsg(message: _69.GenesisState): _69.GenesisStateAminoMsg;
                fromProtoMsg(message: _69.GenesisStateProtoMsg): _69.GenesisState;
                toProto(message: _69.GenesisState): Uint8Array;
                toProtoMsg(message: _69.GenesisState): _69.GenesisStateProtoMsg;
            };
        };
    }
    namespace msg {
        namespace textual {
            const v1: {};
        }
    }
    namespace nft {
        namespace module {
            const v1: {
                Module: {
                    typeUrl: string;
                    aminoType: string;
                    encode(_: _74.Module, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _74.Module;
                    fromPartial(_: {}): _74.Module;
                    fromAmino(_: _74.ModuleAmino): _74.Module;
                    toAmino(_: _74.Module): _74.ModuleAmino;
                    fromAminoMsg(object: _74.ModuleAminoMsg): _74.Module;
                    toAminoMsg(message: _74.Module): _74.ModuleAminoMsg;
                    fromProtoMsg(message: _74.ModuleProtoMsg): _74.Module;
                    toProto(message: _74.Module): Uint8Array;
                    toProtoMsg(message: _74.Module): _74.ModuleProtoMsg;
                };
            };
        }
    }
    namespace orm {
        namespace module {
            const v1alpha1: {
                Module: {
                    typeUrl: string;
                    aminoType: string;
                    encode(_: _75.Module, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _75.Module;
                    fromPartial(_: {}): _75.Module;
                    fromAmino(_: _75.ModuleAmino): _75.Module;
                    toAmino(_: _75.Module): _75.ModuleAmino;
                    fromAminoMsg(object: _75.ModuleAminoMsg): _75.Module;
                    toAminoMsg(message: _75.Module): _75.ModuleAminoMsg;
                    fromProtoMsg(message: _75.ModuleProtoMsg): _75.Module;
                    toProto(message: _75.Module): Uint8Array;
                    toProtoMsg(message: _75.Module): _75.ModuleProtoMsg;
                };
            };
        }
        namespace query {
            const v1alpha1: {
                QueryClientImpl: typeof _223.QueryClientImpl;
                createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                    get(request: _76.GetRequest): Promise<_76.GetResponse>;
                    list(request: _76.ListRequest): Promise<_76.ListResponse>;
                };
                GetRequest: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _76.GetRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _76.GetRequest;
                    fromPartial(object: {
                        messageName?: string;
                        index?: string;
                        values?: {
                            uint?: bigint;
                            int?: bigint;
                            str?: string;
                            bytes?: Uint8Array;
                            enum?: string;
                            bool?: boolean;
                            timestamp?: Date;
                            duration?: {
                                seconds?: bigint;
                                nanos?: number;
                            };
                        }[];
                    }): _76.GetRequest;
                    fromAmino(object: _76.GetRequestAmino): _76.GetRequest;
                    toAmino(message: _76.GetRequest): _76.GetRequestAmino;
                    fromAminoMsg(object: _76.GetRequestAminoMsg): _76.GetRequest;
                    toAminoMsg(message: _76.GetRequest): _76.GetRequestAminoMsg;
                    fromProtoMsg(message: _76.GetRequestProtoMsg): _76.GetRequest;
                    toProto(message: _76.GetRequest): Uint8Array;
                    toProtoMsg(message: _76.GetRequest): _76.GetRequestProtoMsg;
                };
                GetResponse: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _76.GetResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _76.GetResponse;
                    fromPartial(object: {
                        result?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                    }): _76.GetResponse;
                    fromAmino(object: _76.GetResponseAmino): _76.GetResponse;
                    toAmino(message: _76.GetResponse): _76.GetResponseAmino;
                    fromAminoMsg(object: _76.GetResponseAminoMsg): _76.GetResponse;
                    toAminoMsg(message: _76.GetResponse): _76.GetResponseAminoMsg;
                    fromProtoMsg(message: _76.GetResponseProtoMsg): _76.GetResponse;
                    toProto(message: _76.GetResponse): Uint8Array;
                    toProtoMsg(message: _76.GetResponse): _76.GetResponseProtoMsg;
                };
                ListRequest: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _76.ListRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _76.ListRequest;
                    fromPartial(object: {
                        messageName?: string;
                        index?: string;
                        prefix?: {
                            values?: {
                                uint?: bigint;
                                int?: bigint;
                                str?: string;
                                bytes?: Uint8Array;
                                enum?: string;
                                bool?: boolean;
                                timestamp?: Date;
                                duration?: {
                                    seconds?: bigint;
                                    nanos?: number;
                                };
                            }[];
                        };
                        range?: {
                            start?: {
                                uint?: bigint;
                                int?: bigint;
                                str?: string;
                                bytes?: Uint8Array;
                                enum?: string;
                                bool?: boolean;
                                timestamp?: Date;
                                duration?: {
                                    seconds?: bigint;
                                    nanos?: number;
                                };
                            }[];
                            end?: {
                                uint?: bigint;
                                int?: bigint;
                                str?: string;
                                bytes?: Uint8Array;
                                enum?: string;
                                bool?: boolean;
                                timestamp?: Date;
                                duration?: {
                                    seconds?: bigint;
                                    nanos?: number;
                                };
                            }[];
                        };
                        pagination?: {
                            key?: Uint8Array;
                            offset?: bigint;
                            limit?: bigint;
                            countTotal?: boolean;
                            reverse?: boolean;
                        };
                    }): _76.ListRequest;
                    fromAmino(object: _76.ListRequestAmino): _76.ListRequest;
                    toAmino(message: _76.ListRequest): _76.ListRequestAmino;
                    fromAminoMsg(object: _76.ListRequestAminoMsg): _76.ListRequest;
                    toAminoMsg(message: _76.ListRequest): _76.ListRequestAminoMsg;
                    fromProtoMsg(message: _76.ListRequestProtoMsg): _76.ListRequest;
                    toProto(message: _76.ListRequest): Uint8Array;
                    toProtoMsg(message: _76.ListRequest): _76.ListRequestProtoMsg;
                };
                ListRequest_Prefix: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _76.ListRequest_Prefix, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _76.ListRequest_Prefix;
                    fromPartial(object: {
                        values?: {
                            uint?: bigint;
                            int?: bigint;
                            str?: string;
                            bytes?: Uint8Array;
                            enum?: string;
                            bool?: boolean;
                            timestamp?: Date;
                            duration?: {
                                seconds?: bigint;
                                nanos?: number;
                            };
                        }[];
                    }): _76.ListRequest_Prefix;
                    fromAmino(object: _76.ListRequest_PrefixAmino): _76.ListRequest_Prefix;
                    toAmino(message: _76.ListRequest_Prefix): _76.ListRequest_PrefixAmino;
                    fromAminoMsg(object: _76.ListRequest_PrefixAminoMsg): _76.ListRequest_Prefix;
                    toAminoMsg(message: _76.ListRequest_Prefix): _76.ListRequest_PrefixAminoMsg;
                    fromProtoMsg(message: _76.ListRequest_PrefixProtoMsg): _76.ListRequest_Prefix;
                    toProto(message: _76.ListRequest_Prefix): Uint8Array;
                    toProtoMsg(message: _76.ListRequest_Prefix): _76.ListRequest_PrefixProtoMsg;
                };
                ListRequest_Range: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _76.ListRequest_Range, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _76.ListRequest_Range;
                    fromPartial(object: {
                        start?: {
                            uint?: bigint;
                            int?: bigint;
                            str?: string;
                            bytes?: Uint8Array;
                            enum?: string;
                            bool?: boolean;
                            timestamp?: Date;
                            duration?: {
                                seconds?: bigint;
                                nanos?: number;
                            };
                        }[];
                        end?: {
                            uint?: bigint;
                            int?: bigint;
                            str?: string;
                            bytes?: Uint8Array;
                            enum?: string;
                            bool?: boolean;
                            timestamp?: Date;
                            duration?: {
                                seconds?: bigint;
                                nanos?: number;
                            };
                        }[];
                    }): _76.ListRequest_Range;
                    fromAmino(object: _76.ListRequest_RangeAmino): _76.ListRequest_Range;
                    toAmino(message: _76.ListRequest_Range): _76.ListRequest_RangeAmino;
                    fromAminoMsg(object: _76.ListRequest_RangeAminoMsg): _76.ListRequest_Range;
                    toAminoMsg(message: _76.ListRequest_Range): _76.ListRequest_RangeAminoMsg;
                    fromProtoMsg(message: _76.ListRequest_RangeProtoMsg): _76.ListRequest_Range;
                    toProto(message: _76.ListRequest_Range): Uint8Array;
                    toProtoMsg(message: _76.ListRequest_Range): _76.ListRequest_RangeProtoMsg;
                };
                ListResponse: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _76.ListResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _76.ListResponse;
                    fromPartial(object: {
                        results?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        }[];
                        pagination?: {
                            nextKey?: Uint8Array;
                            total?: bigint;
                        };
                    }): _76.ListResponse;
                    fromAmino(object: _76.ListResponseAmino): _76.ListResponse;
                    toAmino(message: _76.ListResponse): _76.ListResponseAmino;
                    fromAminoMsg(object: _76.ListResponseAminoMsg): _76.ListResponse;
                    toAminoMsg(message: _76.ListResponse): _76.ListResponseAminoMsg;
                    fromProtoMsg(message: _76.ListResponseProtoMsg): _76.ListResponse;
                    toProto(message: _76.ListResponse): Uint8Array;
                    toProtoMsg(message: _76.ListResponse): _76.ListResponseProtoMsg;
                };
                IndexValue: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _76.IndexValue, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _76.IndexValue;
                    fromPartial(object: {
                        uint?: bigint;
                        int?: bigint;
                        str?: string;
                        bytes?: Uint8Array;
                        enum?: string;
                        bool?: boolean;
                        timestamp?: Date;
                        duration?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                    }): _76.IndexValue;
                    fromAmino(object: _76.IndexValueAmino): _76.IndexValue;
                    toAmino(message: _76.IndexValue): _76.IndexValueAmino;
                    fromAminoMsg(object: _76.IndexValueAminoMsg): _76.IndexValue;
                    toAminoMsg(message: _76.IndexValue): _76.IndexValueAminoMsg;
                    fromProtoMsg(message: _76.IndexValueProtoMsg): _76.IndexValue;
                    toProto(message: _76.IndexValue): Uint8Array;
                    toProtoMsg(message: _76.IndexValue): _76.IndexValueProtoMsg;
                };
            };
        }
    }
    namespace params {
        namespace module {
            const v1: {
                Module: {
                    typeUrl: string;
                    aminoType: string;
                    encode(_: _77.Module, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _77.Module;
                    fromPartial(_: {}): _77.Module;
                    fromAmino(_: _77.ModuleAmino): _77.Module;
                    toAmino(_: _77.Module): _77.ModuleAmino;
                    fromAminoMsg(object: _77.ModuleAminoMsg): _77.Module;
                    toAminoMsg(message: _77.Module): _77.ModuleAminoMsg;
                    fromProtoMsg(message: _77.ModuleProtoMsg): _77.Module;
                    toProto(message: _77.Module): Uint8Array;
                    toProtoMsg(message: _77.Module): _77.ModuleProtoMsg;
                };
            };
        }
        const v1beta1: {
            QueryClientImpl: typeof _224.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                params(request: _79.QueryParamsRequest): Promise<_79.QueryParamsResponse>;
                subspaces(request?: _79.QuerySubspacesRequest): Promise<_79.QuerySubspacesResponse>;
            };
            LCDQueryClient: typeof _206.LCDQueryClient;
            QueryParamsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _79.QueryParamsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _79.QueryParamsRequest;
                fromPartial(object: {
                    subspace?: string;
                    key?: string;
                }): _79.QueryParamsRequest;
                fromAmino(object: _79.QueryParamsRequestAmino): _79.QueryParamsRequest;
                toAmino(message: _79.QueryParamsRequest): _79.QueryParamsRequestAmino;
                fromAminoMsg(object: _79.QueryParamsRequestAminoMsg): _79.QueryParamsRequest;
                toAminoMsg(message: _79.QueryParamsRequest): _79.QueryParamsRequestAminoMsg;
                fromProtoMsg(message: _79.QueryParamsRequestProtoMsg): _79.QueryParamsRequest;
                toProto(message: _79.QueryParamsRequest): Uint8Array;
                toProtoMsg(message: _79.QueryParamsRequest): _79.QueryParamsRequestProtoMsg;
            };
            QueryParamsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _79.QueryParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _79.QueryParamsResponse;
                fromPartial(object: {
                    param?: {
                        subspace?: string;
                        key?: string;
                        value?: string;
                    };
                }): _79.QueryParamsResponse;
                fromAmino(object: _79.QueryParamsResponseAmino): _79.QueryParamsResponse;
                toAmino(message: _79.QueryParamsResponse): _79.QueryParamsResponseAmino;
                fromAminoMsg(object: _79.QueryParamsResponseAminoMsg): _79.QueryParamsResponse;
                toAminoMsg(message: _79.QueryParamsResponse): _79.QueryParamsResponseAminoMsg;
                fromProtoMsg(message: _79.QueryParamsResponseProtoMsg): _79.QueryParamsResponse;
                toProto(message: _79.QueryParamsResponse): Uint8Array;
                toProtoMsg(message: _79.QueryParamsResponse): _79.QueryParamsResponseProtoMsg;
            };
            QuerySubspacesRequest: {
                typeUrl: string;
                aminoType: string;
                encode(_: _79.QuerySubspacesRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _79.QuerySubspacesRequest;
                fromPartial(_: {}): _79.QuerySubspacesRequest;
                fromAmino(_: _79.QuerySubspacesRequestAmino): _79.QuerySubspacesRequest;
                toAmino(_: _79.QuerySubspacesRequest): _79.QuerySubspacesRequestAmino;
                fromAminoMsg(object: _79.QuerySubspacesRequestAminoMsg): _79.QuerySubspacesRequest;
                toAminoMsg(message: _79.QuerySubspacesRequest): _79.QuerySubspacesRequestAminoMsg;
                fromProtoMsg(message: _79.QuerySubspacesRequestProtoMsg): _79.QuerySubspacesRequest;
                toProto(message: _79.QuerySubspacesRequest): Uint8Array;
                toProtoMsg(message: _79.QuerySubspacesRequest): _79.QuerySubspacesRequestProtoMsg;
            };
            QuerySubspacesResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _79.QuerySubspacesResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _79.QuerySubspacesResponse;
                fromPartial(object: {
                    subspaces?: {
                        subspace?: string;
                        keys?: string[];
                    }[];
                }): _79.QuerySubspacesResponse;
                fromAmino(object: _79.QuerySubspacesResponseAmino): _79.QuerySubspacesResponse;
                toAmino(message: _79.QuerySubspacesResponse): _79.QuerySubspacesResponseAmino;
                fromAminoMsg(object: _79.QuerySubspacesResponseAminoMsg): _79.QuerySubspacesResponse;
                toAminoMsg(message: _79.QuerySubspacesResponse): _79.QuerySubspacesResponseAminoMsg;
                fromProtoMsg(message: _79.QuerySubspacesResponseProtoMsg): _79.QuerySubspacesResponse;
                toProto(message: _79.QuerySubspacesResponse): Uint8Array;
                toProtoMsg(message: _79.QuerySubspacesResponse): _79.QuerySubspacesResponseProtoMsg;
            };
            Subspace: {
                typeUrl: string;
                aminoType: string;
                encode(message: _79.Subspace, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _79.Subspace;
                fromPartial(object: {
                    subspace?: string;
                    keys?: string[];
                }): _79.Subspace;
                fromAmino(object: _79.SubspaceAmino): _79.Subspace;
                toAmino(message: _79.Subspace): _79.SubspaceAmino;
                fromAminoMsg(object: _79.SubspaceAminoMsg): _79.Subspace;
                toAminoMsg(message: _79.Subspace): _79.SubspaceAminoMsg;
                fromProtoMsg(message: _79.SubspaceProtoMsg): _79.Subspace;
                toProto(message: _79.Subspace): Uint8Array;
                toProtoMsg(message: _79.Subspace): _79.SubspaceProtoMsg;
            };
            ParameterChangeProposal: {
                typeUrl: string;
                aminoType: string;
                encode(message: _78.ParameterChangeProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _78.ParameterChangeProposal;
                fromPartial(object: {
                    $typeUrl?: "/cosmos.params.v1beta1.ParameterChangeProposal";
                    title?: string;
                    description?: string;
                    changes?: {
                        subspace?: string;
                        key?: string;
                        value?: string;
                    }[];
                }): _78.ParameterChangeProposal;
                fromAmino(object: _78.ParameterChangeProposalAmino): _78.ParameterChangeProposal;
                toAmino(message: _78.ParameterChangeProposal): _78.ParameterChangeProposalAmino;
                fromAminoMsg(object: _78.ParameterChangeProposalAminoMsg): _78.ParameterChangeProposal;
                toAminoMsg(message: _78.ParameterChangeProposal): _78.ParameterChangeProposalAminoMsg;
                fromProtoMsg(message: _78.ParameterChangeProposalProtoMsg): _78.ParameterChangeProposal;
                toProto(message: _78.ParameterChangeProposal): Uint8Array;
                toProtoMsg(message: _78.ParameterChangeProposal): _78.ParameterChangeProposalProtoMsg;
            };
            ParamChange: {
                typeUrl: string;
                aminoType: string;
                encode(message: _78.ParamChange, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _78.ParamChange;
                fromPartial(object: {
                    subspace?: string;
                    key?: string;
                    value?: string;
                }): _78.ParamChange;
                fromAmino(object: _78.ParamChangeAmino): _78.ParamChange;
                toAmino(message: _78.ParamChange): _78.ParamChangeAmino;
                fromAminoMsg(object: _78.ParamChangeAminoMsg): _78.ParamChange;
                toAminoMsg(message: _78.ParamChange): _78.ParamChangeAminoMsg;
                fromProtoMsg(message: _78.ParamChangeProtoMsg): _78.ParamChange;
                toProto(message: _78.ParamChange): Uint8Array;
                toProtoMsg(message: _78.ParamChange): _78.ParamChangeProtoMsg;
            };
        };
    }
    namespace query {
        const v1: {};
    }
    namespace reflection {
        const v1: {
            FileDescriptorsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(_: _81.FileDescriptorsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _81.FileDescriptorsRequest;
                fromPartial(_: {}): _81.FileDescriptorsRequest;
                fromAmino(_: _81.FileDescriptorsRequestAmino): _81.FileDescriptorsRequest;
                toAmino(_: _81.FileDescriptorsRequest): _81.FileDescriptorsRequestAmino;
                fromAminoMsg(object: _81.FileDescriptorsRequestAminoMsg): _81.FileDescriptorsRequest;
                toAminoMsg(message: _81.FileDescriptorsRequest): _81.FileDescriptorsRequestAminoMsg;
                fromProtoMsg(message: _81.FileDescriptorsRequestProtoMsg): _81.FileDescriptorsRequest;
                toProto(message: _81.FileDescriptorsRequest): Uint8Array;
                toProtoMsg(message: _81.FileDescriptorsRequest): _81.FileDescriptorsRequestProtoMsg;
            };
            FileDescriptorsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _81.FileDescriptorsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _81.FileDescriptorsResponse;
                fromPartial(object: {
                    files?: {
                        name?: string;
                        package?: string;
                        dependency?: string[];
                        publicDependency?: number[];
                        weakDependency?: number[];
                        messageType?: {
                            name?: string;
                            field?: {
                                name?: string;
                                number?: number;
                                label?: import("../google/protobuf/descriptor").FieldDescriptorProto_Label;
                                type?: import("../google/protobuf/descriptor").FieldDescriptorProto_Type;
                                typeName?: string;
                                extendee?: string;
                                defaultValue?: string;
                                oneofIndex?: number;
                                jsonName?: string;
                                options?: {
                                    ctype?: import("../google/protobuf/descriptor").FieldOptions_CType;
                                    packed?: boolean;
                                    jstype?: import("../google/protobuf/descriptor").FieldOptions_JSType;
                                    lazy?: boolean;
                                    deprecated?: boolean;
                                    weak?: boolean;
                                    uninterpretedOption?: {
                                        name?: {
                                            namePart?: string;
                                            isExtension?: boolean;
                                        }[];
                                        identifierValue?: string;
                                        positiveIntValue?: bigint;
                                        negativeIntValue?: bigint;
                                        doubleValue?: number;
                                        stringValue?: Uint8Array;
                                        aggregateValue?: string;
                                    }[];
                                };
                            }[];
                            extension?: {
                                name?: string;
                                number?: number;
                                label?: import("../google/protobuf/descriptor").FieldDescriptorProto_Label;
                                type?: import("../google/protobuf/descriptor").FieldDescriptorProto_Type;
                                typeName?: string;
                                extendee?: string;
                                defaultValue?: string;
                                oneofIndex?: number;
                                jsonName?: string;
                                options?: {
                                    ctype?: import("../google/protobuf/descriptor").FieldOptions_CType;
                                    packed?: boolean;
                                    jstype?: import("../google/protobuf/descriptor").FieldOptions_JSType;
                                    lazy?: boolean;
                                    deprecated?: boolean;
                                    weak?: boolean;
                                    uninterpretedOption?: {
                                        name?: {
                                            namePart?: string;
                                            isExtension?: boolean;
                                        }[];
                                        identifierValue?: string;
                                        positiveIntValue?: bigint;
                                        negativeIntValue?: bigint;
                                        doubleValue?: number;
                                        stringValue?: Uint8Array;
                                        aggregateValue?: string;
                                    }[];
                                };
                            }[];
                            nestedType?: any[];
                            enumType?: {
                                name?: string;
                                value?: {
                                    name?: string;
                                    number?: number;
                                    options?: {
                                        deprecated?: boolean;
                                        uninterpretedOption?: {
                                            name?: {
                                                namePart?: string;
                                                isExtension?: boolean;
                                            }[];
                                            identifierValue?: string;
                                            positiveIntValue?: bigint;
                                            negativeIntValue?: bigint;
                                            doubleValue?: number;
                                            stringValue?: Uint8Array;
                                            aggregateValue?: string;
                                        }[];
                                    };
                                }[];
                                options?: {
                                    allowAlias?: boolean;
                                    deprecated?: boolean;
                                    uninterpretedOption?: {
                                        name?: {
                                            namePart?: string;
                                            isExtension?: boolean;
                                        }[];
                                        identifierValue?: string;
                                        positiveIntValue?: bigint;
                                        negativeIntValue?: bigint;
                                        doubleValue?: number;
                                        stringValue?: Uint8Array;
                                        aggregateValue?: string;
                                    }[];
                                };
                                reservedRange?: {
                                    start?: number;
                                    end?: number;
                                }[];
                                reservedName?: string[];
                            }[];
                            extensionRange?: {
                                start?: number;
                                end?: number;
                                options?: {
                                    uninterpretedOption?: {
                                        name?: {
                                            namePart?: string;
                                            isExtension?: boolean;
                                        }[];
                                        identifierValue?: string;
                                        positiveIntValue?: bigint;
                                        negativeIntValue?: bigint;
                                        doubleValue?: number;
                                        stringValue?: Uint8Array;
                                        aggregateValue?: string;
                                    }[];
                                };
                            }[];
                            oneofDecl?: {
                                name?: string;
                                options?: {
                                    uninterpretedOption?: {
                                        name?: {
                                            namePart?: string;
                                            isExtension?: boolean;
                                        }[];
                                        identifierValue?: string;
                                        positiveIntValue?: bigint;
                                        negativeIntValue?: bigint;
                                        doubleValue?: number;
                                        stringValue?: Uint8Array;
                                        aggregateValue?: string;
                                    }[];
                                };
                            }[];
                            options?: {
                                messageSetWireFormat?: boolean;
                                noStandardDescriptorAccessor?: boolean;
                                deprecated?: boolean;
                                mapEntry?: boolean;
                                uninterpretedOption?: {
                                    name?: {
                                        namePart?: string;
                                        isExtension?: boolean;
                                    }[];
                                    identifierValue?: string;
                                    positiveIntValue?: bigint;
                                    negativeIntValue?: bigint;
                                    doubleValue?: number;
                                    stringValue?: Uint8Array;
                                    aggregateValue?: string;
                                }[];
                            };
                            reservedRange?: {
                                start?: number;
                                end?: number;
                            }[];
                            reservedName?: string[];
                        }[];
                        enumType?: {
                            name?: string;
                            value?: {
                                name?: string;
                                number?: number;
                                options?: {
                                    deprecated?: boolean;
                                    uninterpretedOption?: {
                                        name?: {
                                            namePart?: string;
                                            isExtension?: boolean;
                                        }[];
                                        identifierValue?: string;
                                        positiveIntValue?: bigint;
                                        negativeIntValue?: bigint;
                                        doubleValue?: number;
                                        stringValue?: Uint8Array;
                                        aggregateValue?: string;
                                    }[];
                                };
                            }[];
                            options?: {
                                allowAlias?: boolean;
                                deprecated?: boolean;
                                uninterpretedOption?: {
                                    name?: {
                                        namePart?: string;
                                        isExtension?: boolean;
                                    }[];
                                    identifierValue?: string;
                                    positiveIntValue?: bigint;
                                    negativeIntValue?: bigint;
                                    doubleValue?: number;
                                    stringValue?: Uint8Array;
                                    aggregateValue?: string;
                                }[];
                            };
                            reservedRange?: {
                                start?: number;
                                end?: number;
                            }[];
                            reservedName?: string[];
                        }[];
                        service?: {
                            name?: string;
                            method?: {
                                name?: string;
                                inputType?: string;
                                outputType?: string;
                                options?: {
                                    deprecated?: boolean;
                                    idempotencyLevel?: import("../google/protobuf/descriptor").MethodOptions_IdempotencyLevel;
                                    uninterpretedOption?: {
                                        name?: {
                                            namePart?: string;
                                            isExtension?: boolean;
                                        }[];
                                        identifierValue?: string;
                                        positiveIntValue?: bigint;
                                        negativeIntValue?: bigint;
                                        doubleValue?: number;
                                        stringValue?: Uint8Array;
                                        aggregateValue?: string;
                                    }[];
                                };
                                clientStreaming?: boolean;
                                serverStreaming?: boolean;
                            }[];
                            options?: {
                                deprecated?: boolean;
                                uninterpretedOption?: {
                                    name?: {
                                        namePart?: string;
                                        isExtension?: boolean;
                                    }[];
                                    identifierValue?: string;
                                    positiveIntValue?: bigint;
                                    negativeIntValue?: bigint;
                                    doubleValue?: number;
                                    stringValue?: Uint8Array;
                                    aggregateValue?: string;
                                }[];
                            };
                        }[];
                        extension?: {
                            name?: string;
                            number?: number;
                            label?: import("../google/protobuf/descriptor").FieldDescriptorProto_Label;
                            type?: import("../google/protobuf/descriptor").FieldDescriptorProto_Type;
                            typeName?: string;
                            extendee?: string;
                            defaultValue?: string;
                            oneofIndex?: number;
                            jsonName?: string;
                            options?: {
                                ctype?: import("../google/protobuf/descriptor").FieldOptions_CType;
                                packed?: boolean;
                                jstype?: import("../google/protobuf/descriptor").FieldOptions_JSType;
                                lazy?: boolean;
                                deprecated?: boolean;
                                weak?: boolean;
                                uninterpretedOption?: {
                                    name?: {
                                        namePart?: string;
                                        isExtension?: boolean;
                                    }[];
                                    identifierValue?: string;
                                    positiveIntValue?: bigint;
                                    negativeIntValue?: bigint;
                                    doubleValue?: number;
                                    stringValue?: Uint8Array;
                                    aggregateValue?: string;
                                }[];
                            };
                        }[];
                        options?: {
                            javaPackage?: string;
                            javaOuterClassname?: string;
                            javaMultipleFiles?: boolean;
                            javaGenerateEqualsAndHash?: boolean;
                            javaStringCheckUtf8?: boolean;
                            optimizeFor?: import("../google/protobuf/descriptor").FileOptions_OptimizeMode;
                            goPackage?: string;
                            ccGenericServices?: boolean;
                            javaGenericServices?: boolean;
                            pyGenericServices?: boolean;
                            phpGenericServices?: boolean;
                            deprecated?: boolean;
                            ccEnableArenas?: boolean;
                            objcClassPrefix?: string;
                            csharpNamespace?: string;
                            swiftPrefix?: string;
                            phpClassPrefix?: string;
                            phpNamespace?: string;
                            phpMetadataNamespace?: string;
                            rubyPackage?: string;
                            uninterpretedOption?: {
                                name?: {
                                    namePart?: string;
                                    isExtension?: boolean;
                                }[];
                                identifierValue?: string;
                                positiveIntValue?: bigint;
                                negativeIntValue?: bigint;
                                doubleValue?: number;
                                stringValue?: Uint8Array;
                                aggregateValue?: string;
                            }[];
                        };
                        sourceCodeInfo?: {
                            location?: {
                                path?: number[];
                                span?: number[];
                                leadingComments?: string;
                                trailingComments?: string;
                                leadingDetachedComments?: string[];
                            }[];
                        };
                        syntax?: string;
                    }[];
                }): _81.FileDescriptorsResponse;
                fromAmino(object: _81.FileDescriptorsResponseAmino): _81.FileDescriptorsResponse;
                toAmino(message: _81.FileDescriptorsResponse): _81.FileDescriptorsResponseAmino;
                fromAminoMsg(object: _81.FileDescriptorsResponseAminoMsg): _81.FileDescriptorsResponse;
                toAminoMsg(message: _81.FileDescriptorsResponse): _81.FileDescriptorsResponseAminoMsg;
                fromProtoMsg(message: _81.FileDescriptorsResponseProtoMsg): _81.FileDescriptorsResponse;
                toProto(message: _81.FileDescriptorsResponse): Uint8Array;
                toProtoMsg(message: _81.FileDescriptorsResponse): _81.FileDescriptorsResponseProtoMsg;
            };
        };
    }
    namespace slashing {
        namespace module {
            const v1: {
                Module: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _82.Module, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _82.Module;
                    fromPartial(object: {
                        authority?: string;
                    }): _82.Module;
                    fromAmino(object: _82.ModuleAmino): _82.Module;
                    toAmino(message: _82.Module): _82.ModuleAmino;
                    fromAminoMsg(object: _82.ModuleAminoMsg): _82.Module;
                    toAminoMsg(message: _82.Module): _82.ModuleAminoMsg;
                    fromProtoMsg(message: _82.ModuleProtoMsg): _82.Module;
                    toProto(message: _82.Module): Uint8Array;
                    toProtoMsg(message: _82.Module): _82.ModuleProtoMsg;
                };
            };
        }
    }
    namespace staking {
        namespace module {
            const v1: {
                Module: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _83.Module, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _83.Module;
                    fromPartial(object: {
                        hooksOrder?: string[];
                        authority?: string;
                        bech32PrefixValidator?: string;
                        bech32PrefixConsensus?: string;
                    }): _83.Module;
                    fromAmino(object: _83.ModuleAmino): _83.Module;
                    toAmino(message: _83.Module): _83.ModuleAmino;
                    fromAminoMsg(object: _83.ModuleAminoMsg): _83.Module;
                    toAminoMsg(message: _83.Module): _83.ModuleAminoMsg;
                    fromProtoMsg(message: _83.ModuleProtoMsg): _83.Module;
                    toProto(message: _83.Module): Uint8Array;
                    toProtoMsg(message: _83.Module): _83.ModuleProtoMsg;
                };
            };
        }
        const v1beta1: {
            MsgClientImpl: typeof _240.MsgClientImpl;
            QueryClientImpl: typeof _225.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                validators(request: _86.QueryValidatorsRequest): Promise<_86.QueryValidatorsResponse>;
                validator(request: _86.QueryValidatorRequest): Promise<_86.QueryValidatorResponse>;
                validatorDelegations(request: _86.QueryValidatorDelegationsRequest): Promise<_86.QueryValidatorDelegationsResponse>;
                validatorUnbondingDelegations(request: _86.QueryValidatorUnbondingDelegationsRequest): Promise<_86.QueryValidatorUnbondingDelegationsResponse>;
                delegation(request: _86.QueryDelegationRequest): Promise<_86.QueryDelegationResponse>;
                unbondingDelegation(request: _86.QueryUnbondingDelegationRequest): Promise<_86.QueryUnbondingDelegationResponse>;
                delegatorDelegations(request: _86.QueryDelegatorDelegationsRequest): Promise<_86.QueryDelegatorDelegationsResponse>;
                delegatorUnbondingDelegations(request: _86.QueryDelegatorUnbondingDelegationsRequest): Promise<_86.QueryDelegatorUnbondingDelegationsResponse>;
                redelegations(request: _86.QueryRedelegationsRequest): Promise<_86.QueryRedelegationsResponse>;
                delegatorValidators(request: _86.QueryDelegatorValidatorsRequest): Promise<_86.QueryDelegatorValidatorsResponse>;
                delegatorValidator(request: _86.QueryDelegatorValidatorRequest): Promise<_86.QueryDelegatorValidatorResponse>;
                historicalInfo(request: _86.QueryHistoricalInfoRequest): Promise<_86.QueryHistoricalInfoResponse>;
                pool(request?: _86.QueryPoolRequest): Promise<_86.QueryPoolResponse>;
                params(request?: _86.QueryParamsRequest): Promise<_86.QueryParamsResponse>;
            };
            LCDQueryClient: typeof _207.LCDQueryClient;
            registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
            load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
            MessageComposer: {
                encoded: {
                    createValidator(value: _88.MsgCreateValidator): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    editValidator(value: _88.MsgEditValidator): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    delegate(value: _88.MsgDelegate): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    beginRedelegate(value: _88.MsgBeginRedelegate): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    undelegate(value: _88.MsgUndelegate): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    cancelUnbondingDelegation(value: _88.MsgCancelUnbondingDelegation): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    updateParams(value: _88.MsgUpdateParams): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                };
                withTypeUrl: {
                    createValidator(value: _88.MsgCreateValidator): {
                        typeUrl: string;
                        value: _88.MsgCreateValidator;
                    };
                    editValidator(value: _88.MsgEditValidator): {
                        typeUrl: string;
                        value: _88.MsgEditValidator;
                    };
                    delegate(value: _88.MsgDelegate): {
                        typeUrl: string;
                        value: _88.MsgDelegate;
                    };
                    beginRedelegate(value: _88.MsgBeginRedelegate): {
                        typeUrl: string;
                        value: _88.MsgBeginRedelegate;
                    };
                    undelegate(value: _88.MsgUndelegate): {
                        typeUrl: string;
                        value: _88.MsgUndelegate;
                    };
                    cancelUnbondingDelegation(value: _88.MsgCancelUnbondingDelegation): {
                        typeUrl: string;
                        value: _88.MsgCancelUnbondingDelegation;
                    };
                    updateParams(value: _88.MsgUpdateParams): {
                        typeUrl: string;
                        value: _88.MsgUpdateParams;
                    };
                };
                fromPartial: {
                    createValidator(value: _88.MsgCreateValidator): {
                        typeUrl: string;
                        value: _88.MsgCreateValidator;
                    };
                    editValidator(value: _88.MsgEditValidator): {
                        typeUrl: string;
                        value: _88.MsgEditValidator;
                    };
                    delegate(value: _88.MsgDelegate): {
                        typeUrl: string;
                        value: _88.MsgDelegate;
                    };
                    beginRedelegate(value: _88.MsgBeginRedelegate): {
                        typeUrl: string;
                        value: _88.MsgBeginRedelegate;
                    };
                    undelegate(value: _88.MsgUndelegate): {
                        typeUrl: string;
                        value: _88.MsgUndelegate;
                    };
                    cancelUnbondingDelegation(value: _88.MsgCancelUnbondingDelegation): {
                        typeUrl: string;
                        value: _88.MsgCancelUnbondingDelegation;
                    };
                    updateParams(value: _88.MsgUpdateParams): {
                        typeUrl: string;
                        value: _88.MsgUpdateParams;
                    };
                };
            };
            AminoConverter: {
                "/cosmos.staking.v1beta1.MsgCreateValidator": {
                    aminoType: string;
                    toAmino: (message: _88.MsgCreateValidator) => _88.MsgCreateValidatorAmino;
                    fromAmino: (object: _88.MsgCreateValidatorAmino) => _88.MsgCreateValidator;
                };
                "/cosmos.staking.v1beta1.MsgEditValidator": {
                    aminoType: string;
                    toAmino: (message: _88.MsgEditValidator) => _88.MsgEditValidatorAmino;
                    fromAmino: (object: _88.MsgEditValidatorAmino) => _88.MsgEditValidator;
                };
                "/cosmos.staking.v1beta1.MsgDelegate": {
                    aminoType: string;
                    toAmino: (message: _88.MsgDelegate) => _88.MsgDelegateAmino;
                    fromAmino: (object: _88.MsgDelegateAmino) => _88.MsgDelegate;
                };
                "/cosmos.staking.v1beta1.MsgBeginRedelegate": {
                    aminoType: string;
                    toAmino: (message: _88.MsgBeginRedelegate) => _88.MsgBeginRedelegateAmino;
                    fromAmino: (object: _88.MsgBeginRedelegateAmino) => _88.MsgBeginRedelegate;
                };
                "/cosmos.staking.v1beta1.MsgUndelegate": {
                    aminoType: string;
                    toAmino: (message: _88.MsgUndelegate) => _88.MsgUndelegateAmino;
                    fromAmino: (object: _88.MsgUndelegateAmino) => _88.MsgUndelegate;
                };
                "/cosmos.staking.v1beta1.MsgCancelUnbondingDelegation": {
                    aminoType: string;
                    toAmino: (message: _88.MsgCancelUnbondingDelegation) => _88.MsgCancelUnbondingDelegationAmino;
                    fromAmino: (object: _88.MsgCancelUnbondingDelegationAmino) => _88.MsgCancelUnbondingDelegation;
                };
                "/cosmos.staking.v1beta1.MsgUpdateParams": {
                    aminoType: string;
                    toAmino: (message: _88.MsgUpdateParams) => _88.MsgUpdateParamsAmino;
                    fromAmino: (object: _88.MsgUpdateParamsAmino) => _88.MsgUpdateParams;
                };
            };
            MsgCreateValidator: {
                typeUrl: string;
                aminoType: string;
                encode(message: _88.MsgCreateValidator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _88.MsgCreateValidator;
                fromPartial(object: {
                    description?: {
                        moniker?: string;
                        identity?: string;
                        website?: string;
                        securityContact?: string;
                        details?: string;
                    };
                    commission?: {
                        rate?: string;
                        maxRate?: string;
                        maxChangeRate?: string;
                    };
                    minSelfDelegation?: string;
                    delegatorAddress?: string;
                    validatorAddress?: string;
                    pubkey?: {
                        $typeUrl?: string;
                        typeUrl?: string;
                        value?: Uint8Array;
                    };
                    value?: {
                        denom?: string;
                        amount?: string;
                    };
                }): _88.MsgCreateValidator;
                fromAmino(object: _88.MsgCreateValidatorAmino): _88.MsgCreateValidator;
                toAmino(message: _88.MsgCreateValidator): _88.MsgCreateValidatorAmino;
                fromAminoMsg(object: _88.MsgCreateValidatorAminoMsg): _88.MsgCreateValidator;
                toAminoMsg(message: _88.MsgCreateValidator): _88.MsgCreateValidatorAminoMsg;
                fromProtoMsg(message: _88.MsgCreateValidatorProtoMsg): _88.MsgCreateValidator;
                toProto(message: _88.MsgCreateValidator): Uint8Array;
                toProtoMsg(message: _88.MsgCreateValidator): _88.MsgCreateValidatorProtoMsg;
            };
            MsgCreateValidatorResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _88.MsgCreateValidatorResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _88.MsgCreateValidatorResponse;
                fromPartial(_: {}): _88.MsgCreateValidatorResponse;
                fromAmino(_: _88.MsgCreateValidatorResponseAmino): _88.MsgCreateValidatorResponse;
                toAmino(_: _88.MsgCreateValidatorResponse): _88.MsgCreateValidatorResponseAmino;
                fromAminoMsg(object: _88.MsgCreateValidatorResponseAminoMsg): _88.MsgCreateValidatorResponse;
                toAminoMsg(message: _88.MsgCreateValidatorResponse): _88.MsgCreateValidatorResponseAminoMsg;
                fromProtoMsg(message: _88.MsgCreateValidatorResponseProtoMsg): _88.MsgCreateValidatorResponse;
                toProto(message: _88.MsgCreateValidatorResponse): Uint8Array;
                toProtoMsg(message: _88.MsgCreateValidatorResponse): _88.MsgCreateValidatorResponseProtoMsg;
            };
            MsgEditValidator: {
                typeUrl: string;
                aminoType: string;
                encode(message: _88.MsgEditValidator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _88.MsgEditValidator;
                fromPartial(object: {
                    description?: {
                        moniker?: string;
                        identity?: string;
                        website?: string;
                        securityContact?: string;
                        details?: string;
                    };
                    validatorAddress?: string;
                    commissionRate?: string;
                    minSelfDelegation?: string;
                }): _88.MsgEditValidator;
                fromAmino(object: _88.MsgEditValidatorAmino): _88.MsgEditValidator;
                toAmino(message: _88.MsgEditValidator): _88.MsgEditValidatorAmino;
                fromAminoMsg(object: _88.MsgEditValidatorAminoMsg): _88.MsgEditValidator;
                toAminoMsg(message: _88.MsgEditValidator): _88.MsgEditValidatorAminoMsg;
                fromProtoMsg(message: _88.MsgEditValidatorProtoMsg): _88.MsgEditValidator;
                toProto(message: _88.MsgEditValidator): Uint8Array;
                toProtoMsg(message: _88.MsgEditValidator): _88.MsgEditValidatorProtoMsg;
            };
            MsgEditValidatorResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _88.MsgEditValidatorResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _88.MsgEditValidatorResponse;
                fromPartial(_: {}): _88.MsgEditValidatorResponse;
                fromAmino(_: _88.MsgEditValidatorResponseAmino): _88.MsgEditValidatorResponse;
                toAmino(_: _88.MsgEditValidatorResponse): _88.MsgEditValidatorResponseAmino;
                fromAminoMsg(object: _88.MsgEditValidatorResponseAminoMsg): _88.MsgEditValidatorResponse;
                toAminoMsg(message: _88.MsgEditValidatorResponse): _88.MsgEditValidatorResponseAminoMsg;
                fromProtoMsg(message: _88.MsgEditValidatorResponseProtoMsg): _88.MsgEditValidatorResponse;
                toProto(message: _88.MsgEditValidatorResponse): Uint8Array;
                toProtoMsg(message: _88.MsgEditValidatorResponse): _88.MsgEditValidatorResponseProtoMsg;
            };
            MsgDelegate: {
                typeUrl: string;
                aminoType: string;
                encode(message: _88.MsgDelegate, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _88.MsgDelegate;
                fromPartial(object: {
                    delegatorAddress?: string;
                    validatorAddress?: string;
                    amount?: {
                        denom?: string;
                        amount?: string;
                    };
                }): _88.MsgDelegate;
                fromAmino(object: _88.MsgDelegateAmino): _88.MsgDelegate;
                toAmino(message: _88.MsgDelegate): _88.MsgDelegateAmino;
                fromAminoMsg(object: _88.MsgDelegateAminoMsg): _88.MsgDelegate;
                toAminoMsg(message: _88.MsgDelegate): _88.MsgDelegateAminoMsg;
                fromProtoMsg(message: _88.MsgDelegateProtoMsg): _88.MsgDelegate;
                toProto(message: _88.MsgDelegate): Uint8Array;
                toProtoMsg(message: _88.MsgDelegate): _88.MsgDelegateProtoMsg;
            };
            MsgDelegateResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _88.MsgDelegateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _88.MsgDelegateResponse;
                fromPartial(_: {}): _88.MsgDelegateResponse;
                fromAmino(_: _88.MsgDelegateResponseAmino): _88.MsgDelegateResponse;
                toAmino(_: _88.MsgDelegateResponse): _88.MsgDelegateResponseAmino;
                fromAminoMsg(object: _88.MsgDelegateResponseAminoMsg): _88.MsgDelegateResponse;
                toAminoMsg(message: _88.MsgDelegateResponse): _88.MsgDelegateResponseAminoMsg;
                fromProtoMsg(message: _88.MsgDelegateResponseProtoMsg): _88.MsgDelegateResponse;
                toProto(message: _88.MsgDelegateResponse): Uint8Array;
                toProtoMsg(message: _88.MsgDelegateResponse): _88.MsgDelegateResponseProtoMsg;
            };
            MsgBeginRedelegate: {
                typeUrl: string;
                aminoType: string;
                encode(message: _88.MsgBeginRedelegate, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _88.MsgBeginRedelegate;
                fromPartial(object: {
                    delegatorAddress?: string;
                    validatorSrcAddress?: string;
                    validatorDstAddress?: string;
                    amount?: {
                        denom?: string;
                        amount?: string;
                    };
                }): _88.MsgBeginRedelegate;
                fromAmino(object: _88.MsgBeginRedelegateAmino): _88.MsgBeginRedelegate;
                toAmino(message: _88.MsgBeginRedelegate): _88.MsgBeginRedelegateAmino;
                fromAminoMsg(object: _88.MsgBeginRedelegateAminoMsg): _88.MsgBeginRedelegate;
                toAminoMsg(message: _88.MsgBeginRedelegate): _88.MsgBeginRedelegateAminoMsg;
                fromProtoMsg(message: _88.MsgBeginRedelegateProtoMsg): _88.MsgBeginRedelegate;
                toProto(message: _88.MsgBeginRedelegate): Uint8Array;
                toProtoMsg(message: _88.MsgBeginRedelegate): _88.MsgBeginRedelegateProtoMsg;
            };
            MsgBeginRedelegateResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _88.MsgBeginRedelegateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _88.MsgBeginRedelegateResponse;
                fromPartial(object: {
                    completionTime?: Date;
                }): _88.MsgBeginRedelegateResponse;
                fromAmino(object: _88.MsgBeginRedelegateResponseAmino): _88.MsgBeginRedelegateResponse;
                toAmino(message: _88.MsgBeginRedelegateResponse): _88.MsgBeginRedelegateResponseAmino;
                fromAminoMsg(object: _88.MsgBeginRedelegateResponseAminoMsg): _88.MsgBeginRedelegateResponse;
                toAminoMsg(message: _88.MsgBeginRedelegateResponse): _88.MsgBeginRedelegateResponseAminoMsg;
                fromProtoMsg(message: _88.MsgBeginRedelegateResponseProtoMsg): _88.MsgBeginRedelegateResponse;
                toProto(message: _88.MsgBeginRedelegateResponse): Uint8Array;
                toProtoMsg(message: _88.MsgBeginRedelegateResponse): _88.MsgBeginRedelegateResponseProtoMsg;
            };
            MsgUndelegate: {
                typeUrl: string;
                aminoType: string;
                encode(message: _88.MsgUndelegate, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _88.MsgUndelegate;
                fromPartial(object: {
                    delegatorAddress?: string;
                    validatorAddress?: string;
                    amount?: {
                        denom?: string;
                        amount?: string;
                    };
                }): _88.MsgUndelegate;
                fromAmino(object: _88.MsgUndelegateAmino): _88.MsgUndelegate;
                toAmino(message: _88.MsgUndelegate): _88.MsgUndelegateAmino;
                fromAminoMsg(object: _88.MsgUndelegateAminoMsg): _88.MsgUndelegate;
                toAminoMsg(message: _88.MsgUndelegate): _88.MsgUndelegateAminoMsg;
                fromProtoMsg(message: _88.MsgUndelegateProtoMsg): _88.MsgUndelegate;
                toProto(message: _88.MsgUndelegate): Uint8Array;
                toProtoMsg(message: _88.MsgUndelegate): _88.MsgUndelegateProtoMsg;
            };
            MsgUndelegateResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _88.MsgUndelegateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _88.MsgUndelegateResponse;
                fromPartial(object: {
                    completionTime?: Date;
                    amount?: {
                        denom?: string;
                        amount?: string;
                    };
                }): _88.MsgUndelegateResponse;
                fromAmino(object: _88.MsgUndelegateResponseAmino): _88.MsgUndelegateResponse;
                toAmino(message: _88.MsgUndelegateResponse): _88.MsgUndelegateResponseAmino;
                fromAminoMsg(object: _88.MsgUndelegateResponseAminoMsg): _88.MsgUndelegateResponse;
                toAminoMsg(message: _88.MsgUndelegateResponse): _88.MsgUndelegateResponseAminoMsg;
                fromProtoMsg(message: _88.MsgUndelegateResponseProtoMsg): _88.MsgUndelegateResponse;
                toProto(message: _88.MsgUndelegateResponse): Uint8Array;
                toProtoMsg(message: _88.MsgUndelegateResponse): _88.MsgUndelegateResponseProtoMsg;
            };
            MsgCancelUnbondingDelegation: {
                typeUrl: string;
                aminoType: string;
                encode(message: _88.MsgCancelUnbondingDelegation, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _88.MsgCancelUnbondingDelegation;
                fromPartial(object: {
                    delegatorAddress?: string;
                    validatorAddress?: string;
                    amount?: {
                        denom?: string;
                        amount?: string;
                    };
                    creationHeight?: bigint;
                }): _88.MsgCancelUnbondingDelegation;
                fromAmino(object: _88.MsgCancelUnbondingDelegationAmino): _88.MsgCancelUnbondingDelegation;
                toAmino(message: _88.MsgCancelUnbondingDelegation): _88.MsgCancelUnbondingDelegationAmino;
                fromAminoMsg(object: _88.MsgCancelUnbondingDelegationAminoMsg): _88.MsgCancelUnbondingDelegation;
                toAminoMsg(message: _88.MsgCancelUnbondingDelegation): _88.MsgCancelUnbondingDelegationAminoMsg;
                fromProtoMsg(message: _88.MsgCancelUnbondingDelegationProtoMsg): _88.MsgCancelUnbondingDelegation;
                toProto(message: _88.MsgCancelUnbondingDelegation): Uint8Array;
                toProtoMsg(message: _88.MsgCancelUnbondingDelegation): _88.MsgCancelUnbondingDelegationProtoMsg;
            };
            MsgCancelUnbondingDelegationResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _88.MsgCancelUnbondingDelegationResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _88.MsgCancelUnbondingDelegationResponse;
                fromPartial(_: {}): _88.MsgCancelUnbondingDelegationResponse;
                fromAmino(_: _88.MsgCancelUnbondingDelegationResponseAmino): _88.MsgCancelUnbondingDelegationResponse;
                toAmino(_: _88.MsgCancelUnbondingDelegationResponse): _88.MsgCancelUnbondingDelegationResponseAmino;
                fromAminoMsg(object: _88.MsgCancelUnbondingDelegationResponseAminoMsg): _88.MsgCancelUnbondingDelegationResponse;
                toAminoMsg(message: _88.MsgCancelUnbondingDelegationResponse): _88.MsgCancelUnbondingDelegationResponseAminoMsg;
                fromProtoMsg(message: _88.MsgCancelUnbondingDelegationResponseProtoMsg): _88.MsgCancelUnbondingDelegationResponse;
                toProto(message: _88.MsgCancelUnbondingDelegationResponse): Uint8Array;
                toProtoMsg(message: _88.MsgCancelUnbondingDelegationResponse): _88.MsgCancelUnbondingDelegationResponseProtoMsg;
            };
            MsgUpdateParams: {
                typeUrl: string;
                aminoType: string;
                encode(message: _88.MsgUpdateParams, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _88.MsgUpdateParams;
                fromPartial(object: {
                    authority?: string;
                    params?: {
                        unbondingTime?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                        maxValidators?: number;
                        maxEntries?: number;
                        historicalEntries?: number;
                        bondDenom?: string;
                        minCommissionRate?: string;
                    };
                }): _88.MsgUpdateParams;
                fromAmino(object: _88.MsgUpdateParamsAmino): _88.MsgUpdateParams;
                toAmino(message: _88.MsgUpdateParams): _88.MsgUpdateParamsAmino;
                fromAminoMsg(object: _88.MsgUpdateParamsAminoMsg): _88.MsgUpdateParams;
                toAminoMsg(message: _88.MsgUpdateParams): _88.MsgUpdateParamsAminoMsg;
                fromProtoMsg(message: _88.MsgUpdateParamsProtoMsg): _88.MsgUpdateParams;
                toProto(message: _88.MsgUpdateParams): Uint8Array;
                toProtoMsg(message: _88.MsgUpdateParams): _88.MsgUpdateParamsProtoMsg;
            };
            MsgUpdateParamsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _88.MsgUpdateParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _88.MsgUpdateParamsResponse;
                fromPartial(_: {}): _88.MsgUpdateParamsResponse;
                fromAmino(_: _88.MsgUpdateParamsResponseAmino): _88.MsgUpdateParamsResponse;
                toAmino(_: _88.MsgUpdateParamsResponse): _88.MsgUpdateParamsResponseAmino;
                fromAminoMsg(object: _88.MsgUpdateParamsResponseAminoMsg): _88.MsgUpdateParamsResponse;
                toAminoMsg(message: _88.MsgUpdateParamsResponse): _88.MsgUpdateParamsResponseAminoMsg;
                fromProtoMsg(message: _88.MsgUpdateParamsResponseProtoMsg): _88.MsgUpdateParamsResponse;
                toProto(message: _88.MsgUpdateParamsResponse): Uint8Array;
                toProtoMsg(message: _88.MsgUpdateParamsResponse): _88.MsgUpdateParamsResponseProtoMsg;
            };
            Cosmos_cryptoPubKey_InterfaceDecoder: (input: Uint8Array | import("..").BinaryReader) => import("../google/protobuf/any").Any;
            Cosmos_cryptoPubKey_FromAmino: (content: import("../google/protobuf/any").AnyAmino) => import("../google/protobuf/any").Any;
            Cosmos_cryptoPubKey_ToAmino: (content: import("../google/protobuf/any").Any) => import("@cosmjs/amino").Pubkey;
            bondStatusFromJSON(object: any): _87.BondStatus;
            bondStatusToJSON(object: _87.BondStatus): string;
            infractionFromJSON(object: any): _87.Infraction;
            infractionToJSON(object: _87.Infraction): string;
            BondStatus: typeof _87.BondStatus;
            BondStatusSDKType: typeof _87.BondStatus;
            BondStatusAmino: typeof _87.BondStatus;
            Infraction: typeof _87.Infraction;
            InfractionSDKType: typeof _87.Infraction;
            InfractionAmino: typeof _87.Infraction;
            HistoricalInfo: {
                typeUrl: string;
                aminoType: string;
                encode(message: _87.HistoricalInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _87.HistoricalInfo;
                fromPartial(object: {
                    header?: {
                        version?: {
                            block?: bigint;
                            app?: bigint;
                        };
                        chainId?: string;
                        height?: bigint;
                        time?: Date;
                        lastBlockId?: {
                            hash?: Uint8Array;
                            partSetHeader?: {
                                total?: number;
                                hash?: Uint8Array;
                            };
                        };
                        lastCommitHash?: Uint8Array;
                        dataHash?: Uint8Array;
                        validatorsHash?: Uint8Array;
                        nextValidatorsHash?: Uint8Array;
                        consensusHash?: Uint8Array;
                        appHash?: Uint8Array;
                        lastResultsHash?: Uint8Array;
                        evidenceHash?: Uint8Array;
                        proposerAddress?: Uint8Array;
                    };
                    valset?: {
                        operatorAddress?: string;
                        consensusPubkey?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        jailed?: boolean;
                        status?: _87.BondStatus;
                        tokens?: string;
                        delegatorShares?: string;
                        description?: {
                            moniker?: string;
                            identity?: string;
                            website?: string;
                            securityContact?: string;
                            details?: string;
                        };
                        unbondingHeight?: bigint;
                        unbondingTime?: Date;
                        commission?: {
                            commissionRates?: {
                                rate?: string;
                                maxRate?: string;
                                maxChangeRate?: string;
                            };
                            updateTime?: Date;
                        };
                        minSelfDelegation?: string;
                        unbondingOnHoldRefCount?: bigint;
                        unbondingIds?: bigint[];
                    }[];
                }): _87.HistoricalInfo;
                fromAmino(object: _87.HistoricalInfoAmino): _87.HistoricalInfo;
                toAmino(message: _87.HistoricalInfo): _87.HistoricalInfoAmino;
                fromAminoMsg(object: _87.HistoricalInfoAminoMsg): _87.HistoricalInfo;
                toAminoMsg(message: _87.HistoricalInfo): _87.HistoricalInfoAminoMsg;
                fromProtoMsg(message: _87.HistoricalInfoProtoMsg): _87.HistoricalInfo;
                toProto(message: _87.HistoricalInfo): Uint8Array;
                toProtoMsg(message: _87.HistoricalInfo): _87.HistoricalInfoProtoMsg;
            };
            HistoricalRecord: {
                typeUrl: string;
                aminoType: string;
                encode(message: _87.HistoricalRecord, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _87.HistoricalRecord;
                fromPartial(object: {
                    apphash?: Uint8Array;
                    time?: Date;
                    validatorsHash?: Uint8Array;
                }): _87.HistoricalRecord;
                fromAmino(object: _87.HistoricalRecordAmino): _87.HistoricalRecord;
                toAmino(message: _87.HistoricalRecord): _87.HistoricalRecordAmino;
                fromAminoMsg(object: _87.HistoricalRecordAminoMsg): _87.HistoricalRecord;
                toAminoMsg(message: _87.HistoricalRecord): _87.HistoricalRecordAminoMsg;
                fromProtoMsg(message: _87.HistoricalRecordProtoMsg): _87.HistoricalRecord;
                toProto(message: _87.HistoricalRecord): Uint8Array;
                toProtoMsg(message: _87.HistoricalRecord): _87.HistoricalRecordProtoMsg;
            };
            CommissionRates: {
                typeUrl: string;
                aminoType: string;
                encode(message: _87.CommissionRates, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _87.CommissionRates;
                fromPartial(object: {
                    rate?: string;
                    maxRate?: string;
                    maxChangeRate?: string;
                }): _87.CommissionRates;
                fromAmino(object: _87.CommissionRatesAmino): _87.CommissionRates;
                toAmino(message: _87.CommissionRates): _87.CommissionRatesAmino;
                fromAminoMsg(object: _87.CommissionRatesAminoMsg): _87.CommissionRates;
                toAminoMsg(message: _87.CommissionRates): _87.CommissionRatesAminoMsg;
                fromProtoMsg(message: _87.CommissionRatesProtoMsg): _87.CommissionRates;
                toProto(message: _87.CommissionRates): Uint8Array;
                toProtoMsg(message: _87.CommissionRates): _87.CommissionRatesProtoMsg;
            };
            Commission: {
                typeUrl: string;
                aminoType: string;
                encode(message: _87.Commission, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _87.Commission;
                fromPartial(object: {
                    commissionRates?: {
                        rate?: string;
                        maxRate?: string;
                        maxChangeRate?: string;
                    };
                    updateTime?: Date;
                }): _87.Commission;
                fromAmino(object: _87.CommissionAmino): _87.Commission;
                toAmino(message: _87.Commission): _87.CommissionAmino;
                fromAminoMsg(object: _87.CommissionAminoMsg): _87.Commission;
                toAminoMsg(message: _87.Commission): _87.CommissionAminoMsg;
                fromProtoMsg(message: _87.CommissionProtoMsg): _87.Commission;
                toProto(message: _87.Commission): Uint8Array;
                toProtoMsg(message: _87.Commission): _87.CommissionProtoMsg;
            };
            Description: {
                typeUrl: string;
                aminoType: string;
                encode(message: _87.Description, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _87.Description;
                fromPartial(object: {
                    moniker?: string;
                    identity?: string;
                    website?: string;
                    securityContact?: string;
                    details?: string;
                }): _87.Description;
                fromAmino(object: _87.DescriptionAmino): _87.Description;
                toAmino(message: _87.Description): _87.DescriptionAmino;
                fromAminoMsg(object: _87.DescriptionAminoMsg): _87.Description;
                toAminoMsg(message: _87.Description): _87.DescriptionAminoMsg;
                fromProtoMsg(message: _87.DescriptionProtoMsg): _87.Description;
                toProto(message: _87.Description): Uint8Array;
                toProtoMsg(message: _87.Description): _87.DescriptionProtoMsg;
            };
            Validator: {
                typeUrl: string;
                aminoType: string;
                encode(message: _87.Validator, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _87.Validator;
                fromPartial(object: {
                    operatorAddress?: string;
                    consensusPubkey?: {
                        $typeUrl?: string;
                        typeUrl?: string;
                        value?: Uint8Array;
                    };
                    jailed?: boolean;
                    status?: _87.BondStatus;
                    tokens?: string;
                    delegatorShares?: string;
                    description?: {
                        moniker?: string;
                        identity?: string;
                        website?: string;
                        securityContact?: string;
                        details?: string;
                    };
                    unbondingHeight?: bigint;
                    unbondingTime?: Date;
                    commission?: {
                        commissionRates?: {
                            rate?: string;
                            maxRate?: string;
                            maxChangeRate?: string;
                        };
                        updateTime?: Date;
                    };
                    minSelfDelegation?: string;
                    unbondingOnHoldRefCount?: bigint;
                    unbondingIds?: bigint[];
                }): _87.Validator;
                fromAmino(object: _87.ValidatorAmino): _87.Validator;
                toAmino(message: _87.Validator): _87.ValidatorAmino;
                fromAminoMsg(object: _87.ValidatorAminoMsg): _87.Validator;
                toAminoMsg(message: _87.Validator): _87.ValidatorAminoMsg;
                fromProtoMsg(message: _87.ValidatorProtoMsg): _87.Validator;
                toProto(message: _87.Validator): Uint8Array;
                toProtoMsg(message: _87.Validator): _87.ValidatorProtoMsg;
            };
            ValAddresses: {
                typeUrl: string;
                aminoType: string;
                encode(message: _87.ValAddresses, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _87.ValAddresses;
                fromPartial(object: {
                    addresses?: string[];
                }): _87.ValAddresses;
                fromAmino(object: _87.ValAddressesAmino): _87.ValAddresses;
                toAmino(message: _87.ValAddresses): _87.ValAddressesAmino;
                fromAminoMsg(object: _87.ValAddressesAminoMsg): _87.ValAddresses;
                toAminoMsg(message: _87.ValAddresses): _87.ValAddressesAminoMsg;
                fromProtoMsg(message: _87.ValAddressesProtoMsg): _87.ValAddresses;
                toProto(message: _87.ValAddresses): Uint8Array;
                toProtoMsg(message: _87.ValAddresses): _87.ValAddressesProtoMsg;
            };
            DVPair: {
                typeUrl: string;
                aminoType: string;
                encode(message: _87.DVPair, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _87.DVPair;
                fromPartial(object: {
                    delegatorAddress?: string;
                    validatorAddress?: string;
                }): _87.DVPair;
                fromAmino(object: _87.DVPairAmino): _87.DVPair;
                toAmino(message: _87.DVPair): _87.DVPairAmino;
                fromAminoMsg(object: _87.DVPairAminoMsg): _87.DVPair;
                toAminoMsg(message: _87.DVPair): _87.DVPairAminoMsg;
                fromProtoMsg(message: _87.DVPairProtoMsg): _87.DVPair;
                toProto(message: _87.DVPair): Uint8Array;
                toProtoMsg(message: _87.DVPair): _87.DVPairProtoMsg;
            };
            DVPairs: {
                typeUrl: string;
                aminoType: string;
                encode(message: _87.DVPairs, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _87.DVPairs;
                fromPartial(object: {
                    pairs?: {
                        delegatorAddress?: string;
                        validatorAddress?: string;
                    }[];
                }): _87.DVPairs;
                fromAmino(object: _87.DVPairsAmino): _87.DVPairs;
                toAmino(message: _87.DVPairs): _87.DVPairsAmino;
                fromAminoMsg(object: _87.DVPairsAminoMsg): _87.DVPairs;
                toAminoMsg(message: _87.DVPairs): _87.DVPairsAminoMsg;
                fromProtoMsg(message: _87.DVPairsProtoMsg): _87.DVPairs;
                toProto(message: _87.DVPairs): Uint8Array;
                toProtoMsg(message: _87.DVPairs): _87.DVPairsProtoMsg;
            };
            DVVTriplet: {
                typeUrl: string;
                aminoType: string;
                encode(message: _87.DVVTriplet, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _87.DVVTriplet;
                fromPartial(object: {
                    delegatorAddress?: string;
                    validatorSrcAddress?: string;
                    validatorDstAddress?: string;
                }): _87.DVVTriplet;
                fromAmino(object: _87.DVVTripletAmino): _87.DVVTriplet;
                toAmino(message: _87.DVVTriplet): _87.DVVTripletAmino;
                fromAminoMsg(object: _87.DVVTripletAminoMsg): _87.DVVTriplet;
                toAminoMsg(message: _87.DVVTriplet): _87.DVVTripletAminoMsg;
                fromProtoMsg(message: _87.DVVTripletProtoMsg): _87.DVVTriplet;
                toProto(message: _87.DVVTriplet): Uint8Array;
                toProtoMsg(message: _87.DVVTriplet): _87.DVVTripletProtoMsg;
            };
            DVVTriplets: {
                typeUrl: string;
                aminoType: string;
                encode(message: _87.DVVTriplets, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _87.DVVTriplets;
                fromPartial(object: {
                    triplets?: {
                        delegatorAddress?: string;
                        validatorSrcAddress?: string;
                        validatorDstAddress?: string;
                    }[];
                }): _87.DVVTriplets;
                fromAmino(object: _87.DVVTripletsAmino): _87.DVVTriplets;
                toAmino(message: _87.DVVTriplets): _87.DVVTripletsAmino;
                fromAminoMsg(object: _87.DVVTripletsAminoMsg): _87.DVVTriplets;
                toAminoMsg(message: _87.DVVTriplets): _87.DVVTripletsAminoMsg;
                fromProtoMsg(message: _87.DVVTripletsProtoMsg): _87.DVVTriplets;
                toProto(message: _87.DVVTriplets): Uint8Array;
                toProtoMsg(message: _87.DVVTriplets): _87.DVVTripletsProtoMsg;
            };
            Delegation: {
                typeUrl: string;
                aminoType: string;
                encode(message: _87.Delegation, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _87.Delegation;
                fromPartial(object: {
                    delegatorAddress?: string;
                    validatorAddress?: string;
                    shares?: string;
                }): _87.Delegation;
                fromAmino(object: _87.DelegationAmino): _87.Delegation;
                toAmino(message: _87.Delegation): _87.DelegationAmino;
                fromAminoMsg(object: _87.DelegationAminoMsg): _87.Delegation;
                toAminoMsg(message: _87.Delegation): _87.DelegationAminoMsg;
                fromProtoMsg(message: _87.DelegationProtoMsg): _87.Delegation;
                toProto(message: _87.Delegation): Uint8Array;
                toProtoMsg(message: _87.Delegation): _87.DelegationProtoMsg;
            };
            UnbondingDelegation: {
                typeUrl: string;
                aminoType: string;
                encode(message: _87.UnbondingDelegation, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _87.UnbondingDelegation;
                fromPartial(object: {
                    delegatorAddress?: string;
                    validatorAddress?: string;
                    entries?: {
                        creationHeight?: bigint;
                        completionTime?: Date;
                        initialBalance?: string;
                        balance?: string;
                        unbondingId?: bigint;
                        unbondingOnHoldRefCount?: bigint;
                    }[];
                }): _87.UnbondingDelegation;
                fromAmino(object: _87.UnbondingDelegationAmino): _87.UnbondingDelegation;
                toAmino(message: _87.UnbondingDelegation): _87.UnbondingDelegationAmino;
                fromAminoMsg(object: _87.UnbondingDelegationAminoMsg): _87.UnbondingDelegation;
                toAminoMsg(message: _87.UnbondingDelegation): _87.UnbondingDelegationAminoMsg;
                fromProtoMsg(message: _87.UnbondingDelegationProtoMsg): _87.UnbondingDelegation;
                toProto(message: _87.UnbondingDelegation): Uint8Array;
                toProtoMsg(message: _87.UnbondingDelegation): _87.UnbondingDelegationProtoMsg;
            };
            UnbondingDelegationEntry: {
                typeUrl: string;
                aminoType: string;
                encode(message: _87.UnbondingDelegationEntry, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _87.UnbondingDelegationEntry;
                fromPartial(object: {
                    creationHeight?: bigint;
                    completionTime?: Date;
                    initialBalance?: string;
                    balance?: string;
                    unbondingId?: bigint;
                    unbondingOnHoldRefCount?: bigint;
                }): _87.UnbondingDelegationEntry;
                fromAmino(object: _87.UnbondingDelegationEntryAmino): _87.UnbondingDelegationEntry;
                toAmino(message: _87.UnbondingDelegationEntry): _87.UnbondingDelegationEntryAmino;
                fromAminoMsg(object: _87.UnbondingDelegationEntryAminoMsg): _87.UnbondingDelegationEntry;
                toAminoMsg(message: _87.UnbondingDelegationEntry): _87.UnbondingDelegationEntryAminoMsg;
                fromProtoMsg(message: _87.UnbondingDelegationEntryProtoMsg): _87.UnbondingDelegationEntry;
                toProto(message: _87.UnbondingDelegationEntry): Uint8Array;
                toProtoMsg(message: _87.UnbondingDelegationEntry): _87.UnbondingDelegationEntryProtoMsg;
            };
            RedelegationEntry: {
                typeUrl: string;
                aminoType: string;
                encode(message: _87.RedelegationEntry, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _87.RedelegationEntry;
                fromPartial(object: {
                    creationHeight?: bigint;
                    completionTime?: Date;
                    initialBalance?: string;
                    sharesDst?: string;
                    unbondingId?: bigint;
                    unbondingOnHoldRefCount?: bigint;
                }): _87.RedelegationEntry;
                fromAmino(object: _87.RedelegationEntryAmino): _87.RedelegationEntry;
                toAmino(message: _87.RedelegationEntry): _87.RedelegationEntryAmino;
                fromAminoMsg(object: _87.RedelegationEntryAminoMsg): _87.RedelegationEntry;
                toAminoMsg(message: _87.RedelegationEntry): _87.RedelegationEntryAminoMsg;
                fromProtoMsg(message: _87.RedelegationEntryProtoMsg): _87.RedelegationEntry;
                toProto(message: _87.RedelegationEntry): Uint8Array;
                toProtoMsg(message: _87.RedelegationEntry): _87.RedelegationEntryProtoMsg;
            };
            Redelegation: {
                typeUrl: string;
                aminoType: string;
                encode(message: _87.Redelegation, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _87.Redelegation;
                fromPartial(object: {
                    delegatorAddress?: string;
                    validatorSrcAddress?: string;
                    validatorDstAddress?: string;
                    entries?: {
                        creationHeight?: bigint;
                        completionTime?: Date;
                        initialBalance?: string;
                        sharesDst?: string;
                        unbondingId?: bigint;
                        unbondingOnHoldRefCount?: bigint;
                    }[];
                }): _87.Redelegation;
                fromAmino(object: _87.RedelegationAmino): _87.Redelegation;
                toAmino(message: _87.Redelegation): _87.RedelegationAmino;
                fromAminoMsg(object: _87.RedelegationAminoMsg): _87.Redelegation;
                toAminoMsg(message: _87.Redelegation): _87.RedelegationAminoMsg;
                fromProtoMsg(message: _87.RedelegationProtoMsg): _87.Redelegation;
                toProto(message: _87.Redelegation): Uint8Array;
                toProtoMsg(message: _87.Redelegation): _87.RedelegationProtoMsg;
            };
            Params: {
                typeUrl: string;
                aminoType: string;
                encode(message: _87.Params, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _87.Params;
                fromPartial(object: {
                    unbondingTime?: {
                        seconds?: bigint;
                        nanos?: number;
                    };
                    maxValidators?: number;
                    maxEntries?: number;
                    historicalEntries?: number;
                    bondDenom?: string;
                    minCommissionRate?: string;
                }): _87.Params;
                fromAmino(object: _87.ParamsAmino): _87.Params;
                toAmino(message: _87.Params): _87.ParamsAmino;
                fromAminoMsg(object: _87.ParamsAminoMsg): _87.Params;
                toAminoMsg(message: _87.Params): _87.ParamsAminoMsg;
                fromProtoMsg(message: _87.ParamsProtoMsg): _87.Params;
                toProto(message: _87.Params): Uint8Array;
                toProtoMsg(message: _87.Params): _87.ParamsProtoMsg;
            };
            DelegationResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _87.DelegationResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _87.DelegationResponse;
                fromPartial(object: {
                    delegation?: {
                        delegatorAddress?: string;
                        validatorAddress?: string;
                        shares?: string;
                    };
                    balance?: {
                        denom?: string;
                        amount?: string;
                    };
                }): _87.DelegationResponse;
                fromAmino(object: _87.DelegationResponseAmino): _87.DelegationResponse;
                toAmino(message: _87.DelegationResponse): _87.DelegationResponseAmino;
                fromAminoMsg(object: _87.DelegationResponseAminoMsg): _87.DelegationResponse;
                toAminoMsg(message: _87.DelegationResponse): _87.DelegationResponseAminoMsg;
                fromProtoMsg(message: _87.DelegationResponseProtoMsg): _87.DelegationResponse;
                toProto(message: _87.DelegationResponse): Uint8Array;
                toProtoMsg(message: _87.DelegationResponse): _87.DelegationResponseProtoMsg;
            };
            RedelegationEntryResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _87.RedelegationEntryResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _87.RedelegationEntryResponse;
                fromPartial(object: {
                    redelegationEntry?: {
                        creationHeight?: bigint;
                        completionTime?: Date;
                        initialBalance?: string;
                        sharesDst?: string;
                        unbondingId?: bigint;
                        unbondingOnHoldRefCount?: bigint;
                    };
                    balance?: string;
                }): _87.RedelegationEntryResponse;
                fromAmino(object: _87.RedelegationEntryResponseAmino): _87.RedelegationEntryResponse;
                toAmino(message: _87.RedelegationEntryResponse): _87.RedelegationEntryResponseAmino;
                fromAminoMsg(object: _87.RedelegationEntryResponseAminoMsg): _87.RedelegationEntryResponse;
                toAminoMsg(message: _87.RedelegationEntryResponse): _87.RedelegationEntryResponseAminoMsg;
                fromProtoMsg(message: _87.RedelegationEntryResponseProtoMsg): _87.RedelegationEntryResponse;
                toProto(message: _87.RedelegationEntryResponse): Uint8Array;
                toProtoMsg(message: _87.RedelegationEntryResponse): _87.RedelegationEntryResponseProtoMsg;
            };
            RedelegationResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _87.RedelegationResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _87.RedelegationResponse;
                fromPartial(object: {
                    redelegation?: {
                        delegatorAddress?: string;
                        validatorSrcAddress?: string;
                        validatorDstAddress?: string;
                        entries?: {
                            creationHeight?: bigint;
                            completionTime?: Date;
                            initialBalance?: string;
                            sharesDst?: string;
                            unbondingId?: bigint;
                            unbondingOnHoldRefCount?: bigint;
                        }[];
                    };
                    entries?: {
                        redelegationEntry?: {
                            creationHeight?: bigint;
                            completionTime?: Date;
                            initialBalance?: string;
                            sharesDst?: string;
                            unbondingId?: bigint;
                            unbondingOnHoldRefCount?: bigint;
                        };
                        balance?: string;
                    }[];
                }): _87.RedelegationResponse;
                fromAmino(object: _87.RedelegationResponseAmino): _87.RedelegationResponse;
                toAmino(message: _87.RedelegationResponse): _87.RedelegationResponseAmino;
                fromAminoMsg(object: _87.RedelegationResponseAminoMsg): _87.RedelegationResponse;
                toAminoMsg(message: _87.RedelegationResponse): _87.RedelegationResponseAminoMsg;
                fromProtoMsg(message: _87.RedelegationResponseProtoMsg): _87.RedelegationResponse;
                toProto(message: _87.RedelegationResponse): Uint8Array;
                toProtoMsg(message: _87.RedelegationResponse): _87.RedelegationResponseProtoMsg;
            };
            Pool: {
                typeUrl: string;
                aminoType: string;
                encode(message: _87.Pool, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _87.Pool;
                fromPartial(object: {
                    notBondedTokens?: string;
                    bondedTokens?: string;
                }): _87.Pool;
                fromAmino(object: _87.PoolAmino): _87.Pool;
                toAmino(message: _87.Pool): _87.PoolAmino;
                fromAminoMsg(object: _87.PoolAminoMsg): _87.Pool;
                toAminoMsg(message: _87.Pool): _87.PoolAminoMsg;
                fromProtoMsg(message: _87.PoolProtoMsg): _87.Pool;
                toProto(message: _87.Pool): Uint8Array;
                toProtoMsg(message: _87.Pool): _87.PoolProtoMsg;
            };
            ValidatorUpdates: {
                typeUrl: string;
                aminoType: string;
                encode(message: _87.ValidatorUpdates, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _87.ValidatorUpdates;
                fromPartial(object: {
                    updates?: {
                        pubKey?: {
                            ed25519?: Uint8Array;
                            secp256k1?: Uint8Array;
                        };
                        power?: bigint;
                    }[];
                }): _87.ValidatorUpdates;
                fromAmino(object: _87.ValidatorUpdatesAmino): _87.ValidatorUpdates;
                toAmino(message: _87.ValidatorUpdates): _87.ValidatorUpdatesAmino;
                fromAminoMsg(object: _87.ValidatorUpdatesAminoMsg): _87.ValidatorUpdates;
                toAminoMsg(message: _87.ValidatorUpdates): _87.ValidatorUpdatesAminoMsg;
                fromProtoMsg(message: _87.ValidatorUpdatesProtoMsg): _87.ValidatorUpdates;
                toProto(message: _87.ValidatorUpdates): Uint8Array;
                toProtoMsg(message: _87.ValidatorUpdates): _87.ValidatorUpdatesProtoMsg;
            };
            QueryValidatorsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _86.QueryValidatorsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _86.QueryValidatorsRequest;
                fromPartial(object: {
                    status?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _86.QueryValidatorsRequest;
                fromAmino(object: _86.QueryValidatorsRequestAmino): _86.QueryValidatorsRequest;
                toAmino(message: _86.QueryValidatorsRequest): _86.QueryValidatorsRequestAmino;
                fromAminoMsg(object: _86.QueryValidatorsRequestAminoMsg): _86.QueryValidatorsRequest;
                toAminoMsg(message: _86.QueryValidatorsRequest): _86.QueryValidatorsRequestAminoMsg;
                fromProtoMsg(message: _86.QueryValidatorsRequestProtoMsg): _86.QueryValidatorsRequest;
                toProto(message: _86.QueryValidatorsRequest): Uint8Array;
                toProtoMsg(message: _86.QueryValidatorsRequest): _86.QueryValidatorsRequestProtoMsg;
            };
            QueryValidatorsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _86.QueryValidatorsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _86.QueryValidatorsResponse;
                fromPartial(object: {
                    validators?: {
                        operatorAddress?: string;
                        consensusPubkey?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        jailed?: boolean;
                        status?: _87.BondStatus;
                        tokens?: string;
                        delegatorShares?: string;
                        description?: {
                            moniker?: string;
                            identity?: string;
                            website?: string;
                            securityContact?: string;
                            details?: string;
                        };
                        unbondingHeight?: bigint;
                        unbondingTime?: Date;
                        commission?: {
                            commissionRates?: {
                                rate?: string;
                                maxRate?: string;
                                maxChangeRate?: string;
                            };
                            updateTime?: Date;
                        };
                        minSelfDelegation?: string;
                        unbondingOnHoldRefCount?: bigint;
                        unbondingIds?: bigint[];
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _86.QueryValidatorsResponse;
                fromAmino(object: _86.QueryValidatorsResponseAmino): _86.QueryValidatorsResponse;
                toAmino(message: _86.QueryValidatorsResponse): _86.QueryValidatorsResponseAmino;
                fromAminoMsg(object: _86.QueryValidatorsResponseAminoMsg): _86.QueryValidatorsResponse;
                toAminoMsg(message: _86.QueryValidatorsResponse): _86.QueryValidatorsResponseAminoMsg;
                fromProtoMsg(message: _86.QueryValidatorsResponseProtoMsg): _86.QueryValidatorsResponse;
                toProto(message: _86.QueryValidatorsResponse): Uint8Array;
                toProtoMsg(message: _86.QueryValidatorsResponse): _86.QueryValidatorsResponseProtoMsg;
            };
            QueryValidatorRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _86.QueryValidatorRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _86.QueryValidatorRequest;
                fromPartial(object: {
                    validatorAddr?: string;
                }): _86.QueryValidatorRequest;
                fromAmino(object: _86.QueryValidatorRequestAmino): _86.QueryValidatorRequest;
                toAmino(message: _86.QueryValidatorRequest): _86.QueryValidatorRequestAmino;
                fromAminoMsg(object: _86.QueryValidatorRequestAminoMsg): _86.QueryValidatorRequest;
                toAminoMsg(message: _86.QueryValidatorRequest): _86.QueryValidatorRequestAminoMsg;
                fromProtoMsg(message: _86.QueryValidatorRequestProtoMsg): _86.QueryValidatorRequest;
                toProto(message: _86.QueryValidatorRequest): Uint8Array;
                toProtoMsg(message: _86.QueryValidatorRequest): _86.QueryValidatorRequestProtoMsg;
            };
            QueryValidatorResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _86.QueryValidatorResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _86.QueryValidatorResponse;
                fromPartial(object: {
                    validator?: {
                        operatorAddress?: string;
                        consensusPubkey?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        jailed?: boolean;
                        status?: _87.BondStatus;
                        tokens?: string;
                        delegatorShares?: string;
                        description?: {
                            moniker?: string;
                            identity?: string;
                            website?: string;
                            securityContact?: string;
                            details?: string;
                        };
                        unbondingHeight?: bigint;
                        unbondingTime?: Date;
                        commission?: {
                            commissionRates?: {
                                rate?: string;
                                maxRate?: string;
                                maxChangeRate?: string;
                            };
                            updateTime?: Date;
                        };
                        minSelfDelegation?: string;
                        unbondingOnHoldRefCount?: bigint;
                        unbondingIds?: bigint[];
                    };
                }): _86.QueryValidatorResponse;
                fromAmino(object: _86.QueryValidatorResponseAmino): _86.QueryValidatorResponse;
                toAmino(message: _86.QueryValidatorResponse): _86.QueryValidatorResponseAmino;
                fromAminoMsg(object: _86.QueryValidatorResponseAminoMsg): _86.QueryValidatorResponse;
                toAminoMsg(message: _86.QueryValidatorResponse): _86.QueryValidatorResponseAminoMsg;
                fromProtoMsg(message: _86.QueryValidatorResponseProtoMsg): _86.QueryValidatorResponse;
                toProto(message: _86.QueryValidatorResponse): Uint8Array;
                toProtoMsg(message: _86.QueryValidatorResponse): _86.QueryValidatorResponseProtoMsg;
            };
            QueryValidatorDelegationsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _86.QueryValidatorDelegationsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _86.QueryValidatorDelegationsRequest;
                fromPartial(object: {
                    validatorAddr?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _86.QueryValidatorDelegationsRequest;
                fromAmino(object: _86.QueryValidatorDelegationsRequestAmino): _86.QueryValidatorDelegationsRequest;
                toAmino(message: _86.QueryValidatorDelegationsRequest): _86.QueryValidatorDelegationsRequestAmino;
                fromAminoMsg(object: _86.QueryValidatorDelegationsRequestAminoMsg): _86.QueryValidatorDelegationsRequest;
                toAminoMsg(message: _86.QueryValidatorDelegationsRequest): _86.QueryValidatorDelegationsRequestAminoMsg;
                fromProtoMsg(message: _86.QueryValidatorDelegationsRequestProtoMsg): _86.QueryValidatorDelegationsRequest;
                toProto(message: _86.QueryValidatorDelegationsRequest): Uint8Array;
                toProtoMsg(message: _86.QueryValidatorDelegationsRequest): _86.QueryValidatorDelegationsRequestProtoMsg;
            };
            QueryValidatorDelegationsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _86.QueryValidatorDelegationsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _86.QueryValidatorDelegationsResponse;
                fromPartial(object: {
                    delegationResponses?: {
                        delegation?: {
                            delegatorAddress?: string;
                            validatorAddress?: string;
                            shares?: string;
                        };
                        balance?: {
                            denom?: string;
                            amount?: string;
                        };
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _86.QueryValidatorDelegationsResponse;
                fromAmino(object: _86.QueryValidatorDelegationsResponseAmino): _86.QueryValidatorDelegationsResponse;
                toAmino(message: _86.QueryValidatorDelegationsResponse): _86.QueryValidatorDelegationsResponseAmino;
                fromAminoMsg(object: _86.QueryValidatorDelegationsResponseAminoMsg): _86.QueryValidatorDelegationsResponse;
                toAminoMsg(message: _86.QueryValidatorDelegationsResponse): _86.QueryValidatorDelegationsResponseAminoMsg;
                fromProtoMsg(message: _86.QueryValidatorDelegationsResponseProtoMsg): _86.QueryValidatorDelegationsResponse;
                toProto(message: _86.QueryValidatorDelegationsResponse): Uint8Array;
                toProtoMsg(message: _86.QueryValidatorDelegationsResponse): _86.QueryValidatorDelegationsResponseProtoMsg;
            };
            QueryValidatorUnbondingDelegationsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _86.QueryValidatorUnbondingDelegationsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _86.QueryValidatorUnbondingDelegationsRequest;
                fromPartial(object: {
                    validatorAddr?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _86.QueryValidatorUnbondingDelegationsRequest;
                fromAmino(object: _86.QueryValidatorUnbondingDelegationsRequestAmino): _86.QueryValidatorUnbondingDelegationsRequest;
                toAmino(message: _86.QueryValidatorUnbondingDelegationsRequest): _86.QueryValidatorUnbondingDelegationsRequestAmino;
                fromAminoMsg(object: _86.QueryValidatorUnbondingDelegationsRequestAminoMsg): _86.QueryValidatorUnbondingDelegationsRequest;
                toAminoMsg(message: _86.QueryValidatorUnbondingDelegationsRequest): _86.QueryValidatorUnbondingDelegationsRequestAminoMsg;
                fromProtoMsg(message: _86.QueryValidatorUnbondingDelegationsRequestProtoMsg): _86.QueryValidatorUnbondingDelegationsRequest;
                toProto(message: _86.QueryValidatorUnbondingDelegationsRequest): Uint8Array;
                toProtoMsg(message: _86.QueryValidatorUnbondingDelegationsRequest): _86.QueryValidatorUnbondingDelegationsRequestProtoMsg;
            };
            QueryValidatorUnbondingDelegationsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _86.QueryValidatorUnbondingDelegationsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _86.QueryValidatorUnbondingDelegationsResponse;
                fromPartial(object: {
                    unbondingResponses?: {
                        delegatorAddress?: string;
                        validatorAddress?: string;
                        entries?: {
                            creationHeight?: bigint;
                            completionTime?: Date;
                            initialBalance?: string;
                            balance?: string;
                            unbondingId?: bigint;
                            unbondingOnHoldRefCount?: bigint;
                        }[];
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _86.QueryValidatorUnbondingDelegationsResponse;
                fromAmino(object: _86.QueryValidatorUnbondingDelegationsResponseAmino): _86.QueryValidatorUnbondingDelegationsResponse;
                toAmino(message: _86.QueryValidatorUnbondingDelegationsResponse): _86.QueryValidatorUnbondingDelegationsResponseAmino;
                fromAminoMsg(object: _86.QueryValidatorUnbondingDelegationsResponseAminoMsg): _86.QueryValidatorUnbondingDelegationsResponse;
                toAminoMsg(message: _86.QueryValidatorUnbondingDelegationsResponse): _86.QueryValidatorUnbondingDelegationsResponseAminoMsg;
                fromProtoMsg(message: _86.QueryValidatorUnbondingDelegationsResponseProtoMsg): _86.QueryValidatorUnbondingDelegationsResponse;
                toProto(message: _86.QueryValidatorUnbondingDelegationsResponse): Uint8Array;
                toProtoMsg(message: _86.QueryValidatorUnbondingDelegationsResponse): _86.QueryValidatorUnbondingDelegationsResponseProtoMsg;
            };
            QueryDelegationRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _86.QueryDelegationRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _86.QueryDelegationRequest;
                fromPartial(object: {
                    delegatorAddr?: string;
                    validatorAddr?: string;
                }): _86.QueryDelegationRequest;
                fromAmino(object: _86.QueryDelegationRequestAmino): _86.QueryDelegationRequest;
                toAmino(message: _86.QueryDelegationRequest): _86.QueryDelegationRequestAmino;
                fromAminoMsg(object: _86.QueryDelegationRequestAminoMsg): _86.QueryDelegationRequest;
                toAminoMsg(message: _86.QueryDelegationRequest): _86.QueryDelegationRequestAminoMsg;
                fromProtoMsg(message: _86.QueryDelegationRequestProtoMsg): _86.QueryDelegationRequest;
                toProto(message: _86.QueryDelegationRequest): Uint8Array;
                toProtoMsg(message: _86.QueryDelegationRequest): _86.QueryDelegationRequestProtoMsg;
            };
            QueryDelegationResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _86.QueryDelegationResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _86.QueryDelegationResponse;
                fromPartial(object: {
                    delegationResponse?: {
                        delegation?: {
                            delegatorAddress?: string;
                            validatorAddress?: string;
                            shares?: string;
                        };
                        balance?: {
                            denom?: string;
                            amount?: string;
                        };
                    };
                }): _86.QueryDelegationResponse;
                fromAmino(object: _86.QueryDelegationResponseAmino): _86.QueryDelegationResponse;
                toAmino(message: _86.QueryDelegationResponse): _86.QueryDelegationResponseAmino;
                fromAminoMsg(object: _86.QueryDelegationResponseAminoMsg): _86.QueryDelegationResponse;
                toAminoMsg(message: _86.QueryDelegationResponse): _86.QueryDelegationResponseAminoMsg;
                fromProtoMsg(message: _86.QueryDelegationResponseProtoMsg): _86.QueryDelegationResponse;
                toProto(message: _86.QueryDelegationResponse): Uint8Array;
                toProtoMsg(message: _86.QueryDelegationResponse): _86.QueryDelegationResponseProtoMsg;
            };
            QueryUnbondingDelegationRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _86.QueryUnbondingDelegationRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _86.QueryUnbondingDelegationRequest;
                fromPartial(object: {
                    delegatorAddr?: string;
                    validatorAddr?: string;
                }): _86.QueryUnbondingDelegationRequest;
                fromAmino(object: _86.QueryUnbondingDelegationRequestAmino): _86.QueryUnbondingDelegationRequest;
                toAmino(message: _86.QueryUnbondingDelegationRequest): _86.QueryUnbondingDelegationRequestAmino;
                fromAminoMsg(object: _86.QueryUnbondingDelegationRequestAminoMsg): _86.QueryUnbondingDelegationRequest;
                toAminoMsg(message: _86.QueryUnbondingDelegationRequest): _86.QueryUnbondingDelegationRequestAminoMsg;
                fromProtoMsg(message: _86.QueryUnbondingDelegationRequestProtoMsg): _86.QueryUnbondingDelegationRequest;
                toProto(message: _86.QueryUnbondingDelegationRequest): Uint8Array;
                toProtoMsg(message: _86.QueryUnbondingDelegationRequest): _86.QueryUnbondingDelegationRequestProtoMsg;
            };
            QueryUnbondingDelegationResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _86.QueryUnbondingDelegationResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _86.QueryUnbondingDelegationResponse;
                fromPartial(object: {
                    unbond?: {
                        delegatorAddress?: string;
                        validatorAddress?: string;
                        entries?: {
                            creationHeight?: bigint;
                            completionTime?: Date;
                            initialBalance?: string;
                            balance?: string;
                            unbondingId?: bigint;
                            unbondingOnHoldRefCount?: bigint;
                        }[];
                    };
                }): _86.QueryUnbondingDelegationResponse;
                fromAmino(object: _86.QueryUnbondingDelegationResponseAmino): _86.QueryUnbondingDelegationResponse;
                toAmino(message: _86.QueryUnbondingDelegationResponse): _86.QueryUnbondingDelegationResponseAmino;
                fromAminoMsg(object: _86.QueryUnbondingDelegationResponseAminoMsg): _86.QueryUnbondingDelegationResponse;
                toAminoMsg(message: _86.QueryUnbondingDelegationResponse): _86.QueryUnbondingDelegationResponseAminoMsg;
                fromProtoMsg(message: _86.QueryUnbondingDelegationResponseProtoMsg): _86.QueryUnbondingDelegationResponse;
                toProto(message: _86.QueryUnbondingDelegationResponse): Uint8Array;
                toProtoMsg(message: _86.QueryUnbondingDelegationResponse): _86.QueryUnbondingDelegationResponseProtoMsg;
            };
            QueryDelegatorDelegationsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _86.QueryDelegatorDelegationsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _86.QueryDelegatorDelegationsRequest;
                fromPartial(object: {
                    delegatorAddr?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _86.QueryDelegatorDelegationsRequest;
                fromAmino(object: _86.QueryDelegatorDelegationsRequestAmino): _86.QueryDelegatorDelegationsRequest;
                toAmino(message: _86.QueryDelegatorDelegationsRequest): _86.QueryDelegatorDelegationsRequestAmino;
                fromAminoMsg(object: _86.QueryDelegatorDelegationsRequestAminoMsg): _86.QueryDelegatorDelegationsRequest;
                toAminoMsg(message: _86.QueryDelegatorDelegationsRequest): _86.QueryDelegatorDelegationsRequestAminoMsg;
                fromProtoMsg(message: _86.QueryDelegatorDelegationsRequestProtoMsg): _86.QueryDelegatorDelegationsRequest;
                toProto(message: _86.QueryDelegatorDelegationsRequest): Uint8Array;
                toProtoMsg(message: _86.QueryDelegatorDelegationsRequest): _86.QueryDelegatorDelegationsRequestProtoMsg;
            };
            QueryDelegatorDelegationsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _86.QueryDelegatorDelegationsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _86.QueryDelegatorDelegationsResponse;
                fromPartial(object: {
                    delegationResponses?: {
                        delegation?: {
                            delegatorAddress?: string;
                            validatorAddress?: string;
                            shares?: string;
                        };
                        balance?: {
                            denom?: string;
                            amount?: string;
                        };
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _86.QueryDelegatorDelegationsResponse;
                fromAmino(object: _86.QueryDelegatorDelegationsResponseAmino): _86.QueryDelegatorDelegationsResponse;
                toAmino(message: _86.QueryDelegatorDelegationsResponse): _86.QueryDelegatorDelegationsResponseAmino;
                fromAminoMsg(object: _86.QueryDelegatorDelegationsResponseAminoMsg): _86.QueryDelegatorDelegationsResponse;
                toAminoMsg(message: _86.QueryDelegatorDelegationsResponse): _86.QueryDelegatorDelegationsResponseAminoMsg;
                fromProtoMsg(message: _86.QueryDelegatorDelegationsResponseProtoMsg): _86.QueryDelegatorDelegationsResponse;
                toProto(message: _86.QueryDelegatorDelegationsResponse): Uint8Array;
                toProtoMsg(message: _86.QueryDelegatorDelegationsResponse): _86.QueryDelegatorDelegationsResponseProtoMsg;
            };
            QueryDelegatorUnbondingDelegationsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _86.QueryDelegatorUnbondingDelegationsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _86.QueryDelegatorUnbondingDelegationsRequest;
                fromPartial(object: {
                    delegatorAddr?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _86.QueryDelegatorUnbondingDelegationsRequest;
                fromAmino(object: _86.QueryDelegatorUnbondingDelegationsRequestAmino): _86.QueryDelegatorUnbondingDelegationsRequest;
                toAmino(message: _86.QueryDelegatorUnbondingDelegationsRequest): _86.QueryDelegatorUnbondingDelegationsRequestAmino;
                fromAminoMsg(object: _86.QueryDelegatorUnbondingDelegationsRequestAminoMsg): _86.QueryDelegatorUnbondingDelegationsRequest;
                toAminoMsg(message: _86.QueryDelegatorUnbondingDelegationsRequest): _86.QueryDelegatorUnbondingDelegationsRequestAminoMsg;
                fromProtoMsg(message: _86.QueryDelegatorUnbondingDelegationsRequestProtoMsg): _86.QueryDelegatorUnbondingDelegationsRequest;
                toProto(message: _86.QueryDelegatorUnbondingDelegationsRequest): Uint8Array;
                toProtoMsg(message: _86.QueryDelegatorUnbondingDelegationsRequest): _86.QueryDelegatorUnbondingDelegationsRequestProtoMsg;
            };
            QueryDelegatorUnbondingDelegationsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _86.QueryDelegatorUnbondingDelegationsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _86.QueryDelegatorUnbondingDelegationsResponse;
                fromPartial(object: {
                    unbondingResponses?: {
                        delegatorAddress?: string;
                        validatorAddress?: string;
                        entries?: {
                            creationHeight?: bigint;
                            completionTime?: Date;
                            initialBalance?: string;
                            balance?: string;
                            unbondingId?: bigint;
                            unbondingOnHoldRefCount?: bigint;
                        }[];
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _86.QueryDelegatorUnbondingDelegationsResponse;
                fromAmino(object: _86.QueryDelegatorUnbondingDelegationsResponseAmino): _86.QueryDelegatorUnbondingDelegationsResponse;
                toAmino(message: _86.QueryDelegatorUnbondingDelegationsResponse): _86.QueryDelegatorUnbondingDelegationsResponseAmino;
                fromAminoMsg(object: _86.QueryDelegatorUnbondingDelegationsResponseAminoMsg): _86.QueryDelegatorUnbondingDelegationsResponse;
                toAminoMsg(message: _86.QueryDelegatorUnbondingDelegationsResponse): _86.QueryDelegatorUnbondingDelegationsResponseAminoMsg;
                fromProtoMsg(message: _86.QueryDelegatorUnbondingDelegationsResponseProtoMsg): _86.QueryDelegatorUnbondingDelegationsResponse;
                toProto(message: _86.QueryDelegatorUnbondingDelegationsResponse): Uint8Array;
                toProtoMsg(message: _86.QueryDelegatorUnbondingDelegationsResponse): _86.QueryDelegatorUnbondingDelegationsResponseProtoMsg;
            };
            QueryRedelegationsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _86.QueryRedelegationsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _86.QueryRedelegationsRequest;
                fromPartial(object: {
                    delegatorAddr?: string;
                    srcValidatorAddr?: string;
                    dstValidatorAddr?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _86.QueryRedelegationsRequest;
                fromAmino(object: _86.QueryRedelegationsRequestAmino): _86.QueryRedelegationsRequest;
                toAmino(message: _86.QueryRedelegationsRequest): _86.QueryRedelegationsRequestAmino;
                fromAminoMsg(object: _86.QueryRedelegationsRequestAminoMsg): _86.QueryRedelegationsRequest;
                toAminoMsg(message: _86.QueryRedelegationsRequest): _86.QueryRedelegationsRequestAminoMsg;
                fromProtoMsg(message: _86.QueryRedelegationsRequestProtoMsg): _86.QueryRedelegationsRequest;
                toProto(message: _86.QueryRedelegationsRequest): Uint8Array;
                toProtoMsg(message: _86.QueryRedelegationsRequest): _86.QueryRedelegationsRequestProtoMsg;
            };
            QueryRedelegationsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _86.QueryRedelegationsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _86.QueryRedelegationsResponse;
                fromPartial(object: {
                    redelegationResponses?: {
                        redelegation?: {
                            delegatorAddress?: string;
                            validatorSrcAddress?: string;
                            validatorDstAddress?: string;
                            entries?: {
                                creationHeight?: bigint;
                                completionTime?: Date;
                                initialBalance?: string;
                                sharesDst?: string;
                                unbondingId?: bigint;
                                unbondingOnHoldRefCount?: bigint;
                            }[];
                        };
                        entries?: {
                            redelegationEntry?: {
                                creationHeight?: bigint;
                                completionTime?: Date;
                                initialBalance?: string;
                                sharesDst?: string;
                                unbondingId?: bigint;
                                unbondingOnHoldRefCount?: bigint;
                            };
                            balance?: string;
                        }[];
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _86.QueryRedelegationsResponse;
                fromAmino(object: _86.QueryRedelegationsResponseAmino): _86.QueryRedelegationsResponse;
                toAmino(message: _86.QueryRedelegationsResponse): _86.QueryRedelegationsResponseAmino;
                fromAminoMsg(object: _86.QueryRedelegationsResponseAminoMsg): _86.QueryRedelegationsResponse;
                toAminoMsg(message: _86.QueryRedelegationsResponse): _86.QueryRedelegationsResponseAminoMsg;
                fromProtoMsg(message: _86.QueryRedelegationsResponseProtoMsg): _86.QueryRedelegationsResponse;
                toProto(message: _86.QueryRedelegationsResponse): Uint8Array;
                toProtoMsg(message: _86.QueryRedelegationsResponse): _86.QueryRedelegationsResponseProtoMsg;
            };
            QueryDelegatorValidatorsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _86.QueryDelegatorValidatorsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _86.QueryDelegatorValidatorsRequest;
                fromPartial(object: {
                    delegatorAddr?: string;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _86.QueryDelegatorValidatorsRequest;
                fromAmino(object: _86.QueryDelegatorValidatorsRequestAmino): _86.QueryDelegatorValidatorsRequest;
                toAmino(message: _86.QueryDelegatorValidatorsRequest): _86.QueryDelegatorValidatorsRequestAmino;
                fromAminoMsg(object: _86.QueryDelegatorValidatorsRequestAminoMsg): _86.QueryDelegatorValidatorsRequest;
                toAminoMsg(message: _86.QueryDelegatorValidatorsRequest): _86.QueryDelegatorValidatorsRequestAminoMsg;
                fromProtoMsg(message: _86.QueryDelegatorValidatorsRequestProtoMsg): _86.QueryDelegatorValidatorsRequest;
                toProto(message: _86.QueryDelegatorValidatorsRequest): Uint8Array;
                toProtoMsg(message: _86.QueryDelegatorValidatorsRequest): _86.QueryDelegatorValidatorsRequestProtoMsg;
            };
            QueryDelegatorValidatorsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _86.QueryDelegatorValidatorsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _86.QueryDelegatorValidatorsResponse;
                fromPartial(object: {
                    validators?: {
                        operatorAddress?: string;
                        consensusPubkey?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        jailed?: boolean;
                        status?: _87.BondStatus;
                        tokens?: string;
                        delegatorShares?: string;
                        description?: {
                            moniker?: string;
                            identity?: string;
                            website?: string;
                            securityContact?: string;
                            details?: string;
                        };
                        unbondingHeight?: bigint;
                        unbondingTime?: Date;
                        commission?: {
                            commissionRates?: {
                                rate?: string;
                                maxRate?: string;
                                maxChangeRate?: string;
                            };
                            updateTime?: Date;
                        };
                        minSelfDelegation?: string;
                        unbondingOnHoldRefCount?: bigint;
                        unbondingIds?: bigint[];
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _86.QueryDelegatorValidatorsResponse;
                fromAmino(object: _86.QueryDelegatorValidatorsResponseAmino): _86.QueryDelegatorValidatorsResponse;
                toAmino(message: _86.QueryDelegatorValidatorsResponse): _86.QueryDelegatorValidatorsResponseAmino;
                fromAminoMsg(object: _86.QueryDelegatorValidatorsResponseAminoMsg): _86.QueryDelegatorValidatorsResponse;
                toAminoMsg(message: _86.QueryDelegatorValidatorsResponse): _86.QueryDelegatorValidatorsResponseAminoMsg;
                fromProtoMsg(message: _86.QueryDelegatorValidatorsResponseProtoMsg): _86.QueryDelegatorValidatorsResponse;
                toProto(message: _86.QueryDelegatorValidatorsResponse): Uint8Array;
                toProtoMsg(message: _86.QueryDelegatorValidatorsResponse): _86.QueryDelegatorValidatorsResponseProtoMsg;
            };
            QueryDelegatorValidatorRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _86.QueryDelegatorValidatorRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _86.QueryDelegatorValidatorRequest;
                fromPartial(object: {
                    delegatorAddr?: string;
                    validatorAddr?: string;
                }): _86.QueryDelegatorValidatorRequest;
                fromAmino(object: _86.QueryDelegatorValidatorRequestAmino): _86.QueryDelegatorValidatorRequest;
                toAmino(message: _86.QueryDelegatorValidatorRequest): _86.QueryDelegatorValidatorRequestAmino;
                fromAminoMsg(object: _86.QueryDelegatorValidatorRequestAminoMsg): _86.QueryDelegatorValidatorRequest;
                toAminoMsg(message: _86.QueryDelegatorValidatorRequest): _86.QueryDelegatorValidatorRequestAminoMsg;
                fromProtoMsg(message: _86.QueryDelegatorValidatorRequestProtoMsg): _86.QueryDelegatorValidatorRequest;
                toProto(message: _86.QueryDelegatorValidatorRequest): Uint8Array;
                toProtoMsg(message: _86.QueryDelegatorValidatorRequest): _86.QueryDelegatorValidatorRequestProtoMsg;
            };
            QueryDelegatorValidatorResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _86.QueryDelegatorValidatorResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _86.QueryDelegatorValidatorResponse;
                fromPartial(object: {
                    validator?: {
                        operatorAddress?: string;
                        consensusPubkey?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        jailed?: boolean;
                        status?: _87.BondStatus;
                        tokens?: string;
                        delegatorShares?: string;
                        description?: {
                            moniker?: string;
                            identity?: string;
                            website?: string;
                            securityContact?: string;
                            details?: string;
                        };
                        unbondingHeight?: bigint;
                        unbondingTime?: Date;
                        commission?: {
                            commissionRates?: {
                                rate?: string;
                                maxRate?: string;
                                maxChangeRate?: string;
                            };
                            updateTime?: Date;
                        };
                        minSelfDelegation?: string;
                        unbondingOnHoldRefCount?: bigint;
                        unbondingIds?: bigint[];
                    };
                }): _86.QueryDelegatorValidatorResponse;
                fromAmino(object: _86.QueryDelegatorValidatorResponseAmino): _86.QueryDelegatorValidatorResponse;
                toAmino(message: _86.QueryDelegatorValidatorResponse): _86.QueryDelegatorValidatorResponseAmino;
                fromAminoMsg(object: _86.QueryDelegatorValidatorResponseAminoMsg): _86.QueryDelegatorValidatorResponse;
                toAminoMsg(message: _86.QueryDelegatorValidatorResponse): _86.QueryDelegatorValidatorResponseAminoMsg;
                fromProtoMsg(message: _86.QueryDelegatorValidatorResponseProtoMsg): _86.QueryDelegatorValidatorResponse;
                toProto(message: _86.QueryDelegatorValidatorResponse): Uint8Array;
                toProtoMsg(message: _86.QueryDelegatorValidatorResponse): _86.QueryDelegatorValidatorResponseProtoMsg;
            };
            QueryHistoricalInfoRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _86.QueryHistoricalInfoRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _86.QueryHistoricalInfoRequest;
                fromPartial(object: {
                    height?: bigint;
                }): _86.QueryHistoricalInfoRequest;
                fromAmino(object: _86.QueryHistoricalInfoRequestAmino): _86.QueryHistoricalInfoRequest;
                toAmino(message: _86.QueryHistoricalInfoRequest): _86.QueryHistoricalInfoRequestAmino;
                fromAminoMsg(object: _86.QueryHistoricalInfoRequestAminoMsg): _86.QueryHistoricalInfoRequest;
                toAminoMsg(message: _86.QueryHistoricalInfoRequest): _86.QueryHistoricalInfoRequestAminoMsg;
                fromProtoMsg(message: _86.QueryHistoricalInfoRequestProtoMsg): _86.QueryHistoricalInfoRequest;
                toProto(message: _86.QueryHistoricalInfoRequest): Uint8Array;
                toProtoMsg(message: _86.QueryHistoricalInfoRequest): _86.QueryHistoricalInfoRequestProtoMsg;
            };
            QueryHistoricalInfoResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _86.QueryHistoricalInfoResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _86.QueryHistoricalInfoResponse;
                fromPartial(object: {
                    hist?: {
                        header?: {
                            version?: {
                                block?: bigint;
                                app?: bigint;
                            };
                            chainId?: string;
                            height?: bigint;
                            time?: Date;
                            lastBlockId?: {
                                hash?: Uint8Array;
                                partSetHeader?: {
                                    total?: number;
                                    hash?: Uint8Array;
                                };
                            };
                            lastCommitHash?: Uint8Array;
                            dataHash?: Uint8Array;
                            validatorsHash?: Uint8Array;
                            nextValidatorsHash?: Uint8Array;
                            consensusHash?: Uint8Array;
                            appHash?: Uint8Array;
                            lastResultsHash?: Uint8Array;
                            evidenceHash?: Uint8Array;
                            proposerAddress?: Uint8Array;
                        };
                        valset?: {
                            operatorAddress?: string;
                            consensusPubkey?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            };
                            jailed?: boolean;
                            status?: _87.BondStatus;
                            tokens?: string;
                            delegatorShares?: string;
                            description?: {
                                moniker?: string;
                                identity?: string;
                                website?: string;
                                securityContact?: string;
                                details?: string;
                            };
                            unbondingHeight?: bigint;
                            unbondingTime?: Date;
                            commission?: {
                                commissionRates?: {
                                    rate?: string;
                                    maxRate?: string;
                                    maxChangeRate?: string;
                                };
                                updateTime?: Date;
                            };
                            minSelfDelegation?: string;
                            unbondingOnHoldRefCount?: bigint;
                            unbondingIds?: bigint[];
                        }[];
                    };
                    historicalRecord?: {
                        apphash?: Uint8Array;
                        time?: Date;
                        validatorsHash?: Uint8Array;
                    };
                }): _86.QueryHistoricalInfoResponse;
                fromAmino(object: _86.QueryHistoricalInfoResponseAmino): _86.QueryHistoricalInfoResponse;
                toAmino(message: _86.QueryHistoricalInfoResponse): _86.QueryHistoricalInfoResponseAmino;
                fromAminoMsg(object: _86.QueryHistoricalInfoResponseAminoMsg): _86.QueryHistoricalInfoResponse;
                toAminoMsg(message: _86.QueryHistoricalInfoResponse): _86.QueryHistoricalInfoResponseAminoMsg;
                fromProtoMsg(message: _86.QueryHistoricalInfoResponseProtoMsg): _86.QueryHistoricalInfoResponse;
                toProto(message: _86.QueryHistoricalInfoResponse): Uint8Array;
                toProtoMsg(message: _86.QueryHistoricalInfoResponse): _86.QueryHistoricalInfoResponseProtoMsg;
            };
            QueryPoolRequest: {
                typeUrl: string;
                aminoType: string;
                encode(_: _86.QueryPoolRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _86.QueryPoolRequest;
                fromPartial(_: {}): _86.QueryPoolRequest;
                fromAmino(_: _86.QueryPoolRequestAmino): _86.QueryPoolRequest;
                toAmino(_: _86.QueryPoolRequest): _86.QueryPoolRequestAmino;
                fromAminoMsg(object: _86.QueryPoolRequestAminoMsg): _86.QueryPoolRequest;
                toAminoMsg(message: _86.QueryPoolRequest): _86.QueryPoolRequestAminoMsg;
                fromProtoMsg(message: _86.QueryPoolRequestProtoMsg): _86.QueryPoolRequest;
                toProto(message: _86.QueryPoolRequest): Uint8Array;
                toProtoMsg(message: _86.QueryPoolRequest): _86.QueryPoolRequestProtoMsg;
            };
            QueryPoolResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _86.QueryPoolResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _86.QueryPoolResponse;
                fromPartial(object: {
                    pool?: {
                        notBondedTokens?: string;
                        bondedTokens?: string;
                    };
                }): _86.QueryPoolResponse;
                fromAmino(object: _86.QueryPoolResponseAmino): _86.QueryPoolResponse;
                toAmino(message: _86.QueryPoolResponse): _86.QueryPoolResponseAmino;
                fromAminoMsg(object: _86.QueryPoolResponseAminoMsg): _86.QueryPoolResponse;
                toAminoMsg(message: _86.QueryPoolResponse): _86.QueryPoolResponseAminoMsg;
                fromProtoMsg(message: _86.QueryPoolResponseProtoMsg): _86.QueryPoolResponse;
                toProto(message: _86.QueryPoolResponse): Uint8Array;
                toProtoMsg(message: _86.QueryPoolResponse): _86.QueryPoolResponseProtoMsg;
            };
            QueryParamsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(_: _86.QueryParamsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _86.QueryParamsRequest;
                fromPartial(_: {}): _86.QueryParamsRequest;
                fromAmino(_: _86.QueryParamsRequestAmino): _86.QueryParamsRequest;
                toAmino(_: _86.QueryParamsRequest): _86.QueryParamsRequestAmino;
                fromAminoMsg(object: _86.QueryParamsRequestAminoMsg): _86.QueryParamsRequest;
                toAminoMsg(message: _86.QueryParamsRequest): _86.QueryParamsRequestAminoMsg;
                fromProtoMsg(message: _86.QueryParamsRequestProtoMsg): _86.QueryParamsRequest;
                toProto(message: _86.QueryParamsRequest): Uint8Array;
                toProtoMsg(message: _86.QueryParamsRequest): _86.QueryParamsRequestProtoMsg;
            };
            QueryParamsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _86.QueryParamsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _86.QueryParamsResponse;
                fromPartial(object: {
                    params?: {
                        unbondingTime?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                        maxValidators?: number;
                        maxEntries?: number;
                        historicalEntries?: number;
                        bondDenom?: string;
                        minCommissionRate?: string;
                    };
                }): _86.QueryParamsResponse;
                fromAmino(object: _86.QueryParamsResponseAmino): _86.QueryParamsResponse;
                toAmino(message: _86.QueryParamsResponse): _86.QueryParamsResponseAmino;
                fromAminoMsg(object: _86.QueryParamsResponseAminoMsg): _86.QueryParamsResponse;
                toAminoMsg(message: _86.QueryParamsResponse): _86.QueryParamsResponseAminoMsg;
                fromProtoMsg(message: _86.QueryParamsResponseProtoMsg): _86.QueryParamsResponse;
                toProto(message: _86.QueryParamsResponse): Uint8Array;
                toProtoMsg(message: _86.QueryParamsResponse): _86.QueryParamsResponseProtoMsg;
            };
            GenesisState: {
                typeUrl: string;
                aminoType: string;
                encode(message: _85.GenesisState, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _85.GenesisState;
                fromPartial(object: {
                    params?: {
                        unbondingTime?: {
                            seconds?: bigint;
                            nanos?: number;
                        };
                        maxValidators?: number;
                        maxEntries?: number;
                        historicalEntries?: number;
                        bondDenom?: string;
                        minCommissionRate?: string;
                    };
                    lastTotalPower?: Uint8Array;
                    lastValidatorPowers?: {
                        address?: string;
                        power?: bigint;
                    }[];
                    validators?: {
                        operatorAddress?: string;
                        consensusPubkey?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        jailed?: boolean;
                        status?: _87.BondStatus;
                        tokens?: string;
                        delegatorShares?: string;
                        description?: {
                            moniker?: string;
                            identity?: string;
                            website?: string;
                            securityContact?: string;
                            details?: string;
                        };
                        unbondingHeight?: bigint;
                        unbondingTime?: Date;
                        commission?: {
                            commissionRates?: {
                                rate?: string;
                                maxRate?: string;
                                maxChangeRate?: string;
                            };
                            updateTime?: Date;
                        };
                        minSelfDelegation?: string;
                        unbondingOnHoldRefCount?: bigint;
                        unbondingIds?: bigint[];
                    }[];
                    delegations?: {
                        delegatorAddress?: string;
                        validatorAddress?: string;
                        shares?: string;
                    }[];
                    unbondingDelegations?: {
                        delegatorAddress?: string;
                        validatorAddress?: string;
                        entries?: {
                            creationHeight?: bigint;
                            completionTime?: Date;
                            initialBalance?: string;
                            balance?: string;
                            unbondingId?: bigint;
                            unbondingOnHoldRefCount?: bigint;
                        }[];
                    }[];
                    redelegations?: {
                        delegatorAddress?: string;
                        validatorSrcAddress?: string;
                        validatorDstAddress?: string;
                        entries?: {
                            creationHeight?: bigint;
                            completionTime?: Date;
                            initialBalance?: string;
                            sharesDst?: string;
                            unbondingId?: bigint;
                            unbondingOnHoldRefCount?: bigint;
                        }[];
                    }[];
                    exported?: boolean;
                }): _85.GenesisState;
                fromAmino(object: _85.GenesisStateAmino): _85.GenesisState;
                toAmino(message: _85.GenesisState): _85.GenesisStateAmino;
                fromAminoMsg(object: _85.GenesisStateAminoMsg): _85.GenesisState;
                toAminoMsg(message: _85.GenesisState): _85.GenesisStateAminoMsg;
                fromProtoMsg(message: _85.GenesisStateProtoMsg): _85.GenesisState;
                toProto(message: _85.GenesisState): Uint8Array;
                toProtoMsg(message: _85.GenesisState): _85.GenesisStateProtoMsg;
            };
            LastValidatorPower: {
                typeUrl: string;
                aminoType: string;
                encode(message: _85.LastValidatorPower, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _85.LastValidatorPower;
                fromPartial(object: {
                    address?: string;
                    power?: bigint;
                }): _85.LastValidatorPower;
                fromAmino(object: _85.LastValidatorPowerAmino): _85.LastValidatorPower;
                toAmino(message: _85.LastValidatorPower): _85.LastValidatorPowerAmino;
                fromAminoMsg(object: _85.LastValidatorPowerAminoMsg): _85.LastValidatorPower;
                toAminoMsg(message: _85.LastValidatorPower): _85.LastValidatorPowerAminoMsg;
                fromProtoMsg(message: _85.LastValidatorPowerProtoMsg): _85.LastValidatorPower;
                toProto(message: _85.LastValidatorPower): Uint8Array;
                toProtoMsg(message: _85.LastValidatorPower): _85.LastValidatorPowerProtoMsg;
            };
            authorizationTypeFromJSON(object: any): _84.AuthorizationType;
            authorizationTypeToJSON(object: _84.AuthorizationType): string;
            AuthorizationType: typeof _84.AuthorizationType;
            AuthorizationTypeSDKType: typeof _84.AuthorizationType;
            AuthorizationTypeAmino: typeof _84.AuthorizationType;
            StakeAuthorization: {
                typeUrl: string;
                aminoType: string;
                encode(message: _84.StakeAuthorization, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _84.StakeAuthorization;
                fromPartial(object: {
                    $typeUrl?: "/cosmos.staking.v1beta1.StakeAuthorization";
                    maxTokens?: {
                        denom?: string;
                        amount?: string;
                    };
                    allowList?: {
                        address?: string[];
                    };
                    denyList?: {
                        address?: string[];
                    };
                    authorizationType?: _84.AuthorizationType;
                }): _84.StakeAuthorization;
                fromAmino(object: _84.StakeAuthorizationAmino): _84.StakeAuthorization;
                toAmino(message: _84.StakeAuthorization): _84.StakeAuthorizationAmino;
                fromAminoMsg(object: _84.StakeAuthorizationAminoMsg): _84.StakeAuthorization;
                toAminoMsg(message: _84.StakeAuthorization): _84.StakeAuthorizationAminoMsg;
                fromProtoMsg(message: _84.StakeAuthorizationProtoMsg): _84.StakeAuthorization;
                toProto(message: _84.StakeAuthorization): Uint8Array;
                toProtoMsg(message: _84.StakeAuthorization): _84.StakeAuthorizationProtoMsg;
            };
            StakeAuthorization_Validators: {
                typeUrl: string;
                aminoType: string;
                encode(message: _84.StakeAuthorization_Validators, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _84.StakeAuthorization_Validators;
                fromPartial(object: {
                    address?: string[];
                }): _84.StakeAuthorization_Validators;
                fromAmino(object: _84.StakeAuthorization_ValidatorsAmino): _84.StakeAuthorization_Validators;
                toAmino(message: _84.StakeAuthorization_Validators): _84.StakeAuthorization_ValidatorsAmino;
                fromAminoMsg(object: _84.StakeAuthorization_ValidatorsAminoMsg): _84.StakeAuthorization_Validators;
                toAminoMsg(message: _84.StakeAuthorization_Validators): _84.StakeAuthorization_ValidatorsAminoMsg;
                fromProtoMsg(message: _84.StakeAuthorization_ValidatorsProtoMsg): _84.StakeAuthorization_Validators;
                toProto(message: _84.StakeAuthorization_Validators): Uint8Array;
                toProtoMsg(message: _84.StakeAuthorization_Validators): _84.StakeAuthorization_ValidatorsProtoMsg;
            };
        };
    }
    namespace store {
        namespace internal {
            namespace kv {
                const v1beta1: {
                    Pairs: {
                        typeUrl: string;
                        aminoType: string;
                        encode(message: _89.Pairs, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: Uint8Array | import("..").BinaryReader, length?: number): _89.Pairs;
                        fromPartial(object: {
                            pairs?: {
                                key?: Uint8Array;
                                value?: Uint8Array;
                            }[];
                        }): _89.Pairs;
                        fromAmino(object: _89.PairsAmino): _89.Pairs;
                        toAmino(message: _89.Pairs): _89.PairsAmino;
                        fromAminoMsg(object: _89.PairsAminoMsg): _89.Pairs;
                        toAminoMsg(message: _89.Pairs): _89.PairsAminoMsg;
                        fromProtoMsg(message: _89.PairsProtoMsg): _89.Pairs;
                        toProto(message: _89.Pairs): Uint8Array;
                        toProtoMsg(message: _89.Pairs): _89.PairsProtoMsg;
                    };
                    Pair: {
                        typeUrl: string;
                        aminoType: string;
                        encode(message: _89.Pair, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                        decode(input: Uint8Array | import("..").BinaryReader, length?: number): _89.Pair;
                        fromPartial(object: {
                            key?: Uint8Array;
                            value?: Uint8Array;
                        }): _89.Pair;
                        fromAmino(object: _89.PairAmino): _89.Pair;
                        toAmino(message: _89.Pair): _89.PairAmino;
                        fromAminoMsg(object: _89.PairAminoMsg): _89.Pair;
                        toAminoMsg(message: _89.Pair): _89.PairAminoMsg;
                        fromProtoMsg(message: _89.PairProtoMsg): _89.Pair;
                        toProto(message: _89.Pair): Uint8Array;
                        toProtoMsg(message: _89.Pair): _89.PairProtoMsg;
                    };
                };
            }
        }
        namespace snapshots {
            const v1: {
                Snapshot: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _90.Snapshot, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _90.Snapshot;
                    fromPartial(object: {
                        height?: bigint;
                        format?: number;
                        chunks?: number;
                        hash?: Uint8Array;
                        metadata?: {
                            chunkHashes?: Uint8Array[];
                        };
                    }): _90.Snapshot;
                    fromAmino(object: _90.SnapshotAmino): _90.Snapshot;
                    toAmino(message: _90.Snapshot): _90.SnapshotAmino;
                    fromAminoMsg(object: _90.SnapshotAminoMsg): _90.Snapshot;
                    toAminoMsg(message: _90.Snapshot): _90.SnapshotAminoMsg;
                    fromProtoMsg(message: _90.SnapshotProtoMsg): _90.Snapshot;
                    toProto(message: _90.Snapshot): Uint8Array;
                    toProtoMsg(message: _90.Snapshot): _90.SnapshotProtoMsg;
                };
                Metadata: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _90.Metadata, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _90.Metadata;
                    fromPartial(object: {
                        chunkHashes?: Uint8Array[];
                    }): _90.Metadata;
                    fromAmino(object: _90.MetadataAmino): _90.Metadata;
                    toAmino(message: _90.Metadata): _90.MetadataAmino;
                    fromAminoMsg(object: _90.MetadataAminoMsg): _90.Metadata;
                    toAminoMsg(message: _90.Metadata): _90.MetadataAminoMsg;
                    fromProtoMsg(message: _90.MetadataProtoMsg): _90.Metadata;
                    toProto(message: _90.Metadata): Uint8Array;
                    toProtoMsg(message: _90.Metadata): _90.MetadataProtoMsg;
                };
                SnapshotItem: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _90.SnapshotItem, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _90.SnapshotItem;
                    fromPartial(object: {
                        store?: {
                            name?: string;
                        };
                        iavl?: {
                            key?: Uint8Array;
                            value?: Uint8Array;
                            version?: bigint;
                            height?: number;
                        };
                        extension?: {
                            name?: string;
                            format?: number;
                        };
                        extensionPayload?: {
                            payload?: Uint8Array;
                        };
                    }): _90.SnapshotItem;
                    fromAmino(object: _90.SnapshotItemAmino): _90.SnapshotItem;
                    toAmino(message: _90.SnapshotItem): _90.SnapshotItemAmino;
                    fromAminoMsg(object: _90.SnapshotItemAminoMsg): _90.SnapshotItem;
                    toAminoMsg(message: _90.SnapshotItem): _90.SnapshotItemAminoMsg;
                    fromProtoMsg(message: _90.SnapshotItemProtoMsg): _90.SnapshotItem;
                    toProto(message: _90.SnapshotItem): Uint8Array;
                    toProtoMsg(message: _90.SnapshotItem): _90.SnapshotItemProtoMsg;
                };
                SnapshotStoreItem: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _90.SnapshotStoreItem, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _90.SnapshotStoreItem;
                    fromPartial(object: {
                        name?: string;
                    }): _90.SnapshotStoreItem;
                    fromAmino(object: _90.SnapshotStoreItemAmino): _90.SnapshotStoreItem;
                    toAmino(message: _90.SnapshotStoreItem): _90.SnapshotStoreItemAmino;
                    fromAminoMsg(object: _90.SnapshotStoreItemAminoMsg): _90.SnapshotStoreItem;
                    toAminoMsg(message: _90.SnapshotStoreItem): _90.SnapshotStoreItemAminoMsg;
                    fromProtoMsg(message: _90.SnapshotStoreItemProtoMsg): _90.SnapshotStoreItem;
                    toProto(message: _90.SnapshotStoreItem): Uint8Array;
                    toProtoMsg(message: _90.SnapshotStoreItem): _90.SnapshotStoreItemProtoMsg;
                };
                SnapshotIAVLItem: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _90.SnapshotIAVLItem, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _90.SnapshotIAVLItem;
                    fromPartial(object: {
                        key?: Uint8Array;
                        value?: Uint8Array;
                        version?: bigint;
                        height?: number;
                    }): _90.SnapshotIAVLItem;
                    fromAmino(object: _90.SnapshotIAVLItemAmino): _90.SnapshotIAVLItem;
                    toAmino(message: _90.SnapshotIAVLItem): _90.SnapshotIAVLItemAmino;
                    fromAminoMsg(object: _90.SnapshotIAVLItemAminoMsg): _90.SnapshotIAVLItem;
                    toAminoMsg(message: _90.SnapshotIAVLItem): _90.SnapshotIAVLItemAminoMsg;
                    fromProtoMsg(message: _90.SnapshotIAVLItemProtoMsg): _90.SnapshotIAVLItem;
                    toProto(message: _90.SnapshotIAVLItem): Uint8Array;
                    toProtoMsg(message: _90.SnapshotIAVLItem): _90.SnapshotIAVLItemProtoMsg;
                };
                SnapshotExtensionMeta: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _90.SnapshotExtensionMeta, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _90.SnapshotExtensionMeta;
                    fromPartial(object: {
                        name?: string;
                        format?: number;
                    }): _90.SnapshotExtensionMeta;
                    fromAmino(object: _90.SnapshotExtensionMetaAmino): _90.SnapshotExtensionMeta;
                    toAmino(message: _90.SnapshotExtensionMeta): _90.SnapshotExtensionMetaAmino;
                    fromAminoMsg(object: _90.SnapshotExtensionMetaAminoMsg): _90.SnapshotExtensionMeta;
                    toAminoMsg(message: _90.SnapshotExtensionMeta): _90.SnapshotExtensionMetaAminoMsg;
                    fromProtoMsg(message: _90.SnapshotExtensionMetaProtoMsg): _90.SnapshotExtensionMeta;
                    toProto(message: _90.SnapshotExtensionMeta): Uint8Array;
                    toProtoMsg(message: _90.SnapshotExtensionMeta): _90.SnapshotExtensionMetaProtoMsg;
                };
                SnapshotExtensionPayload: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _90.SnapshotExtensionPayload, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _90.SnapshotExtensionPayload;
                    fromPartial(object: {
                        payload?: Uint8Array;
                    }): _90.SnapshotExtensionPayload;
                    fromAmino(object: _90.SnapshotExtensionPayloadAmino): _90.SnapshotExtensionPayload;
                    toAmino(message: _90.SnapshotExtensionPayload): _90.SnapshotExtensionPayloadAmino;
                    fromAminoMsg(object: _90.SnapshotExtensionPayloadAminoMsg): _90.SnapshotExtensionPayload;
                    toAminoMsg(message: _90.SnapshotExtensionPayload): _90.SnapshotExtensionPayloadAminoMsg;
                    fromProtoMsg(message: _90.SnapshotExtensionPayloadProtoMsg): _90.SnapshotExtensionPayload;
                    toProto(message: _90.SnapshotExtensionPayload): Uint8Array;
                    toProtoMsg(message: _90.SnapshotExtensionPayload): _90.SnapshotExtensionPayloadProtoMsg;
                };
            };
        }
        namespace streaming {
            const abci: {
                ListenFinalizeBlockRequest: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _91.ListenFinalizeBlockRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _91.ListenFinalizeBlockRequest;
                    fromPartial(object: {
                        req?: {
                            txs?: Uint8Array[];
                            decidedLastCommit?: {
                                round?: number;
                                votes?: {
                                    validator?: {
                                        address?: Uint8Array;
                                        power?: bigint;
                                    };
                                    blockIdFlag?: import("../tendermint/types/validator").BlockIDFlag;
                                }[];
                            };
                            misbehavior?: {
                                type?: import("../tendermint/abci/types").MisbehaviorType;
                                validator?: {
                                    address?: Uint8Array;
                                    power?: bigint;
                                };
                                height?: bigint;
                                time?: Date;
                                totalVotingPower?: bigint;
                            }[];
                            hash?: Uint8Array;
                            height?: bigint;
                            time?: Date;
                            nextValidatorsHash?: Uint8Array;
                            proposerAddress?: Uint8Array;
                        };
                        res?: {
                            events?: {
                                type?: string;
                                attributes?: {
                                    key?: string;
                                    value?: string;
                                    index?: boolean;
                                }[];
                            }[];
                            txResults?: {
                                code?: number;
                                data?: Uint8Array;
                                log?: string;
                                info?: string;
                                gasWanted?: bigint;
                                gasUsed?: bigint;
                                events?: {
                                    type?: string;
                                    attributes?: {
                                        key?: string;
                                        value?: string;
                                        index?: boolean;
                                    }[];
                                }[];
                                codespace?: string;
                            }[];
                            validatorUpdates?: {
                                pubKey?: {
                                    ed25519?: Uint8Array;
                                    secp256k1?: Uint8Array;
                                };
                                power?: bigint;
                            }[];
                            consensusParamUpdates?: {
                                block?: {
                                    maxBytes?: bigint;
                                    maxGas?: bigint;
                                };
                                evidence?: {
                                    maxAgeNumBlocks?: bigint;
                                    maxAgeDuration?: {
                                        seconds?: bigint;
                                        nanos?: number;
                                    };
                                    maxBytes?: bigint;
                                };
                                validator?: {
                                    pubKeyTypes?: string[];
                                };
                                version?: {
                                    app?: bigint;
                                };
                                abci?: {
                                    voteExtensionsEnableHeight?: bigint;
                                };
                            };
                            appHash?: Uint8Array;
                        };
                    }): _91.ListenFinalizeBlockRequest;
                    fromAmino(object: _91.ListenFinalizeBlockRequestAmino): _91.ListenFinalizeBlockRequest;
                    toAmino(message: _91.ListenFinalizeBlockRequest): _91.ListenFinalizeBlockRequestAmino;
                    fromAminoMsg(object: _91.ListenFinalizeBlockRequestAminoMsg): _91.ListenFinalizeBlockRequest;
                    toAminoMsg(message: _91.ListenFinalizeBlockRequest): _91.ListenFinalizeBlockRequestAminoMsg;
                    fromProtoMsg(message: _91.ListenFinalizeBlockRequestProtoMsg): _91.ListenFinalizeBlockRequest;
                    toProto(message: _91.ListenFinalizeBlockRequest): Uint8Array;
                    toProtoMsg(message: _91.ListenFinalizeBlockRequest): _91.ListenFinalizeBlockRequestProtoMsg;
                };
                ListenFinalizeBlockResponse: {
                    typeUrl: string;
                    aminoType: string;
                    encode(_: _91.ListenFinalizeBlockResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _91.ListenFinalizeBlockResponse;
                    fromPartial(_: {}): _91.ListenFinalizeBlockResponse;
                    fromAmino(_: _91.ListenFinalizeBlockResponseAmino): _91.ListenFinalizeBlockResponse;
                    toAmino(_: _91.ListenFinalizeBlockResponse): _91.ListenFinalizeBlockResponseAmino;
                    fromAminoMsg(object: _91.ListenFinalizeBlockResponseAminoMsg): _91.ListenFinalizeBlockResponse;
                    toAminoMsg(message: _91.ListenFinalizeBlockResponse): _91.ListenFinalizeBlockResponseAminoMsg;
                    fromProtoMsg(message: _91.ListenFinalizeBlockResponseProtoMsg): _91.ListenFinalizeBlockResponse;
                    toProto(message: _91.ListenFinalizeBlockResponse): Uint8Array;
                    toProtoMsg(message: _91.ListenFinalizeBlockResponse): _91.ListenFinalizeBlockResponseProtoMsg;
                };
                ListenCommitRequest: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _91.ListenCommitRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _91.ListenCommitRequest;
                    fromPartial(object: {
                        blockHeight?: bigint;
                        res?: {
                            retainHeight?: bigint;
                        };
                        changeSet?: {
                            storeKey?: string;
                            delete?: boolean;
                            key?: Uint8Array;
                            value?: Uint8Array;
                        }[];
                    }): _91.ListenCommitRequest;
                    fromAmino(object: _91.ListenCommitRequestAmino): _91.ListenCommitRequest;
                    toAmino(message: _91.ListenCommitRequest): _91.ListenCommitRequestAmino;
                    fromAminoMsg(object: _91.ListenCommitRequestAminoMsg): _91.ListenCommitRequest;
                    toAminoMsg(message: _91.ListenCommitRequest): _91.ListenCommitRequestAminoMsg;
                    fromProtoMsg(message: _91.ListenCommitRequestProtoMsg): _91.ListenCommitRequest;
                    toProto(message: _91.ListenCommitRequest): Uint8Array;
                    toProtoMsg(message: _91.ListenCommitRequest): _91.ListenCommitRequestProtoMsg;
                };
                ListenCommitResponse: {
                    typeUrl: string;
                    aminoType: string;
                    encode(_: _91.ListenCommitResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _91.ListenCommitResponse;
                    fromPartial(_: {}): _91.ListenCommitResponse;
                    fromAmino(_: _91.ListenCommitResponseAmino): _91.ListenCommitResponse;
                    toAmino(_: _91.ListenCommitResponse): _91.ListenCommitResponseAmino;
                    fromAminoMsg(object: _91.ListenCommitResponseAminoMsg): _91.ListenCommitResponse;
                    toAminoMsg(message: _91.ListenCommitResponse): _91.ListenCommitResponseAminoMsg;
                    fromProtoMsg(message: _91.ListenCommitResponseProtoMsg): _91.ListenCommitResponse;
                    toProto(message: _91.ListenCommitResponse): Uint8Array;
                    toProtoMsg(message: _91.ListenCommitResponse): _91.ListenCommitResponseProtoMsg;
                };
            };
        }
        const v1beta1: {
            StoreKVPair: {
                typeUrl: string;
                aminoType: string;
                encode(message: _93.StoreKVPair, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _93.StoreKVPair;
                fromPartial(object: {
                    storeKey?: string;
                    delete?: boolean;
                    key?: Uint8Array;
                    value?: Uint8Array;
                }): _93.StoreKVPair;
                fromAmino(object: _93.StoreKVPairAmino): _93.StoreKVPair;
                toAmino(message: _93.StoreKVPair): _93.StoreKVPairAmino;
                fromAminoMsg(object: _93.StoreKVPairAminoMsg): _93.StoreKVPair;
                toAminoMsg(message: _93.StoreKVPair): _93.StoreKVPairAminoMsg;
                fromProtoMsg(message: _93.StoreKVPairProtoMsg): _93.StoreKVPair;
                toProto(message: _93.StoreKVPair): Uint8Array;
                toProtoMsg(message: _93.StoreKVPair): _93.StoreKVPairProtoMsg;
            };
            BlockMetadata: {
                typeUrl: string;
                aminoType: string;
                encode(message: _93.BlockMetadata, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _93.BlockMetadata;
                fromPartial(object: {
                    responseCommit?: {
                        retainHeight?: bigint;
                    };
                    requestFinalizeBlock?: {
                        txs?: Uint8Array[];
                        decidedLastCommit?: {
                            round?: number;
                            votes?: {
                                validator?: {
                                    address?: Uint8Array;
                                    power?: bigint;
                                };
                                blockIdFlag?: import("../tendermint/types/validator").BlockIDFlag;
                            }[];
                        };
                        misbehavior?: {
                            type?: import("../tendermint/abci/types").MisbehaviorType;
                            validator?: {
                                address?: Uint8Array;
                                power?: bigint;
                            };
                            height?: bigint;
                            time?: Date;
                            totalVotingPower?: bigint;
                        }[];
                        hash?: Uint8Array;
                        height?: bigint;
                        time?: Date;
                        nextValidatorsHash?: Uint8Array;
                        proposerAddress?: Uint8Array;
                    };
                    responseFinalizeBlock?: {
                        events?: {
                            type?: string;
                            attributes?: {
                                key?: string;
                                value?: string;
                                index?: boolean;
                            }[];
                        }[];
                        txResults?: {
                            code?: number;
                            data?: Uint8Array;
                            log?: string;
                            info?: string;
                            gasWanted?: bigint;
                            gasUsed?: bigint;
                            events?: {
                                type?: string;
                                attributes?: {
                                    key?: string;
                                    value?: string;
                                    index?: boolean;
                                }[];
                            }[];
                            codespace?: string;
                        }[];
                        validatorUpdates?: {
                            pubKey?: {
                                ed25519?: Uint8Array;
                                secp256k1?: Uint8Array;
                            };
                            power?: bigint;
                        }[];
                        consensusParamUpdates?: {
                            block?: {
                                maxBytes?: bigint;
                                maxGas?: bigint;
                            };
                            evidence?: {
                                maxAgeNumBlocks?: bigint;
                                maxAgeDuration?: {
                                    seconds?: bigint;
                                    nanos?: number;
                                };
                                maxBytes?: bigint;
                            };
                            validator?: {
                                pubKeyTypes?: string[];
                            };
                            version?: {
                                app?: bigint;
                            };
                            abci?: {
                                voteExtensionsEnableHeight?: bigint;
                            };
                        };
                        appHash?: Uint8Array;
                    };
                }): _93.BlockMetadata;
                fromAmino(object: _93.BlockMetadataAmino): _93.BlockMetadata;
                toAmino(message: _93.BlockMetadata): _93.BlockMetadataAmino;
                fromAminoMsg(object: _93.BlockMetadataAminoMsg): _93.BlockMetadata;
                toAminoMsg(message: _93.BlockMetadata): _93.BlockMetadataAminoMsg;
                fromProtoMsg(message: _93.BlockMetadataProtoMsg): _93.BlockMetadata;
                toProto(message: _93.BlockMetadata): Uint8Array;
                toProtoMsg(message: _93.BlockMetadata): _93.BlockMetadataProtoMsg;
            };
            CommitInfo: {
                typeUrl: string;
                aminoType: string;
                encode(message: _92.CommitInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _92.CommitInfo;
                fromPartial(object: {
                    version?: bigint;
                    storeInfos?: {
                        name?: string;
                        commitId?: {
                            version?: bigint;
                            hash?: Uint8Array;
                        };
                    }[];
                    timestamp?: Date;
                }): _92.CommitInfo;
                fromAmino(object: _92.CommitInfoAmino): _92.CommitInfo;
                toAmino(message: _92.CommitInfo): _92.CommitInfoAmino;
                fromAminoMsg(object: _92.CommitInfoAminoMsg): _92.CommitInfo;
                toAminoMsg(message: _92.CommitInfo): _92.CommitInfoAminoMsg;
                fromProtoMsg(message: _92.CommitInfoProtoMsg): _92.CommitInfo;
                toProto(message: _92.CommitInfo): Uint8Array;
                toProtoMsg(message: _92.CommitInfo): _92.CommitInfoProtoMsg;
            };
            StoreInfo: {
                typeUrl: string;
                aminoType: string;
                encode(message: _92.StoreInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _92.StoreInfo;
                fromPartial(object: {
                    name?: string;
                    commitId?: {
                        version?: bigint;
                        hash?: Uint8Array;
                    };
                }): _92.StoreInfo;
                fromAmino(object: _92.StoreInfoAmino): _92.StoreInfo;
                toAmino(message: _92.StoreInfo): _92.StoreInfoAmino;
                fromAminoMsg(object: _92.StoreInfoAminoMsg): _92.StoreInfo;
                toAminoMsg(message: _92.StoreInfo): _92.StoreInfoAminoMsg;
                fromProtoMsg(message: _92.StoreInfoProtoMsg): _92.StoreInfo;
                toProto(message: _92.StoreInfo): Uint8Array;
                toProtoMsg(message: _92.StoreInfo): _92.StoreInfoProtoMsg;
            };
            CommitID: {
                typeUrl: string;
                aminoType: string;
                encode(message: _92.CommitID, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _92.CommitID;
                fromPartial(object: {
                    version?: bigint;
                    hash?: Uint8Array;
                }): _92.CommitID;
                fromAmino(object: _92.CommitIDAmino): _92.CommitID;
                toAmino(message: _92.CommitID): _92.CommitIDAmino;
                fromAminoMsg(object: _92.CommitIDAminoMsg): _92.CommitID;
                toAminoMsg(message: _92.CommitID): _92.CommitIDAminoMsg;
                fromProtoMsg(message: _92.CommitIDProtoMsg): _92.CommitID;
                toProto(message: _92.CommitID): Uint8Array;
                toProtoMsg(message: _92.CommitID): _92.CommitIDProtoMsg;
            };
        };
    }
    namespace tx {
        namespace config {
            const v1: {
                Config: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _94.Config, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _94.Config;
                    fromPartial(object: {
                        skipAnteHandler?: boolean;
                        skipPostHandler?: boolean;
                    }): _94.Config;
                    fromAmino(object: _94.ConfigAmino): _94.Config;
                    toAmino(message: _94.Config): _94.ConfigAmino;
                    fromAminoMsg(object: _94.ConfigAminoMsg): _94.Config;
                    toAminoMsg(message: _94.Config): _94.ConfigAminoMsg;
                    fromProtoMsg(message: _94.ConfigProtoMsg): _94.Config;
                    toProto(message: _94.Config): Uint8Array;
                    toProtoMsg(message: _94.Config): _94.ConfigProtoMsg;
                };
            };
        }
        namespace signing {
            const v1beta1: {
                signModeFromJSON(object: any): _95.SignMode;
                signModeToJSON(object: _95.SignMode): string;
                SignMode: typeof _95.SignMode;
                SignModeSDKType: typeof _95.SignMode;
                SignModeAmino: typeof _95.SignMode;
                SignatureDescriptors: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _95.SignatureDescriptors, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _95.SignatureDescriptors;
                    fromPartial(object: {
                        signatures?: {
                            publicKey?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            };
                            data?: {
                                single?: {
                                    mode?: _95.SignMode;
                                    signature?: Uint8Array;
                                };
                                multi?: {
                                    bitarray?: {
                                        extraBitsStored?: number;
                                        elems?: Uint8Array;
                                    };
                                    signatures?: any[];
                                };
                            };
                            sequence?: bigint;
                        }[];
                    }): _95.SignatureDescriptors;
                    fromAmino(object: _95.SignatureDescriptorsAmino): _95.SignatureDescriptors;
                    toAmino(message: _95.SignatureDescriptors): _95.SignatureDescriptorsAmino;
                    fromAminoMsg(object: _95.SignatureDescriptorsAminoMsg): _95.SignatureDescriptors;
                    toAminoMsg(message: _95.SignatureDescriptors): _95.SignatureDescriptorsAminoMsg;
                    fromProtoMsg(message: _95.SignatureDescriptorsProtoMsg): _95.SignatureDescriptors;
                    toProto(message: _95.SignatureDescriptors): Uint8Array;
                    toProtoMsg(message: _95.SignatureDescriptors): _95.SignatureDescriptorsProtoMsg;
                };
                SignatureDescriptor: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _95.SignatureDescriptor, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _95.SignatureDescriptor;
                    fromPartial(object: {
                        publicKey?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        data?: {
                            single?: {
                                mode?: _95.SignMode;
                                signature?: Uint8Array;
                            };
                            multi?: {
                                bitarray?: {
                                    extraBitsStored?: number;
                                    elems?: Uint8Array;
                                };
                                signatures?: any[];
                            };
                        };
                        sequence?: bigint;
                    }): _95.SignatureDescriptor;
                    fromAmino(object: _95.SignatureDescriptorAmino): _95.SignatureDescriptor;
                    toAmino(message: _95.SignatureDescriptor): _95.SignatureDescriptorAmino;
                    fromAminoMsg(object: _95.SignatureDescriptorAminoMsg): _95.SignatureDescriptor;
                    toAminoMsg(message: _95.SignatureDescriptor): _95.SignatureDescriptorAminoMsg;
                    fromProtoMsg(message: _95.SignatureDescriptorProtoMsg): _95.SignatureDescriptor;
                    toProto(message: _95.SignatureDescriptor): Uint8Array;
                    toProtoMsg(message: _95.SignatureDescriptor): _95.SignatureDescriptorProtoMsg;
                };
                SignatureDescriptor_Data: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _95.SignatureDescriptor_Data, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _95.SignatureDescriptor_Data;
                    fromPartial(object: {
                        single?: {
                            mode?: _95.SignMode;
                            signature?: Uint8Array;
                        };
                        multi?: {
                            bitarray?: {
                                extraBitsStored?: number;
                                elems?: Uint8Array;
                            };
                            signatures?: any[];
                        };
                    }): _95.SignatureDescriptor_Data;
                    fromAmino(object: _95.SignatureDescriptor_DataAmino): _95.SignatureDescriptor_Data;
                    toAmino(message: _95.SignatureDescriptor_Data): _95.SignatureDescriptor_DataAmino;
                    fromAminoMsg(object: _95.SignatureDescriptor_DataAminoMsg): _95.SignatureDescriptor_Data;
                    toAminoMsg(message: _95.SignatureDescriptor_Data): _95.SignatureDescriptor_DataAminoMsg;
                    fromProtoMsg(message: _95.SignatureDescriptor_DataProtoMsg): _95.SignatureDescriptor_Data;
                    toProto(message: _95.SignatureDescriptor_Data): Uint8Array;
                    toProtoMsg(message: _95.SignatureDescriptor_Data): _95.SignatureDescriptor_DataProtoMsg;
                };
                SignatureDescriptor_Data_Single: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _95.SignatureDescriptor_Data_Single, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _95.SignatureDescriptor_Data_Single;
                    fromPartial(object: {
                        mode?: _95.SignMode;
                        signature?: Uint8Array;
                    }): _95.SignatureDescriptor_Data_Single;
                    fromAmino(object: _95.SignatureDescriptor_Data_SingleAmino): _95.SignatureDescriptor_Data_Single;
                    toAmino(message: _95.SignatureDescriptor_Data_Single): _95.SignatureDescriptor_Data_SingleAmino;
                    fromAminoMsg(object: _95.SignatureDescriptor_Data_SingleAminoMsg): _95.SignatureDescriptor_Data_Single;
                    toAminoMsg(message: _95.SignatureDescriptor_Data_Single): _95.SignatureDescriptor_Data_SingleAminoMsg;
                    fromProtoMsg(message: _95.SignatureDescriptor_Data_SingleProtoMsg): _95.SignatureDescriptor_Data_Single;
                    toProto(message: _95.SignatureDescriptor_Data_Single): Uint8Array;
                    toProtoMsg(message: _95.SignatureDescriptor_Data_Single): _95.SignatureDescriptor_Data_SingleProtoMsg;
                };
                SignatureDescriptor_Data_Multi: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _95.SignatureDescriptor_Data_Multi, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _95.SignatureDescriptor_Data_Multi;
                    fromPartial(object: {
                        bitarray?: {
                            extraBitsStored?: number;
                            elems?: Uint8Array;
                        };
                        signatures?: any[];
                    }): _95.SignatureDescriptor_Data_Multi;
                    fromAmino(object: _95.SignatureDescriptor_Data_MultiAmino): _95.SignatureDescriptor_Data_Multi;
                    toAmino(message: _95.SignatureDescriptor_Data_Multi): _95.SignatureDescriptor_Data_MultiAmino;
                    fromAminoMsg(object: _95.SignatureDescriptor_Data_MultiAminoMsg): _95.SignatureDescriptor_Data_Multi;
                    toAminoMsg(message: _95.SignatureDescriptor_Data_Multi): _95.SignatureDescriptor_Data_MultiAminoMsg;
                    fromProtoMsg(message: _95.SignatureDescriptor_Data_MultiProtoMsg): _95.SignatureDescriptor_Data_Multi;
                    toProto(message: _95.SignatureDescriptor_Data_Multi): Uint8Array;
                    toProtoMsg(message: _95.SignatureDescriptor_Data_Multi): _95.SignatureDescriptor_Data_MultiProtoMsg;
                };
            };
        }
        const v1beta1: {
            ServiceClientImpl: typeof _226.ServiceClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                simulate(request: _96.SimulateRequest): Promise<_96.SimulateResponse>;
                getTx(request: _96.GetTxRequest): Promise<_96.GetTxResponse>;
                broadcastTx(request: _96.BroadcastTxRequest): Promise<_96.BroadcastTxResponse>;
                getTxsEvent(request: _96.GetTxsEventRequest): Promise<_96.GetTxsEventResponse>;
                getBlockWithTxs(request: _96.GetBlockWithTxsRequest): Promise<_96.GetBlockWithTxsResponse>;
                txDecode(request: _96.TxDecodeRequest): Promise<_96.TxDecodeResponse>;
                txEncode(request: _96.TxEncodeRequest): Promise<_96.TxEncodeResponse>;
                txEncodeAmino(request: _96.TxEncodeAminoRequest): Promise<_96.TxEncodeAminoResponse>;
                txDecodeAmino(request: _96.TxDecodeAminoRequest): Promise<_96.TxDecodeAminoResponse>;
            };
            LCDQueryClient: typeof _208.LCDQueryClient;
            Tx: {
                typeUrl: string;
                aminoType: string;
                encode(message: _97.Tx, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _97.Tx;
                fromPartial(object: {
                    body?: {
                        messages?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        }[];
                        memo?: string;
                        timeoutHeight?: bigint;
                        extensionOptions?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        }[];
                        nonCriticalExtensionOptions?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        }[];
                    };
                    authInfo?: {
                        signerInfos?: {
                            publicKey?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            };
                            modeInfo?: {
                                single?: {
                                    mode?: _95.SignMode;
                                };
                                multi?: {
                                    bitarray?: {
                                        extraBitsStored?: number;
                                        elems?: Uint8Array;
                                    };
                                    modeInfos?: any[];
                                };
                            };
                            sequence?: bigint;
                        }[];
                        fee?: {
                            amount?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            gasLimit?: bigint;
                            payer?: string;
                            granter?: string;
                        };
                        tip?: {
                            amount?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            tipper?: string;
                        };
                    };
                    signatures?: Uint8Array[];
                }): _97.Tx;
                fromAmino(object: _97.TxAmino): _97.Tx;
                toAmino(message: _97.Tx): _97.TxAmino;
                fromAminoMsg(object: _97.TxAminoMsg): _97.Tx;
                toAminoMsg(message: _97.Tx): _97.TxAminoMsg;
                fromProtoMsg(message: _97.TxProtoMsg): _97.Tx;
                toProto(message: _97.Tx): Uint8Array;
                toProtoMsg(message: _97.Tx): _97.TxProtoMsg;
            };
            TxRaw: {
                typeUrl: string;
                aminoType: string;
                encode(message: _97.TxRaw, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _97.TxRaw;
                fromPartial(object: {
                    bodyBytes?: Uint8Array;
                    authInfoBytes?: Uint8Array;
                    signatures?: Uint8Array[];
                }): _97.TxRaw;
                fromAmino(object: _97.TxRawAmino): _97.TxRaw;
                toAmino(message: _97.TxRaw): _97.TxRawAmino;
                fromAminoMsg(object: _97.TxRawAminoMsg): _97.TxRaw;
                toAminoMsg(message: _97.TxRaw): _97.TxRawAminoMsg;
                fromProtoMsg(message: _97.TxRawProtoMsg): _97.TxRaw;
                toProto(message: _97.TxRaw): Uint8Array;
                toProtoMsg(message: _97.TxRaw): _97.TxRawProtoMsg;
            };
            SignDoc: {
                typeUrl: string;
                aminoType: string;
                encode(message: _97.SignDoc, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _97.SignDoc;
                fromPartial(object: {
                    bodyBytes?: Uint8Array;
                    authInfoBytes?: Uint8Array;
                    chainId?: string;
                    accountNumber?: bigint;
                }): _97.SignDoc;
                fromAmino(object: _97.SignDocAmino): _97.SignDoc;
                toAmino(message: _97.SignDoc): _97.SignDocAmino;
                fromAminoMsg(object: _97.SignDocAminoMsg): _97.SignDoc;
                toAminoMsg(message: _97.SignDoc): _97.SignDocAminoMsg;
                fromProtoMsg(message: _97.SignDocProtoMsg): _97.SignDoc;
                toProto(message: _97.SignDoc): Uint8Array;
                toProtoMsg(message: _97.SignDoc): _97.SignDocProtoMsg;
            };
            SignDocDirectAux: {
                typeUrl: string;
                aminoType: string;
                encode(message: _97.SignDocDirectAux, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _97.SignDocDirectAux;
                fromPartial(object: {
                    bodyBytes?: Uint8Array;
                    publicKey?: {
                        $typeUrl?: string;
                        typeUrl?: string;
                        value?: Uint8Array;
                    };
                    chainId?: string;
                    accountNumber?: bigint;
                    sequence?: bigint;
                    tip?: {
                        amount?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        tipper?: string;
                    };
                }): _97.SignDocDirectAux;
                fromAmino(object: _97.SignDocDirectAuxAmino): _97.SignDocDirectAux;
                toAmino(message: _97.SignDocDirectAux): _97.SignDocDirectAuxAmino;
                fromAminoMsg(object: _97.SignDocDirectAuxAminoMsg): _97.SignDocDirectAux;
                toAminoMsg(message: _97.SignDocDirectAux): _97.SignDocDirectAuxAminoMsg;
                fromProtoMsg(message: _97.SignDocDirectAuxProtoMsg): _97.SignDocDirectAux;
                toProto(message: _97.SignDocDirectAux): Uint8Array;
                toProtoMsg(message: _97.SignDocDirectAux): _97.SignDocDirectAuxProtoMsg;
            };
            TxBody: {
                typeUrl: string;
                aminoType: string;
                encode(message: _97.TxBody, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _97.TxBody;
                fromPartial(object: {
                    messages?: {
                        $typeUrl?: string;
                        typeUrl?: string;
                        value?: Uint8Array;
                    }[];
                    memo?: string;
                    timeoutHeight?: bigint;
                    extensionOptions?: {
                        $typeUrl?: string;
                        typeUrl?: string;
                        value?: Uint8Array;
                    }[];
                    nonCriticalExtensionOptions?: {
                        $typeUrl?: string;
                        typeUrl?: string;
                        value?: Uint8Array;
                    }[];
                }): _97.TxBody;
                fromAmino(object: _97.TxBodyAmino): _97.TxBody;
                toAmino(message: _97.TxBody): _97.TxBodyAmino;
                fromAminoMsg(object: _97.TxBodyAminoMsg): _97.TxBody;
                toAminoMsg(message: _97.TxBody): _97.TxBodyAminoMsg;
                fromProtoMsg(message: _97.TxBodyProtoMsg): _97.TxBody;
                toProto(message: _97.TxBody): Uint8Array;
                toProtoMsg(message: _97.TxBody): _97.TxBodyProtoMsg;
            };
            AuthInfo: {
                typeUrl: string;
                aminoType: string;
                encode(message: _97.AuthInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _97.AuthInfo;
                fromPartial(object: {
                    signerInfos?: {
                        publicKey?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        modeInfo?: {
                            single?: {
                                mode?: _95.SignMode;
                            };
                            multi?: {
                                bitarray?: {
                                    extraBitsStored?: number;
                                    elems?: Uint8Array;
                                };
                                modeInfos?: any[];
                            };
                        };
                        sequence?: bigint;
                    }[];
                    fee?: {
                        amount?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        gasLimit?: bigint;
                        payer?: string;
                        granter?: string;
                    };
                    tip?: {
                        amount?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        tipper?: string;
                    };
                }): _97.AuthInfo;
                fromAmino(object: _97.AuthInfoAmino): _97.AuthInfo;
                toAmino(message: _97.AuthInfo): _97.AuthInfoAmino;
                fromAminoMsg(object: _97.AuthInfoAminoMsg): _97.AuthInfo;
                toAminoMsg(message: _97.AuthInfo): _97.AuthInfoAminoMsg;
                fromProtoMsg(message: _97.AuthInfoProtoMsg): _97.AuthInfo;
                toProto(message: _97.AuthInfo): Uint8Array;
                toProtoMsg(message: _97.AuthInfo): _97.AuthInfoProtoMsg;
            };
            SignerInfo: {
                typeUrl: string;
                aminoType: string;
                encode(message: _97.SignerInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _97.SignerInfo;
                fromPartial(object: {
                    publicKey?: {
                        $typeUrl?: string;
                        typeUrl?: string;
                        value?: Uint8Array;
                    };
                    modeInfo?: {
                        single?: {
                            mode?: _95.SignMode;
                        };
                        multi?: {
                            bitarray?: {
                                extraBitsStored?: number;
                                elems?: Uint8Array;
                            };
                            modeInfos?: any[];
                        };
                    };
                    sequence?: bigint;
                }): _97.SignerInfo;
                fromAmino(object: _97.SignerInfoAmino): _97.SignerInfo;
                toAmino(message: _97.SignerInfo): _97.SignerInfoAmino;
                fromAminoMsg(object: _97.SignerInfoAminoMsg): _97.SignerInfo;
                toAminoMsg(message: _97.SignerInfo): _97.SignerInfoAminoMsg;
                fromProtoMsg(message: _97.SignerInfoProtoMsg): _97.SignerInfo;
                toProto(message: _97.SignerInfo): Uint8Array;
                toProtoMsg(message: _97.SignerInfo): _97.SignerInfoProtoMsg;
            };
            ModeInfo: {
                typeUrl: string;
                aminoType: string;
                encode(message: _97.ModeInfo, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _97.ModeInfo;
                fromPartial(object: {
                    single?: {
                        mode?: _95.SignMode;
                    };
                    multi?: {
                        bitarray?: {
                            extraBitsStored?: number;
                            elems?: Uint8Array;
                        };
                        modeInfos?: any[];
                    };
                }): _97.ModeInfo;
                fromAmino(object: _97.ModeInfoAmino): _97.ModeInfo;
                toAmino(message: _97.ModeInfo): _97.ModeInfoAmino;
                fromAminoMsg(object: _97.ModeInfoAminoMsg): _97.ModeInfo;
                toAminoMsg(message: _97.ModeInfo): _97.ModeInfoAminoMsg;
                fromProtoMsg(message: _97.ModeInfoProtoMsg): _97.ModeInfo;
                toProto(message: _97.ModeInfo): Uint8Array;
                toProtoMsg(message: _97.ModeInfo): _97.ModeInfoProtoMsg;
            };
            ModeInfo_Single: {
                typeUrl: string;
                aminoType: string;
                encode(message: _97.ModeInfo_Single, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _97.ModeInfo_Single;
                fromPartial(object: {
                    mode?: _95.SignMode;
                }): _97.ModeInfo_Single;
                fromAmino(object: _97.ModeInfo_SingleAmino): _97.ModeInfo_Single;
                toAmino(message: _97.ModeInfo_Single): _97.ModeInfo_SingleAmino;
                fromAminoMsg(object: _97.ModeInfo_SingleAminoMsg): _97.ModeInfo_Single;
                toAminoMsg(message: _97.ModeInfo_Single): _97.ModeInfo_SingleAminoMsg;
                fromProtoMsg(message: _97.ModeInfo_SingleProtoMsg): _97.ModeInfo_Single;
                toProto(message: _97.ModeInfo_Single): Uint8Array;
                toProtoMsg(message: _97.ModeInfo_Single): _97.ModeInfo_SingleProtoMsg;
            };
            ModeInfo_Multi: {
                typeUrl: string;
                aminoType: string;
                encode(message: _97.ModeInfo_Multi, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _97.ModeInfo_Multi;
                fromPartial(object: {
                    bitarray?: {
                        extraBitsStored?: number;
                        elems?: Uint8Array;
                    };
                    modeInfos?: any[];
                }): _97.ModeInfo_Multi;
                fromAmino(object: _97.ModeInfo_MultiAmino): _97.ModeInfo_Multi;
                toAmino(message: _97.ModeInfo_Multi): _97.ModeInfo_MultiAmino;
                fromAminoMsg(object: _97.ModeInfo_MultiAminoMsg): _97.ModeInfo_Multi;
                toAminoMsg(message: _97.ModeInfo_Multi): _97.ModeInfo_MultiAminoMsg;
                fromProtoMsg(message: _97.ModeInfo_MultiProtoMsg): _97.ModeInfo_Multi;
                toProto(message: _97.ModeInfo_Multi): Uint8Array;
                toProtoMsg(message: _97.ModeInfo_Multi): _97.ModeInfo_MultiProtoMsg;
            };
            Fee: {
                typeUrl: string;
                aminoType: string;
                encode(message: _97.Fee, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _97.Fee;
                fromPartial(object: {
                    amount?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    gasLimit?: bigint;
                    payer?: string;
                    granter?: string;
                }): _97.Fee;
                fromAmino(object: _97.FeeAmino): _97.Fee;
                toAmino(message: _97.Fee): _97.FeeAmino;
                fromAminoMsg(object: _97.FeeAminoMsg): _97.Fee;
                toAminoMsg(message: _97.Fee): _97.FeeAminoMsg;
                fromProtoMsg(message: _97.FeeProtoMsg): _97.Fee;
                toProto(message: _97.Fee): Uint8Array;
                toProtoMsg(message: _97.Fee): _97.FeeProtoMsg;
            };
            Tip: {
                typeUrl: string;
                aminoType: string;
                encode(message: _97.Tip, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _97.Tip;
                fromPartial(object: {
                    amount?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    tipper?: string;
                }): _97.Tip;
                fromAmino(object: _97.TipAmino): _97.Tip;
                toAmino(message: _97.Tip): _97.TipAmino;
                fromAminoMsg(object: _97.TipAminoMsg): _97.Tip;
                toAminoMsg(message: _97.Tip): _97.TipAminoMsg;
                fromProtoMsg(message: _97.TipProtoMsg): _97.Tip;
                toProto(message: _97.Tip): Uint8Array;
                toProtoMsg(message: _97.Tip): _97.TipProtoMsg;
            };
            AuxSignerData: {
                typeUrl: string;
                aminoType: string;
                encode(message: _97.AuxSignerData, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _97.AuxSignerData;
                fromPartial(object: {
                    address?: string;
                    signDoc?: {
                        bodyBytes?: Uint8Array;
                        publicKey?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        chainId?: string;
                        accountNumber?: bigint;
                        sequence?: bigint;
                        tip?: {
                            amount?: {
                                denom?: string;
                                amount?: string;
                            }[];
                            tipper?: string;
                        };
                    };
                    mode?: _95.SignMode;
                    sig?: Uint8Array;
                }): _97.AuxSignerData;
                fromAmino(object: _97.AuxSignerDataAmino): _97.AuxSignerData;
                toAmino(message: _97.AuxSignerData): _97.AuxSignerDataAmino;
                fromAminoMsg(object: _97.AuxSignerDataAminoMsg): _97.AuxSignerData;
                toAminoMsg(message: _97.AuxSignerData): _97.AuxSignerDataAminoMsg;
                fromProtoMsg(message: _97.AuxSignerDataProtoMsg): _97.AuxSignerData;
                toProto(message: _97.AuxSignerData): Uint8Array;
                toProtoMsg(message: _97.AuxSignerData): _97.AuxSignerDataProtoMsg;
            };
            orderByFromJSON(object: any): _96.OrderBy;
            orderByToJSON(object: _96.OrderBy): string;
            broadcastModeFromJSON(object: any): _96.BroadcastMode;
            broadcastModeToJSON(object: _96.BroadcastMode): string;
            OrderBy: typeof _96.OrderBy;
            OrderBySDKType: typeof _96.OrderBy;
            OrderByAmino: typeof _96.OrderBy;
            BroadcastMode: typeof _96.BroadcastMode;
            BroadcastModeSDKType: typeof _96.BroadcastMode;
            BroadcastModeAmino: typeof _96.BroadcastMode;
            GetTxsEventRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _96.GetTxsEventRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _96.GetTxsEventRequest;
                fromPartial(object: {
                    events?: string[];
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                    orderBy?: _96.OrderBy;
                    page?: bigint;
                    limit?: bigint;
                    query?: string;
                }): _96.GetTxsEventRequest;
                fromAmino(object: _96.GetTxsEventRequestAmino): _96.GetTxsEventRequest;
                toAmino(message: _96.GetTxsEventRequest): _96.GetTxsEventRequestAmino;
                fromAminoMsg(object: _96.GetTxsEventRequestAminoMsg): _96.GetTxsEventRequest;
                toAminoMsg(message: _96.GetTxsEventRequest): _96.GetTxsEventRequestAminoMsg;
                fromProtoMsg(message: _96.GetTxsEventRequestProtoMsg): _96.GetTxsEventRequest;
                toProto(message: _96.GetTxsEventRequest): Uint8Array;
                toProtoMsg(message: _96.GetTxsEventRequest): _96.GetTxsEventRequestProtoMsg;
            };
            GetTxsEventResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _96.GetTxsEventResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _96.GetTxsEventResponse;
                fromPartial(object: {
                    txs?: {
                        body?: {
                            messages?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            }[];
                            memo?: string;
                            timeoutHeight?: bigint;
                            extensionOptions?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            }[];
                            nonCriticalExtensionOptions?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            }[];
                        };
                        authInfo?: {
                            signerInfos?: {
                                publicKey?: {
                                    $typeUrl?: string;
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                };
                                modeInfo?: {
                                    single?: {
                                        mode?: _95.SignMode;
                                    };
                                    multi?: {
                                        bitarray?: {
                                            extraBitsStored?: number;
                                            elems?: Uint8Array;
                                        };
                                        modeInfos?: any[];
                                    };
                                };
                                sequence?: bigint;
                            }[];
                            fee?: {
                                amount?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                gasLimit?: bigint;
                                payer?: string;
                                granter?: string;
                            };
                            tip?: {
                                amount?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                tipper?: string;
                            };
                        };
                        signatures?: Uint8Array[];
                    }[];
                    txResponses?: {
                        height?: bigint;
                        txhash?: string;
                        codespace?: string;
                        code?: number;
                        data?: string;
                        rawLog?: string;
                        logs?: {
                            msgIndex?: number;
                            log?: string;
                            events?: {
                                type?: string;
                                attributes?: {
                                    key?: string;
                                    value?: string;
                                }[];
                            }[];
                        }[];
                        info?: string;
                        gasWanted?: bigint;
                        gasUsed?: bigint;
                        tx?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        timestamp?: string;
                        events?: {
                            type?: string;
                            attributes?: {
                                key?: string;
                                value?: string;
                                index?: boolean;
                            }[];
                        }[];
                    }[];
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                    total?: bigint;
                }): _96.GetTxsEventResponse;
                fromAmino(object: _96.GetTxsEventResponseAmino): _96.GetTxsEventResponse;
                toAmino(message: _96.GetTxsEventResponse): _96.GetTxsEventResponseAmino;
                fromAminoMsg(object: _96.GetTxsEventResponseAminoMsg): _96.GetTxsEventResponse;
                toAminoMsg(message: _96.GetTxsEventResponse): _96.GetTxsEventResponseAminoMsg;
                fromProtoMsg(message: _96.GetTxsEventResponseProtoMsg): _96.GetTxsEventResponse;
                toProto(message: _96.GetTxsEventResponse): Uint8Array;
                toProtoMsg(message: _96.GetTxsEventResponse): _96.GetTxsEventResponseProtoMsg;
            };
            BroadcastTxRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _96.BroadcastTxRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _96.BroadcastTxRequest;
                fromPartial(object: {
                    txBytes?: Uint8Array;
                    mode?: _96.BroadcastMode;
                }): _96.BroadcastTxRequest;
                fromAmino(object: _96.BroadcastTxRequestAmino): _96.BroadcastTxRequest;
                toAmino(message: _96.BroadcastTxRequest): _96.BroadcastTxRequestAmino;
                fromAminoMsg(object: _96.BroadcastTxRequestAminoMsg): _96.BroadcastTxRequest;
                toAminoMsg(message: _96.BroadcastTxRequest): _96.BroadcastTxRequestAminoMsg;
                fromProtoMsg(message: _96.BroadcastTxRequestProtoMsg): _96.BroadcastTxRequest;
                toProto(message: _96.BroadcastTxRequest): Uint8Array;
                toProtoMsg(message: _96.BroadcastTxRequest): _96.BroadcastTxRequestProtoMsg;
            };
            BroadcastTxResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _96.BroadcastTxResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _96.BroadcastTxResponse;
                fromPartial(object: {
                    txResponse?: {
                        height?: bigint;
                        txhash?: string;
                        codespace?: string;
                        code?: number;
                        data?: string;
                        rawLog?: string;
                        logs?: {
                            msgIndex?: number;
                            log?: string;
                            events?: {
                                type?: string;
                                attributes?: {
                                    key?: string;
                                    value?: string;
                                }[];
                            }[];
                        }[];
                        info?: string;
                        gasWanted?: bigint;
                        gasUsed?: bigint;
                        tx?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        timestamp?: string;
                        events?: {
                            type?: string;
                            attributes?: {
                                key?: string;
                                value?: string;
                                index?: boolean;
                            }[];
                        }[];
                    };
                }): _96.BroadcastTxResponse;
                fromAmino(object: _96.BroadcastTxResponseAmino): _96.BroadcastTxResponse;
                toAmino(message: _96.BroadcastTxResponse): _96.BroadcastTxResponseAmino;
                fromAminoMsg(object: _96.BroadcastTxResponseAminoMsg): _96.BroadcastTxResponse;
                toAminoMsg(message: _96.BroadcastTxResponse): _96.BroadcastTxResponseAminoMsg;
                fromProtoMsg(message: _96.BroadcastTxResponseProtoMsg): _96.BroadcastTxResponse;
                toProto(message: _96.BroadcastTxResponse): Uint8Array;
                toProtoMsg(message: _96.BroadcastTxResponse): _96.BroadcastTxResponseProtoMsg;
            };
            SimulateRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _96.SimulateRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _96.SimulateRequest;
                fromPartial(object: {
                    tx?: {
                        body?: {
                            messages?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            }[];
                            memo?: string;
                            timeoutHeight?: bigint;
                            extensionOptions?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            }[];
                            nonCriticalExtensionOptions?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            }[];
                        };
                        authInfo?: {
                            signerInfos?: {
                                publicKey?: {
                                    $typeUrl?: string;
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                };
                                modeInfo?: {
                                    single?: {
                                        mode?: _95.SignMode;
                                    };
                                    multi?: {
                                        bitarray?: {
                                            extraBitsStored?: number;
                                            elems?: Uint8Array;
                                        };
                                        modeInfos?: any[];
                                    };
                                };
                                sequence?: bigint;
                            }[];
                            fee?: {
                                amount?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                gasLimit?: bigint;
                                payer?: string;
                                granter?: string;
                            };
                            tip?: {
                                amount?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                tipper?: string;
                            };
                        };
                        signatures?: Uint8Array[];
                    };
                    txBytes?: Uint8Array;
                }): _96.SimulateRequest;
                fromAmino(object: _96.SimulateRequestAmino): _96.SimulateRequest;
                toAmino(message: _96.SimulateRequest): _96.SimulateRequestAmino;
                fromAminoMsg(object: _96.SimulateRequestAminoMsg): _96.SimulateRequest;
                toAminoMsg(message: _96.SimulateRequest): _96.SimulateRequestAminoMsg;
                fromProtoMsg(message: _96.SimulateRequestProtoMsg): _96.SimulateRequest;
                toProto(message: _96.SimulateRequest): Uint8Array;
                toProtoMsg(message: _96.SimulateRequest): _96.SimulateRequestProtoMsg;
            };
            SimulateResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _96.SimulateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _96.SimulateResponse;
                fromPartial(object: {
                    gasInfo?: {
                        gasWanted?: bigint;
                        gasUsed?: bigint;
                    };
                    result?: {
                        data?: Uint8Array;
                        log?: string;
                        events?: {
                            type?: string;
                            attributes?: {
                                key?: string;
                                value?: string;
                                index?: boolean;
                            }[];
                        }[];
                        msgResponses?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        }[];
                    };
                }): _96.SimulateResponse;
                fromAmino(object: _96.SimulateResponseAmino): _96.SimulateResponse;
                toAmino(message: _96.SimulateResponse): _96.SimulateResponseAmino;
                fromAminoMsg(object: _96.SimulateResponseAminoMsg): _96.SimulateResponse;
                toAminoMsg(message: _96.SimulateResponse): _96.SimulateResponseAminoMsg;
                fromProtoMsg(message: _96.SimulateResponseProtoMsg): _96.SimulateResponse;
                toProto(message: _96.SimulateResponse): Uint8Array;
                toProtoMsg(message: _96.SimulateResponse): _96.SimulateResponseProtoMsg;
            };
            GetTxRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _96.GetTxRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _96.GetTxRequest;
                fromPartial(object: {
                    hash?: string;
                }): _96.GetTxRequest;
                fromAmino(object: _96.GetTxRequestAmino): _96.GetTxRequest;
                toAmino(message: _96.GetTxRequest): _96.GetTxRequestAmino;
                fromAminoMsg(object: _96.GetTxRequestAminoMsg): _96.GetTxRequest;
                toAminoMsg(message: _96.GetTxRequest): _96.GetTxRequestAminoMsg;
                fromProtoMsg(message: _96.GetTxRequestProtoMsg): _96.GetTxRequest;
                toProto(message: _96.GetTxRequest): Uint8Array;
                toProtoMsg(message: _96.GetTxRequest): _96.GetTxRequestProtoMsg;
            };
            GetTxResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _96.GetTxResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _96.GetTxResponse;
                fromPartial(object: {
                    tx?: {
                        body?: {
                            messages?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            }[];
                            memo?: string;
                            timeoutHeight?: bigint;
                            extensionOptions?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            }[];
                            nonCriticalExtensionOptions?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            }[];
                        };
                        authInfo?: {
                            signerInfos?: {
                                publicKey?: {
                                    $typeUrl?: string;
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                };
                                modeInfo?: {
                                    single?: {
                                        mode?: _95.SignMode;
                                    };
                                    multi?: {
                                        bitarray?: {
                                            extraBitsStored?: number;
                                            elems?: Uint8Array;
                                        };
                                        modeInfos?: any[];
                                    };
                                };
                                sequence?: bigint;
                            }[];
                            fee?: {
                                amount?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                gasLimit?: bigint;
                                payer?: string;
                                granter?: string;
                            };
                            tip?: {
                                amount?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                tipper?: string;
                            };
                        };
                        signatures?: Uint8Array[];
                    };
                    txResponse?: {
                        height?: bigint;
                        txhash?: string;
                        codespace?: string;
                        code?: number;
                        data?: string;
                        rawLog?: string;
                        logs?: {
                            msgIndex?: number;
                            log?: string;
                            events?: {
                                type?: string;
                                attributes?: {
                                    key?: string;
                                    value?: string;
                                }[];
                            }[];
                        }[];
                        info?: string;
                        gasWanted?: bigint;
                        gasUsed?: bigint;
                        tx?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        timestamp?: string;
                        events?: {
                            type?: string;
                            attributes?: {
                                key?: string;
                                value?: string;
                                index?: boolean;
                            }[];
                        }[];
                    };
                }): _96.GetTxResponse;
                fromAmino(object: _96.GetTxResponseAmino): _96.GetTxResponse;
                toAmino(message: _96.GetTxResponse): _96.GetTxResponseAmino;
                fromAminoMsg(object: _96.GetTxResponseAminoMsg): _96.GetTxResponse;
                toAminoMsg(message: _96.GetTxResponse): _96.GetTxResponseAminoMsg;
                fromProtoMsg(message: _96.GetTxResponseProtoMsg): _96.GetTxResponse;
                toProto(message: _96.GetTxResponse): Uint8Array;
                toProtoMsg(message: _96.GetTxResponse): _96.GetTxResponseProtoMsg;
            };
            GetBlockWithTxsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _96.GetBlockWithTxsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _96.GetBlockWithTxsRequest;
                fromPartial(object: {
                    height?: bigint;
                    pagination?: {
                        key?: Uint8Array;
                        offset?: bigint;
                        limit?: bigint;
                        countTotal?: boolean;
                        reverse?: boolean;
                    };
                }): _96.GetBlockWithTxsRequest;
                fromAmino(object: _96.GetBlockWithTxsRequestAmino): _96.GetBlockWithTxsRequest;
                toAmino(message: _96.GetBlockWithTxsRequest): _96.GetBlockWithTxsRequestAmino;
                fromAminoMsg(object: _96.GetBlockWithTxsRequestAminoMsg): _96.GetBlockWithTxsRequest;
                toAminoMsg(message: _96.GetBlockWithTxsRequest): _96.GetBlockWithTxsRequestAminoMsg;
                fromProtoMsg(message: _96.GetBlockWithTxsRequestProtoMsg): _96.GetBlockWithTxsRequest;
                toProto(message: _96.GetBlockWithTxsRequest): Uint8Array;
                toProtoMsg(message: _96.GetBlockWithTxsRequest): _96.GetBlockWithTxsRequestProtoMsg;
            };
            GetBlockWithTxsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _96.GetBlockWithTxsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _96.GetBlockWithTxsResponse;
                fromPartial(object: {
                    txs?: {
                        body?: {
                            messages?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            }[];
                            memo?: string;
                            timeoutHeight?: bigint;
                            extensionOptions?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            }[];
                            nonCriticalExtensionOptions?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            }[];
                        };
                        authInfo?: {
                            signerInfos?: {
                                publicKey?: {
                                    $typeUrl?: string;
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                };
                                modeInfo?: {
                                    single?: {
                                        mode?: _95.SignMode;
                                    };
                                    multi?: {
                                        bitarray?: {
                                            extraBitsStored?: number;
                                            elems?: Uint8Array;
                                        };
                                        modeInfos?: any[];
                                    };
                                };
                                sequence?: bigint;
                            }[];
                            fee?: {
                                amount?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                gasLimit?: bigint;
                                payer?: string;
                                granter?: string;
                            };
                            tip?: {
                                amount?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                tipper?: string;
                            };
                        };
                        signatures?: Uint8Array[];
                    }[];
                    blockId?: {
                        hash?: Uint8Array;
                        partSetHeader?: {
                            total?: number;
                            hash?: Uint8Array;
                        };
                    };
                    block?: {
                        header?: {
                            version?: {
                                block?: bigint;
                                app?: bigint;
                            };
                            chainId?: string;
                            height?: bigint;
                            time?: Date;
                            lastBlockId?: {
                                hash?: Uint8Array;
                                partSetHeader?: {
                                    total?: number;
                                    hash?: Uint8Array;
                                };
                            };
                            lastCommitHash?: Uint8Array;
                            dataHash?: Uint8Array;
                            validatorsHash?: Uint8Array;
                            nextValidatorsHash?: Uint8Array;
                            consensusHash?: Uint8Array;
                            appHash?: Uint8Array;
                            lastResultsHash?: Uint8Array;
                            evidenceHash?: Uint8Array;
                            proposerAddress?: Uint8Array;
                        };
                        data?: {
                            txs?: Uint8Array[];
                        };
                        evidence?: {
                            evidence?: {
                                duplicateVoteEvidence?: {
                                    voteA?: {
                                        type?: import("../tendermint/types/types").SignedMsgType;
                                        height?: bigint;
                                        round?: number;
                                        blockId?: {
                                            hash?: Uint8Array;
                                            partSetHeader?: {
                                                total?: number;
                                                hash?: Uint8Array;
                                            };
                                        };
                                        timestamp?: Date;
                                        validatorAddress?: Uint8Array;
                                        validatorIndex?: number;
                                        signature?: Uint8Array;
                                        extension?: Uint8Array;
                                        extensionSignature?: Uint8Array;
                                    };
                                    voteB?: {
                                        type?: import("../tendermint/types/types").SignedMsgType;
                                        height?: bigint;
                                        round?: number;
                                        blockId?: {
                                            hash?: Uint8Array;
                                            partSetHeader?: {
                                                total?: number;
                                                hash?: Uint8Array;
                                            };
                                        };
                                        timestamp?: Date;
                                        validatorAddress?: Uint8Array;
                                        validatorIndex?: number;
                                        signature?: Uint8Array;
                                        extension?: Uint8Array;
                                        extensionSignature?: Uint8Array;
                                    };
                                    totalVotingPower?: bigint;
                                    validatorPower?: bigint;
                                    timestamp?: Date;
                                };
                                lightClientAttackEvidence?: {
                                    conflictingBlock?: {
                                        signedHeader?: {
                                            header?: {
                                                version?: {
                                                    block?: bigint;
                                                    app?: bigint;
                                                };
                                                chainId?: string;
                                                height?: bigint;
                                                time?: Date;
                                                lastBlockId?: {
                                                    hash?: Uint8Array;
                                                    partSetHeader?: {
                                                        total?: number;
                                                        hash?: Uint8Array;
                                                    };
                                                };
                                                lastCommitHash?: Uint8Array;
                                                dataHash?: Uint8Array;
                                                validatorsHash?: Uint8Array;
                                                nextValidatorsHash?: Uint8Array;
                                                consensusHash?: Uint8Array;
                                                appHash?: Uint8Array;
                                                lastResultsHash?: Uint8Array;
                                                evidenceHash?: Uint8Array;
                                                proposerAddress?: Uint8Array;
                                            };
                                            commit?: {
                                                height?: bigint;
                                                round?: number;
                                                blockId?: {
                                                    hash?: Uint8Array;
                                                    partSetHeader?: {
                                                        total?: number;
                                                        hash?: Uint8Array;
                                                    };
                                                };
                                                signatures?: {
                                                    blockIdFlag?: import("../tendermint/types/validator").BlockIDFlag;
                                                    validatorAddress?: Uint8Array;
                                                    timestamp?: Date;
                                                    signature?: Uint8Array;
                                                }[];
                                            };
                                        };
                                        validatorSet?: {
                                            validators?: {
                                                address?: Uint8Array;
                                                pubKey?: {
                                                    ed25519?: Uint8Array;
                                                    secp256k1?: Uint8Array;
                                                };
                                                votingPower?: bigint;
                                                proposerPriority?: bigint;
                                            }[];
                                            proposer?: {
                                                address?: Uint8Array;
                                                pubKey?: {
                                                    ed25519?: Uint8Array;
                                                    secp256k1?: Uint8Array;
                                                };
                                                votingPower?: bigint;
                                                proposerPriority?: bigint;
                                            };
                                            totalVotingPower?: bigint;
                                        };
                                    };
                                    commonHeight?: bigint;
                                    byzantineValidators?: {
                                        address?: Uint8Array;
                                        pubKey?: {
                                            ed25519?: Uint8Array;
                                            secp256k1?: Uint8Array;
                                        };
                                        votingPower?: bigint;
                                        proposerPriority?: bigint;
                                    }[];
                                    totalVotingPower?: bigint;
                                    timestamp?: Date;
                                };
                            }[];
                        };
                        lastCommit?: {
                            height?: bigint;
                            round?: number;
                            blockId?: {
                                hash?: Uint8Array;
                                partSetHeader?: {
                                    total?: number;
                                    hash?: Uint8Array;
                                };
                            };
                            signatures?: {
                                blockIdFlag?: import("../tendermint/types/validator").BlockIDFlag;
                                validatorAddress?: Uint8Array;
                                timestamp?: Date;
                                signature?: Uint8Array;
                            }[];
                        };
                    };
                    pagination?: {
                        nextKey?: Uint8Array;
                        total?: bigint;
                    };
                }): _96.GetBlockWithTxsResponse;
                fromAmino(object: _96.GetBlockWithTxsResponseAmino): _96.GetBlockWithTxsResponse;
                toAmino(message: _96.GetBlockWithTxsResponse): _96.GetBlockWithTxsResponseAmino;
                fromAminoMsg(object: _96.GetBlockWithTxsResponseAminoMsg): _96.GetBlockWithTxsResponse;
                toAminoMsg(message: _96.GetBlockWithTxsResponse): _96.GetBlockWithTxsResponseAminoMsg;
                fromProtoMsg(message: _96.GetBlockWithTxsResponseProtoMsg): _96.GetBlockWithTxsResponse;
                toProto(message: _96.GetBlockWithTxsResponse): Uint8Array;
                toProtoMsg(message: _96.GetBlockWithTxsResponse): _96.GetBlockWithTxsResponseProtoMsg;
            };
            TxDecodeRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _96.TxDecodeRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _96.TxDecodeRequest;
                fromPartial(object: {
                    txBytes?: Uint8Array;
                }): _96.TxDecodeRequest;
                fromAmino(object: _96.TxDecodeRequestAmino): _96.TxDecodeRequest;
                toAmino(message: _96.TxDecodeRequest): _96.TxDecodeRequestAmino;
                fromAminoMsg(object: _96.TxDecodeRequestAminoMsg): _96.TxDecodeRequest;
                toAminoMsg(message: _96.TxDecodeRequest): _96.TxDecodeRequestAminoMsg;
                fromProtoMsg(message: _96.TxDecodeRequestProtoMsg): _96.TxDecodeRequest;
                toProto(message: _96.TxDecodeRequest): Uint8Array;
                toProtoMsg(message: _96.TxDecodeRequest): _96.TxDecodeRequestProtoMsg;
            };
            TxDecodeResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _96.TxDecodeResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _96.TxDecodeResponse;
                fromPartial(object: {
                    tx?: {
                        body?: {
                            messages?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            }[];
                            memo?: string;
                            timeoutHeight?: bigint;
                            extensionOptions?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            }[];
                            nonCriticalExtensionOptions?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            }[];
                        };
                        authInfo?: {
                            signerInfos?: {
                                publicKey?: {
                                    $typeUrl?: string;
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                };
                                modeInfo?: {
                                    single?: {
                                        mode?: _95.SignMode;
                                    };
                                    multi?: {
                                        bitarray?: {
                                            extraBitsStored?: number;
                                            elems?: Uint8Array;
                                        };
                                        modeInfos?: any[];
                                    };
                                };
                                sequence?: bigint;
                            }[];
                            fee?: {
                                amount?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                gasLimit?: bigint;
                                payer?: string;
                                granter?: string;
                            };
                            tip?: {
                                amount?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                tipper?: string;
                            };
                        };
                        signatures?: Uint8Array[];
                    };
                }): _96.TxDecodeResponse;
                fromAmino(object: _96.TxDecodeResponseAmino): _96.TxDecodeResponse;
                toAmino(message: _96.TxDecodeResponse): _96.TxDecodeResponseAmino;
                fromAminoMsg(object: _96.TxDecodeResponseAminoMsg): _96.TxDecodeResponse;
                toAminoMsg(message: _96.TxDecodeResponse): _96.TxDecodeResponseAminoMsg;
                fromProtoMsg(message: _96.TxDecodeResponseProtoMsg): _96.TxDecodeResponse;
                toProto(message: _96.TxDecodeResponse): Uint8Array;
                toProtoMsg(message: _96.TxDecodeResponse): _96.TxDecodeResponseProtoMsg;
            };
            TxEncodeRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _96.TxEncodeRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _96.TxEncodeRequest;
                fromPartial(object: {
                    tx?: {
                        body?: {
                            messages?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            }[];
                            memo?: string;
                            timeoutHeight?: bigint;
                            extensionOptions?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            }[];
                            nonCriticalExtensionOptions?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            }[];
                        };
                        authInfo?: {
                            signerInfos?: {
                                publicKey?: {
                                    $typeUrl?: string;
                                    typeUrl?: string;
                                    value?: Uint8Array;
                                };
                                modeInfo?: {
                                    single?: {
                                        mode?: _95.SignMode;
                                    };
                                    multi?: {
                                        bitarray?: {
                                            extraBitsStored?: number;
                                            elems?: Uint8Array;
                                        };
                                        modeInfos?: any[];
                                    };
                                };
                                sequence?: bigint;
                            }[];
                            fee?: {
                                amount?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                gasLimit?: bigint;
                                payer?: string;
                                granter?: string;
                            };
                            tip?: {
                                amount?: {
                                    denom?: string;
                                    amount?: string;
                                }[];
                                tipper?: string;
                            };
                        };
                        signatures?: Uint8Array[];
                    };
                }): _96.TxEncodeRequest;
                fromAmino(object: _96.TxEncodeRequestAmino): _96.TxEncodeRequest;
                toAmino(message: _96.TxEncodeRequest): _96.TxEncodeRequestAmino;
                fromAminoMsg(object: _96.TxEncodeRequestAminoMsg): _96.TxEncodeRequest;
                toAminoMsg(message: _96.TxEncodeRequest): _96.TxEncodeRequestAminoMsg;
                fromProtoMsg(message: _96.TxEncodeRequestProtoMsg): _96.TxEncodeRequest;
                toProto(message: _96.TxEncodeRequest): Uint8Array;
                toProtoMsg(message: _96.TxEncodeRequest): _96.TxEncodeRequestProtoMsg;
            };
            TxEncodeResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _96.TxEncodeResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _96.TxEncodeResponse;
                fromPartial(object: {
                    txBytes?: Uint8Array;
                }): _96.TxEncodeResponse;
                fromAmino(object: _96.TxEncodeResponseAmino): _96.TxEncodeResponse;
                toAmino(message: _96.TxEncodeResponse): _96.TxEncodeResponseAmino;
                fromAminoMsg(object: _96.TxEncodeResponseAminoMsg): _96.TxEncodeResponse;
                toAminoMsg(message: _96.TxEncodeResponse): _96.TxEncodeResponseAminoMsg;
                fromProtoMsg(message: _96.TxEncodeResponseProtoMsg): _96.TxEncodeResponse;
                toProto(message: _96.TxEncodeResponse): Uint8Array;
                toProtoMsg(message: _96.TxEncodeResponse): _96.TxEncodeResponseProtoMsg;
            };
            TxEncodeAminoRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _96.TxEncodeAminoRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _96.TxEncodeAminoRequest;
                fromPartial(object: {
                    aminoJson?: string;
                }): _96.TxEncodeAminoRequest;
                fromAmino(object: _96.TxEncodeAminoRequestAmino): _96.TxEncodeAminoRequest;
                toAmino(message: _96.TxEncodeAminoRequest): _96.TxEncodeAminoRequestAmino;
                fromAminoMsg(object: _96.TxEncodeAminoRequestAminoMsg): _96.TxEncodeAminoRequest;
                toAminoMsg(message: _96.TxEncodeAminoRequest): _96.TxEncodeAminoRequestAminoMsg;
                fromProtoMsg(message: _96.TxEncodeAminoRequestProtoMsg): _96.TxEncodeAminoRequest;
                toProto(message: _96.TxEncodeAminoRequest): Uint8Array;
                toProtoMsg(message: _96.TxEncodeAminoRequest): _96.TxEncodeAminoRequestProtoMsg;
            };
            TxEncodeAminoResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _96.TxEncodeAminoResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _96.TxEncodeAminoResponse;
                fromPartial(object: {
                    aminoBinary?: Uint8Array;
                }): _96.TxEncodeAminoResponse;
                fromAmino(object: _96.TxEncodeAminoResponseAmino): _96.TxEncodeAminoResponse;
                toAmino(message: _96.TxEncodeAminoResponse): _96.TxEncodeAminoResponseAmino;
                fromAminoMsg(object: _96.TxEncodeAminoResponseAminoMsg): _96.TxEncodeAminoResponse;
                toAminoMsg(message: _96.TxEncodeAminoResponse): _96.TxEncodeAminoResponseAminoMsg;
                fromProtoMsg(message: _96.TxEncodeAminoResponseProtoMsg): _96.TxEncodeAminoResponse;
                toProto(message: _96.TxEncodeAminoResponse): Uint8Array;
                toProtoMsg(message: _96.TxEncodeAminoResponse): _96.TxEncodeAminoResponseProtoMsg;
            };
            TxDecodeAminoRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _96.TxDecodeAminoRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _96.TxDecodeAminoRequest;
                fromPartial(object: {
                    aminoBinary?: Uint8Array;
                }): _96.TxDecodeAminoRequest;
                fromAmino(object: _96.TxDecodeAminoRequestAmino): _96.TxDecodeAminoRequest;
                toAmino(message: _96.TxDecodeAminoRequest): _96.TxDecodeAminoRequestAmino;
                fromAminoMsg(object: _96.TxDecodeAminoRequestAminoMsg): _96.TxDecodeAminoRequest;
                toAminoMsg(message: _96.TxDecodeAminoRequest): _96.TxDecodeAminoRequestAminoMsg;
                fromProtoMsg(message: _96.TxDecodeAminoRequestProtoMsg): _96.TxDecodeAminoRequest;
                toProto(message: _96.TxDecodeAminoRequest): Uint8Array;
                toProtoMsg(message: _96.TxDecodeAminoRequest): _96.TxDecodeAminoRequestProtoMsg;
            };
            TxDecodeAminoResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _96.TxDecodeAminoResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _96.TxDecodeAminoResponse;
                fromPartial(object: {
                    aminoJson?: string;
                }): _96.TxDecodeAminoResponse;
                fromAmino(object: _96.TxDecodeAminoResponseAmino): _96.TxDecodeAminoResponse;
                toAmino(message: _96.TxDecodeAminoResponse): _96.TxDecodeAminoResponseAmino;
                fromAminoMsg(object: _96.TxDecodeAminoResponseAminoMsg): _96.TxDecodeAminoResponse;
                toAminoMsg(message: _96.TxDecodeAminoResponse): _96.TxDecodeAminoResponseAminoMsg;
                fromProtoMsg(message: _96.TxDecodeAminoResponseProtoMsg): _96.TxDecodeAminoResponse;
                toProto(message: _96.TxDecodeAminoResponse): Uint8Array;
                toProtoMsg(message: _96.TxDecodeAminoResponse): _96.TxDecodeAminoResponseProtoMsg;
            };
        };
    }
    namespace upgrade {
        namespace module {
            const v1: {
                Module: {
                    typeUrl: string;
                    aminoType: string;
                    encode(message: _98.Module, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _98.Module;
                    fromPartial(object: {
                        authority?: string;
                    }): _98.Module;
                    fromAmino(object: _98.ModuleAmino): _98.Module;
                    toAmino(message: _98.Module): _98.ModuleAmino;
                    fromAminoMsg(object: _98.ModuleAminoMsg): _98.Module;
                    toAminoMsg(message: _98.Module): _98.ModuleAminoMsg;
                    fromProtoMsg(message: _98.ModuleProtoMsg): _98.Module;
                    toProto(message: _98.Module): Uint8Array;
                    toProtoMsg(message: _98.Module): _98.ModuleProtoMsg;
                };
            };
        }
        const v1beta1: {
            MsgClientImpl: typeof _241.MsgClientImpl;
            QueryClientImpl: typeof _227.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                currentPlan(request?: _99.QueryCurrentPlanRequest): Promise<_99.QueryCurrentPlanResponse>;
                appliedPlan(request: _99.QueryAppliedPlanRequest): Promise<_99.QueryAppliedPlanResponse>;
                upgradedConsensusState(request: _99.QueryUpgradedConsensusStateRequest): Promise<_99.QueryUpgradedConsensusStateResponse>;
                moduleVersions(request: _99.QueryModuleVersionsRequest): Promise<_99.QueryModuleVersionsResponse>;
                authority(request?: _99.QueryAuthorityRequest): Promise<_99.QueryAuthorityResponse>;
            };
            LCDQueryClient: typeof _209.LCDQueryClient;
            registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
            load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
            MessageComposer: {
                encoded: {
                    softwareUpgrade(value: _100.MsgSoftwareUpgrade): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    cancelUpgrade(value: _100.MsgCancelUpgrade): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                };
                withTypeUrl: {
                    softwareUpgrade(value: _100.MsgSoftwareUpgrade): {
                        typeUrl: string;
                        value: _100.MsgSoftwareUpgrade;
                    };
                    cancelUpgrade(value: _100.MsgCancelUpgrade): {
                        typeUrl: string;
                        value: _100.MsgCancelUpgrade;
                    };
                };
                fromPartial: {
                    softwareUpgrade(value: _100.MsgSoftwareUpgrade): {
                        typeUrl: string;
                        value: _100.MsgSoftwareUpgrade;
                    };
                    cancelUpgrade(value: _100.MsgCancelUpgrade): {
                        typeUrl: string;
                        value: _100.MsgCancelUpgrade;
                    };
                };
            };
            AminoConverter: {
                "/cosmos.upgrade.v1beta1.MsgSoftwareUpgrade": {
                    aminoType: string;
                    toAmino: (message: _100.MsgSoftwareUpgrade) => _100.MsgSoftwareUpgradeAmino;
                    fromAmino: (object: _100.MsgSoftwareUpgradeAmino) => _100.MsgSoftwareUpgrade;
                };
                "/cosmos.upgrade.v1beta1.MsgCancelUpgrade": {
                    aminoType: string;
                    toAmino: (message: _100.MsgCancelUpgrade) => _100.MsgCancelUpgradeAmino;
                    fromAmino: (object: _100.MsgCancelUpgradeAmino) => _100.MsgCancelUpgrade;
                };
            };
            Plan: {
                typeUrl: string;
                aminoType: string;
                encode(message: _101.Plan, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _101.Plan;
                fromPartial(object: {
                    name?: string;
                    time?: Date;
                    height?: bigint;
                    info?: string;
                    upgradedClientState?: {
                        $typeUrl?: string;
                        typeUrl?: string;
                        value?: Uint8Array;
                    };
                }): _101.Plan;
                fromAmino(object: _101.PlanAmino): _101.Plan;
                toAmino(message: _101.Plan): _101.PlanAmino;
                fromAminoMsg(object: _101.PlanAminoMsg): _101.Plan;
                toAminoMsg(message: _101.Plan): _101.PlanAminoMsg;
                fromProtoMsg(message: _101.PlanProtoMsg): _101.Plan;
                toProto(message: _101.Plan): Uint8Array;
                toProtoMsg(message: _101.Plan): _101.PlanProtoMsg;
            };
            SoftwareUpgradeProposal: {
                typeUrl: string;
                aminoType: string;
                encode(message: _101.SoftwareUpgradeProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _101.SoftwareUpgradeProposal;
                fromPartial(object: {
                    $typeUrl?: "/cosmos.upgrade.v1beta1.SoftwareUpgradeProposal";
                    title?: string;
                    description?: string;
                    plan?: {
                        name?: string;
                        time?: Date;
                        height?: bigint;
                        info?: string;
                        upgradedClientState?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                    };
                }): _101.SoftwareUpgradeProposal;
                fromAmino(object: _101.SoftwareUpgradeProposalAmino): _101.SoftwareUpgradeProposal;
                toAmino(message: _101.SoftwareUpgradeProposal): _101.SoftwareUpgradeProposalAmino;
                fromAminoMsg(object: _101.SoftwareUpgradeProposalAminoMsg): _101.SoftwareUpgradeProposal;
                toAminoMsg(message: _101.SoftwareUpgradeProposal): _101.SoftwareUpgradeProposalAminoMsg;
                fromProtoMsg(message: _101.SoftwareUpgradeProposalProtoMsg): _101.SoftwareUpgradeProposal;
                toProto(message: _101.SoftwareUpgradeProposal): Uint8Array;
                toProtoMsg(message: _101.SoftwareUpgradeProposal): _101.SoftwareUpgradeProposalProtoMsg;
            };
            CancelSoftwareUpgradeProposal: {
                typeUrl: string;
                aminoType: string;
                encode(message: _101.CancelSoftwareUpgradeProposal, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _101.CancelSoftwareUpgradeProposal;
                fromPartial(object: {
                    $typeUrl?: "/cosmos.upgrade.v1beta1.CancelSoftwareUpgradeProposal";
                    title?: string;
                    description?: string;
                }): _101.CancelSoftwareUpgradeProposal;
                fromAmino(object: _101.CancelSoftwareUpgradeProposalAmino): _101.CancelSoftwareUpgradeProposal;
                toAmino(message: _101.CancelSoftwareUpgradeProposal): _101.CancelSoftwareUpgradeProposalAmino;
                fromAminoMsg(object: _101.CancelSoftwareUpgradeProposalAminoMsg): _101.CancelSoftwareUpgradeProposal;
                toAminoMsg(message: _101.CancelSoftwareUpgradeProposal): _101.CancelSoftwareUpgradeProposalAminoMsg;
                fromProtoMsg(message: _101.CancelSoftwareUpgradeProposalProtoMsg): _101.CancelSoftwareUpgradeProposal;
                toProto(message: _101.CancelSoftwareUpgradeProposal): Uint8Array;
                toProtoMsg(message: _101.CancelSoftwareUpgradeProposal): _101.CancelSoftwareUpgradeProposalProtoMsg;
            };
            ModuleVersion: {
                typeUrl: string;
                aminoType: string;
                encode(message: _101.ModuleVersion, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _101.ModuleVersion;
                fromPartial(object: {
                    name?: string;
                    version?: bigint;
                }): _101.ModuleVersion;
                fromAmino(object: _101.ModuleVersionAmino): _101.ModuleVersion;
                toAmino(message: _101.ModuleVersion): _101.ModuleVersionAmino;
                fromAminoMsg(object: _101.ModuleVersionAminoMsg): _101.ModuleVersion;
                toAminoMsg(message: _101.ModuleVersion): _101.ModuleVersionAminoMsg;
                fromProtoMsg(message: _101.ModuleVersionProtoMsg): _101.ModuleVersion;
                toProto(message: _101.ModuleVersion): Uint8Array;
                toProtoMsg(message: _101.ModuleVersion): _101.ModuleVersionProtoMsg;
            };
            MsgSoftwareUpgrade: {
                typeUrl: string;
                aminoType: string;
                encode(message: _100.MsgSoftwareUpgrade, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.MsgSoftwareUpgrade;
                fromPartial(object: {
                    authority?: string;
                    plan?: {
                        name?: string;
                        time?: Date;
                        height?: bigint;
                        info?: string;
                        upgradedClientState?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                    };
                }): _100.MsgSoftwareUpgrade;
                fromAmino(object: _100.MsgSoftwareUpgradeAmino): _100.MsgSoftwareUpgrade;
                toAmino(message: _100.MsgSoftwareUpgrade): _100.MsgSoftwareUpgradeAmino;
                fromAminoMsg(object: _100.MsgSoftwareUpgradeAminoMsg): _100.MsgSoftwareUpgrade;
                toAminoMsg(message: _100.MsgSoftwareUpgrade): _100.MsgSoftwareUpgradeAminoMsg;
                fromProtoMsg(message: _100.MsgSoftwareUpgradeProtoMsg): _100.MsgSoftwareUpgrade;
                toProto(message: _100.MsgSoftwareUpgrade): Uint8Array;
                toProtoMsg(message: _100.MsgSoftwareUpgrade): _100.MsgSoftwareUpgradeProtoMsg;
            };
            MsgSoftwareUpgradeResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _100.MsgSoftwareUpgradeResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.MsgSoftwareUpgradeResponse;
                fromPartial(_: {}): _100.MsgSoftwareUpgradeResponse;
                fromAmino(_: _100.MsgSoftwareUpgradeResponseAmino): _100.MsgSoftwareUpgradeResponse;
                toAmino(_: _100.MsgSoftwareUpgradeResponse): _100.MsgSoftwareUpgradeResponseAmino;
                fromAminoMsg(object: _100.MsgSoftwareUpgradeResponseAminoMsg): _100.MsgSoftwareUpgradeResponse;
                toAminoMsg(message: _100.MsgSoftwareUpgradeResponse): _100.MsgSoftwareUpgradeResponseAminoMsg;
                fromProtoMsg(message: _100.MsgSoftwareUpgradeResponseProtoMsg): _100.MsgSoftwareUpgradeResponse;
                toProto(message: _100.MsgSoftwareUpgradeResponse): Uint8Array;
                toProtoMsg(message: _100.MsgSoftwareUpgradeResponse): _100.MsgSoftwareUpgradeResponseProtoMsg;
            };
            MsgCancelUpgrade: {
                typeUrl: string;
                aminoType: string;
                encode(message: _100.MsgCancelUpgrade, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.MsgCancelUpgrade;
                fromPartial(object: {
                    authority?: string;
                }): _100.MsgCancelUpgrade;
                fromAmino(object: _100.MsgCancelUpgradeAmino): _100.MsgCancelUpgrade;
                toAmino(message: _100.MsgCancelUpgrade): _100.MsgCancelUpgradeAmino;
                fromAminoMsg(object: _100.MsgCancelUpgradeAminoMsg): _100.MsgCancelUpgrade;
                toAminoMsg(message: _100.MsgCancelUpgrade): _100.MsgCancelUpgradeAminoMsg;
                fromProtoMsg(message: _100.MsgCancelUpgradeProtoMsg): _100.MsgCancelUpgrade;
                toProto(message: _100.MsgCancelUpgrade): Uint8Array;
                toProtoMsg(message: _100.MsgCancelUpgrade): _100.MsgCancelUpgradeProtoMsg;
            };
            MsgCancelUpgradeResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _100.MsgCancelUpgradeResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _100.MsgCancelUpgradeResponse;
                fromPartial(_: {}): _100.MsgCancelUpgradeResponse;
                fromAmino(_: _100.MsgCancelUpgradeResponseAmino): _100.MsgCancelUpgradeResponse;
                toAmino(_: _100.MsgCancelUpgradeResponse): _100.MsgCancelUpgradeResponseAmino;
                fromAminoMsg(object: _100.MsgCancelUpgradeResponseAminoMsg): _100.MsgCancelUpgradeResponse;
                toAminoMsg(message: _100.MsgCancelUpgradeResponse): _100.MsgCancelUpgradeResponseAminoMsg;
                fromProtoMsg(message: _100.MsgCancelUpgradeResponseProtoMsg): _100.MsgCancelUpgradeResponse;
                toProto(message: _100.MsgCancelUpgradeResponse): Uint8Array;
                toProtoMsg(message: _100.MsgCancelUpgradeResponse): _100.MsgCancelUpgradeResponseProtoMsg;
            };
            QueryCurrentPlanRequest: {
                typeUrl: string;
                aminoType: string;
                encode(_: _99.QueryCurrentPlanRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.QueryCurrentPlanRequest;
                fromPartial(_: {}): _99.QueryCurrentPlanRequest;
                fromAmino(_: _99.QueryCurrentPlanRequestAmino): _99.QueryCurrentPlanRequest;
                toAmino(_: _99.QueryCurrentPlanRequest): _99.QueryCurrentPlanRequestAmino;
                fromAminoMsg(object: _99.QueryCurrentPlanRequestAminoMsg): _99.QueryCurrentPlanRequest;
                toAminoMsg(message: _99.QueryCurrentPlanRequest): _99.QueryCurrentPlanRequestAminoMsg;
                fromProtoMsg(message: _99.QueryCurrentPlanRequestProtoMsg): _99.QueryCurrentPlanRequest;
                toProto(message: _99.QueryCurrentPlanRequest): Uint8Array;
                toProtoMsg(message: _99.QueryCurrentPlanRequest): _99.QueryCurrentPlanRequestProtoMsg;
            };
            QueryCurrentPlanResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _99.QueryCurrentPlanResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.QueryCurrentPlanResponse;
                fromPartial(object: {
                    plan?: {
                        name?: string;
                        time?: Date;
                        height?: bigint;
                        info?: string;
                        upgradedClientState?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                    };
                }): _99.QueryCurrentPlanResponse;
                fromAmino(object: _99.QueryCurrentPlanResponseAmino): _99.QueryCurrentPlanResponse;
                toAmino(message: _99.QueryCurrentPlanResponse): _99.QueryCurrentPlanResponseAmino;
                fromAminoMsg(object: _99.QueryCurrentPlanResponseAminoMsg): _99.QueryCurrentPlanResponse;
                toAminoMsg(message: _99.QueryCurrentPlanResponse): _99.QueryCurrentPlanResponseAminoMsg;
                fromProtoMsg(message: _99.QueryCurrentPlanResponseProtoMsg): _99.QueryCurrentPlanResponse;
                toProto(message: _99.QueryCurrentPlanResponse): Uint8Array;
                toProtoMsg(message: _99.QueryCurrentPlanResponse): _99.QueryCurrentPlanResponseProtoMsg;
            };
            QueryAppliedPlanRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _99.QueryAppliedPlanRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.QueryAppliedPlanRequest;
                fromPartial(object: {
                    name?: string;
                }): _99.QueryAppliedPlanRequest;
                fromAmino(object: _99.QueryAppliedPlanRequestAmino): _99.QueryAppliedPlanRequest;
                toAmino(message: _99.QueryAppliedPlanRequest): _99.QueryAppliedPlanRequestAmino;
                fromAminoMsg(object: _99.QueryAppliedPlanRequestAminoMsg): _99.QueryAppliedPlanRequest;
                toAminoMsg(message: _99.QueryAppliedPlanRequest): _99.QueryAppliedPlanRequestAminoMsg;
                fromProtoMsg(message: _99.QueryAppliedPlanRequestProtoMsg): _99.QueryAppliedPlanRequest;
                toProto(message: _99.QueryAppliedPlanRequest): Uint8Array;
                toProtoMsg(message: _99.QueryAppliedPlanRequest): _99.QueryAppliedPlanRequestProtoMsg;
            };
            QueryAppliedPlanResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _99.QueryAppliedPlanResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.QueryAppliedPlanResponse;
                fromPartial(object: {
                    height?: bigint;
                }): _99.QueryAppliedPlanResponse;
                fromAmino(object: _99.QueryAppliedPlanResponseAmino): _99.QueryAppliedPlanResponse;
                toAmino(message: _99.QueryAppliedPlanResponse): _99.QueryAppliedPlanResponseAmino;
                fromAminoMsg(object: _99.QueryAppliedPlanResponseAminoMsg): _99.QueryAppliedPlanResponse;
                toAminoMsg(message: _99.QueryAppliedPlanResponse): _99.QueryAppliedPlanResponseAminoMsg;
                fromProtoMsg(message: _99.QueryAppliedPlanResponseProtoMsg): _99.QueryAppliedPlanResponse;
                toProto(message: _99.QueryAppliedPlanResponse): Uint8Array;
                toProtoMsg(message: _99.QueryAppliedPlanResponse): _99.QueryAppliedPlanResponseProtoMsg;
            };
            QueryUpgradedConsensusStateRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _99.QueryUpgradedConsensusStateRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.QueryUpgradedConsensusStateRequest;
                fromPartial(object: {
                    lastHeight?: bigint;
                }): _99.QueryUpgradedConsensusStateRequest;
                fromAmino(object: _99.QueryUpgradedConsensusStateRequestAmino): _99.QueryUpgradedConsensusStateRequest;
                toAmino(message: _99.QueryUpgradedConsensusStateRequest): _99.QueryUpgradedConsensusStateRequestAmino;
                fromAminoMsg(object: _99.QueryUpgradedConsensusStateRequestAminoMsg): _99.QueryUpgradedConsensusStateRequest;
                toAminoMsg(message: _99.QueryUpgradedConsensusStateRequest): _99.QueryUpgradedConsensusStateRequestAminoMsg;
                fromProtoMsg(message: _99.QueryUpgradedConsensusStateRequestProtoMsg): _99.QueryUpgradedConsensusStateRequest;
                toProto(message: _99.QueryUpgradedConsensusStateRequest): Uint8Array;
                toProtoMsg(message: _99.QueryUpgradedConsensusStateRequest): _99.QueryUpgradedConsensusStateRequestProtoMsg;
            };
            QueryUpgradedConsensusStateResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _99.QueryUpgradedConsensusStateResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.QueryUpgradedConsensusStateResponse;
                fromPartial(object: {
                    upgradedConsensusState?: Uint8Array;
                }): _99.QueryUpgradedConsensusStateResponse;
                fromAmino(object: _99.QueryUpgradedConsensusStateResponseAmino): _99.QueryUpgradedConsensusStateResponse;
                toAmino(message: _99.QueryUpgradedConsensusStateResponse): _99.QueryUpgradedConsensusStateResponseAmino;
                fromAminoMsg(object: _99.QueryUpgradedConsensusStateResponseAminoMsg): _99.QueryUpgradedConsensusStateResponse;
                toAminoMsg(message: _99.QueryUpgradedConsensusStateResponse): _99.QueryUpgradedConsensusStateResponseAminoMsg;
                fromProtoMsg(message: _99.QueryUpgradedConsensusStateResponseProtoMsg): _99.QueryUpgradedConsensusStateResponse;
                toProto(message: _99.QueryUpgradedConsensusStateResponse): Uint8Array;
                toProtoMsg(message: _99.QueryUpgradedConsensusStateResponse): _99.QueryUpgradedConsensusStateResponseProtoMsg;
            };
            QueryModuleVersionsRequest: {
                typeUrl: string;
                aminoType: string;
                encode(message: _99.QueryModuleVersionsRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.QueryModuleVersionsRequest;
                fromPartial(object: {
                    moduleName?: string;
                }): _99.QueryModuleVersionsRequest;
                fromAmino(object: _99.QueryModuleVersionsRequestAmino): _99.QueryModuleVersionsRequest;
                toAmino(message: _99.QueryModuleVersionsRequest): _99.QueryModuleVersionsRequestAmino;
                fromAminoMsg(object: _99.QueryModuleVersionsRequestAminoMsg): _99.QueryModuleVersionsRequest;
                toAminoMsg(message: _99.QueryModuleVersionsRequest): _99.QueryModuleVersionsRequestAminoMsg;
                fromProtoMsg(message: _99.QueryModuleVersionsRequestProtoMsg): _99.QueryModuleVersionsRequest;
                toProto(message: _99.QueryModuleVersionsRequest): Uint8Array;
                toProtoMsg(message: _99.QueryModuleVersionsRequest): _99.QueryModuleVersionsRequestProtoMsg;
            };
            QueryModuleVersionsResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _99.QueryModuleVersionsResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.QueryModuleVersionsResponse;
                fromPartial(object: {
                    moduleVersions?: {
                        name?: string;
                        version?: bigint;
                    }[];
                }): _99.QueryModuleVersionsResponse;
                fromAmino(object: _99.QueryModuleVersionsResponseAmino): _99.QueryModuleVersionsResponse;
                toAmino(message: _99.QueryModuleVersionsResponse): _99.QueryModuleVersionsResponseAmino;
                fromAminoMsg(object: _99.QueryModuleVersionsResponseAminoMsg): _99.QueryModuleVersionsResponse;
                toAminoMsg(message: _99.QueryModuleVersionsResponse): _99.QueryModuleVersionsResponseAminoMsg;
                fromProtoMsg(message: _99.QueryModuleVersionsResponseProtoMsg): _99.QueryModuleVersionsResponse;
                toProto(message: _99.QueryModuleVersionsResponse): Uint8Array;
                toProtoMsg(message: _99.QueryModuleVersionsResponse): _99.QueryModuleVersionsResponseProtoMsg;
            };
            QueryAuthorityRequest: {
                typeUrl: string;
                aminoType: string;
                encode(_: _99.QueryAuthorityRequest, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.QueryAuthorityRequest;
                fromPartial(_: {}): _99.QueryAuthorityRequest;
                fromAmino(_: _99.QueryAuthorityRequestAmino): _99.QueryAuthorityRequest;
                toAmino(_: _99.QueryAuthorityRequest): _99.QueryAuthorityRequestAmino;
                fromAminoMsg(object: _99.QueryAuthorityRequestAminoMsg): _99.QueryAuthorityRequest;
                toAminoMsg(message: _99.QueryAuthorityRequest): _99.QueryAuthorityRequestAminoMsg;
                fromProtoMsg(message: _99.QueryAuthorityRequestProtoMsg): _99.QueryAuthorityRequest;
                toProto(message: _99.QueryAuthorityRequest): Uint8Array;
                toProtoMsg(message: _99.QueryAuthorityRequest): _99.QueryAuthorityRequestProtoMsg;
            };
            QueryAuthorityResponse: {
                typeUrl: string;
                aminoType: string;
                encode(message: _99.QueryAuthorityResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _99.QueryAuthorityResponse;
                fromPartial(object: {
                    address?: string;
                }): _99.QueryAuthorityResponse;
                fromAmino(object: _99.QueryAuthorityResponseAmino): _99.QueryAuthorityResponse;
                toAmino(message: _99.QueryAuthorityResponse): _99.QueryAuthorityResponseAmino;
                fromAminoMsg(object: _99.QueryAuthorityResponseAminoMsg): _99.QueryAuthorityResponse;
                toAminoMsg(message: _99.QueryAuthorityResponse): _99.QueryAuthorityResponseAminoMsg;
                fromProtoMsg(message: _99.QueryAuthorityResponseProtoMsg): _99.QueryAuthorityResponse;
                toProto(message: _99.QueryAuthorityResponse): Uint8Array;
                toProtoMsg(message: _99.QueryAuthorityResponse): _99.QueryAuthorityResponseProtoMsg;
            };
        };
    }
    namespace vesting {
        namespace module {
            const v1: {
                Module: {
                    typeUrl: string;
                    aminoType: string;
                    encode(_: _102.Module, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                    decode(input: Uint8Array | import("..").BinaryReader, length?: number): _102.Module;
                    fromPartial(_: {}): _102.Module;
                    fromAmino(_: _102.ModuleAmino): _102.Module;
                    toAmino(_: _102.Module): _102.ModuleAmino;
                    fromAminoMsg(object: _102.ModuleAminoMsg): _102.Module;
                    toAminoMsg(message: _102.Module): _102.ModuleAminoMsg;
                    fromProtoMsg(message: _102.ModuleProtoMsg): _102.Module;
                    toProto(message: _102.Module): Uint8Array;
                    toProtoMsg(message: _102.Module): _102.ModuleProtoMsg;
                };
            };
        }
        const v1beta1: {
            MsgClientImpl: typeof _242.MsgClientImpl;
            registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
            load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
            MessageComposer: {
                encoded: {
                    createVestingAccount(value: _103.MsgCreateVestingAccount): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    createPermanentLockedAccount(value: _103.MsgCreatePermanentLockedAccount): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    createPeriodicVestingAccount(value: _103.MsgCreatePeriodicVestingAccount): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                };
                withTypeUrl: {
                    createVestingAccount(value: _103.MsgCreateVestingAccount): {
                        typeUrl: string;
                        value: _103.MsgCreateVestingAccount;
                    };
                    createPermanentLockedAccount(value: _103.MsgCreatePermanentLockedAccount): {
                        typeUrl: string;
                        value: _103.MsgCreatePermanentLockedAccount;
                    };
                    createPeriodicVestingAccount(value: _103.MsgCreatePeriodicVestingAccount): {
                        typeUrl: string;
                        value: _103.MsgCreatePeriodicVestingAccount;
                    };
                };
                fromPartial: {
                    createVestingAccount(value: _103.MsgCreateVestingAccount): {
                        typeUrl: string;
                        value: _103.MsgCreateVestingAccount;
                    };
                    createPermanentLockedAccount(value: _103.MsgCreatePermanentLockedAccount): {
                        typeUrl: string;
                        value: _103.MsgCreatePermanentLockedAccount;
                    };
                    createPeriodicVestingAccount(value: _103.MsgCreatePeriodicVestingAccount): {
                        typeUrl: string;
                        value: _103.MsgCreatePeriodicVestingAccount;
                    };
                };
            };
            AminoConverter: {
                "/cosmos.vesting.v1beta1.MsgCreateVestingAccount": {
                    aminoType: string;
                    toAmino: (message: _103.MsgCreateVestingAccount) => _103.MsgCreateVestingAccountAmino;
                    fromAmino: (object: _103.MsgCreateVestingAccountAmino) => _103.MsgCreateVestingAccount;
                };
                "/cosmos.vesting.v1beta1.MsgCreatePermanentLockedAccount": {
                    aminoType: string;
                    toAmino: (message: _103.MsgCreatePermanentLockedAccount) => _103.MsgCreatePermanentLockedAccountAmino;
                    fromAmino: (object: _103.MsgCreatePermanentLockedAccountAmino) => _103.MsgCreatePermanentLockedAccount;
                };
                "/cosmos.vesting.v1beta1.MsgCreatePeriodicVestingAccount": {
                    aminoType: string;
                    toAmino: (message: _103.MsgCreatePeriodicVestingAccount) => _103.MsgCreatePeriodicVestingAccountAmino;
                    fromAmino: (object: _103.MsgCreatePeriodicVestingAccountAmino) => _103.MsgCreatePeriodicVestingAccount;
                };
            };
            BaseVestingAccount: {
                typeUrl: string;
                aminoType: string;
                encode(message: _104.BaseVestingAccount, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.BaseVestingAccount;
                fromPartial(object: {
                    baseAccount?: {
                        $typeUrl?: "/cosmos.auth.v1beta1.BaseAccount";
                        address?: string;
                        pubKey?: {
                            $typeUrl?: string;
                            typeUrl?: string;
                            value?: Uint8Array;
                        };
                        accountNumber?: bigint;
                        sequence?: bigint;
                    };
                    originalVesting?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    delegatedFree?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    delegatedVesting?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    endTime?: bigint;
                }): _104.BaseVestingAccount;
                fromAmino(object: _104.BaseVestingAccountAmino): _104.BaseVestingAccount;
                toAmino(message: _104.BaseVestingAccount): _104.BaseVestingAccountAmino;
                fromAminoMsg(object: _104.BaseVestingAccountAminoMsg): _104.BaseVestingAccount;
                toAminoMsg(message: _104.BaseVestingAccount): _104.BaseVestingAccountAminoMsg;
                fromProtoMsg(message: _104.BaseVestingAccountProtoMsg): _104.BaseVestingAccount;
                toProto(message: _104.BaseVestingAccount): Uint8Array;
                toProtoMsg(message: _104.BaseVestingAccount): _104.BaseVestingAccountProtoMsg;
            };
            ContinuousVestingAccount: {
                typeUrl: string;
                aminoType: string;
                encode(message: _104.ContinuousVestingAccount, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.ContinuousVestingAccount;
                fromPartial(object: {
                    baseVestingAccount?: {
                        baseAccount?: {
                            $typeUrl?: "/cosmos.auth.v1beta1.BaseAccount";
                            address?: string;
                            pubKey?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            };
                            accountNumber?: bigint;
                            sequence?: bigint;
                        };
                        originalVesting?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        delegatedFree?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        delegatedVesting?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        endTime?: bigint;
                    };
                    startTime?: bigint;
                }): _104.ContinuousVestingAccount;
                fromAmino(object: _104.ContinuousVestingAccountAmino): _104.ContinuousVestingAccount;
                toAmino(message: _104.ContinuousVestingAccount): _104.ContinuousVestingAccountAmino;
                fromAminoMsg(object: _104.ContinuousVestingAccountAminoMsg): _104.ContinuousVestingAccount;
                toAminoMsg(message: _104.ContinuousVestingAccount): _104.ContinuousVestingAccountAminoMsg;
                fromProtoMsg(message: _104.ContinuousVestingAccountProtoMsg): _104.ContinuousVestingAccount;
                toProto(message: _104.ContinuousVestingAccount): Uint8Array;
                toProtoMsg(message: _104.ContinuousVestingAccount): _104.ContinuousVestingAccountProtoMsg;
            };
            DelayedVestingAccount: {
                typeUrl: string;
                aminoType: string;
                encode(message: _104.DelayedVestingAccount, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.DelayedVestingAccount;
                fromPartial(object: {
                    baseVestingAccount?: {
                        baseAccount?: {
                            $typeUrl?: "/cosmos.auth.v1beta1.BaseAccount";
                            address?: string;
                            pubKey?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            };
                            accountNumber?: bigint;
                            sequence?: bigint;
                        };
                        originalVesting?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        delegatedFree?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        delegatedVesting?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        endTime?: bigint;
                    };
                }): _104.DelayedVestingAccount;
                fromAmino(object: _104.DelayedVestingAccountAmino): _104.DelayedVestingAccount;
                toAmino(message: _104.DelayedVestingAccount): _104.DelayedVestingAccountAmino;
                fromAminoMsg(object: _104.DelayedVestingAccountAminoMsg): _104.DelayedVestingAccount;
                toAminoMsg(message: _104.DelayedVestingAccount): _104.DelayedVestingAccountAminoMsg;
                fromProtoMsg(message: _104.DelayedVestingAccountProtoMsg): _104.DelayedVestingAccount;
                toProto(message: _104.DelayedVestingAccount): Uint8Array;
                toProtoMsg(message: _104.DelayedVestingAccount): _104.DelayedVestingAccountProtoMsg;
            };
            Period: {
                typeUrl: string;
                aminoType: string;
                encode(message: _104.Period, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.Period;
                fromPartial(object: {
                    length?: bigint;
                    amount?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _104.Period;
                fromAmino(object: _104.PeriodAmino): _104.Period;
                toAmino(message: _104.Period): _104.PeriodAmino;
                fromAminoMsg(object: _104.PeriodAminoMsg): _104.Period;
                toAminoMsg(message: _104.Period): _104.PeriodAminoMsg;
                fromProtoMsg(message: _104.PeriodProtoMsg): _104.Period;
                toProto(message: _104.Period): Uint8Array;
                toProtoMsg(message: _104.Period): _104.PeriodProtoMsg;
            };
            PeriodicVestingAccount: {
                typeUrl: string;
                aminoType: string;
                encode(message: _104.PeriodicVestingAccount, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.PeriodicVestingAccount;
                fromPartial(object: {
                    baseVestingAccount?: {
                        baseAccount?: {
                            $typeUrl?: "/cosmos.auth.v1beta1.BaseAccount";
                            address?: string;
                            pubKey?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            };
                            accountNumber?: bigint;
                            sequence?: bigint;
                        };
                        originalVesting?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        delegatedFree?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        delegatedVesting?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        endTime?: bigint;
                    };
                    startTime?: bigint;
                    vestingPeriods?: {
                        length?: bigint;
                        amount?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    }[];
                }): _104.PeriodicVestingAccount;
                fromAmino(object: _104.PeriodicVestingAccountAmino): _104.PeriodicVestingAccount;
                toAmino(message: _104.PeriodicVestingAccount): _104.PeriodicVestingAccountAmino;
                fromAminoMsg(object: _104.PeriodicVestingAccountAminoMsg): _104.PeriodicVestingAccount;
                toAminoMsg(message: _104.PeriodicVestingAccount): _104.PeriodicVestingAccountAminoMsg;
                fromProtoMsg(message: _104.PeriodicVestingAccountProtoMsg): _104.PeriodicVestingAccount;
                toProto(message: _104.PeriodicVestingAccount): Uint8Array;
                toProtoMsg(message: _104.PeriodicVestingAccount): _104.PeriodicVestingAccountProtoMsg;
            };
            PermanentLockedAccount: {
                typeUrl: string;
                aminoType: string;
                encode(message: _104.PermanentLockedAccount, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _104.PermanentLockedAccount;
                fromPartial(object: {
                    baseVestingAccount?: {
                        baseAccount?: {
                            $typeUrl?: "/cosmos.auth.v1beta1.BaseAccount";
                            address?: string;
                            pubKey?: {
                                $typeUrl?: string;
                                typeUrl?: string;
                                value?: Uint8Array;
                            };
                            accountNumber?: bigint;
                            sequence?: bigint;
                        };
                        originalVesting?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        delegatedFree?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        delegatedVesting?: {
                            denom?: string;
                            amount?: string;
                        }[];
                        endTime?: bigint;
                    };
                }): _104.PermanentLockedAccount;
                fromAmino(object: _104.PermanentLockedAccountAmino): _104.PermanentLockedAccount;
                toAmino(message: _104.PermanentLockedAccount): _104.PermanentLockedAccountAmino;
                fromAminoMsg(object: _104.PermanentLockedAccountAminoMsg): _104.PermanentLockedAccount;
                toAminoMsg(message: _104.PermanentLockedAccount): _104.PermanentLockedAccountAminoMsg;
                fromProtoMsg(message: _104.PermanentLockedAccountProtoMsg): _104.PermanentLockedAccount;
                toProto(message: _104.PermanentLockedAccount): Uint8Array;
                toProtoMsg(message: _104.PermanentLockedAccount): _104.PermanentLockedAccountProtoMsg;
            };
            MsgCreateVestingAccount: {
                typeUrl: string;
                aminoType: string;
                encode(message: _103.MsgCreateVestingAccount, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _103.MsgCreateVestingAccount;
                fromPartial(object: {
                    fromAddress?: string;
                    toAddress?: string;
                    amount?: {
                        denom?: string;
                        amount?: string;
                    }[];
                    endTime?: bigint;
                    delayed?: boolean;
                }): _103.MsgCreateVestingAccount;
                fromAmino(object: _103.MsgCreateVestingAccountAmino): _103.MsgCreateVestingAccount;
                toAmino(message: _103.MsgCreateVestingAccount): _103.MsgCreateVestingAccountAmino;
                fromAminoMsg(object: _103.MsgCreateVestingAccountAminoMsg): _103.MsgCreateVestingAccount;
                toAminoMsg(message: _103.MsgCreateVestingAccount): _103.MsgCreateVestingAccountAminoMsg;
                fromProtoMsg(message: _103.MsgCreateVestingAccountProtoMsg): _103.MsgCreateVestingAccount;
                toProto(message: _103.MsgCreateVestingAccount): Uint8Array;
                toProtoMsg(message: _103.MsgCreateVestingAccount): _103.MsgCreateVestingAccountProtoMsg;
            };
            MsgCreateVestingAccountResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _103.MsgCreateVestingAccountResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _103.MsgCreateVestingAccountResponse;
                fromPartial(_: {}): _103.MsgCreateVestingAccountResponse;
                fromAmino(_: _103.MsgCreateVestingAccountResponseAmino): _103.MsgCreateVestingAccountResponse;
                toAmino(_: _103.MsgCreateVestingAccountResponse): _103.MsgCreateVestingAccountResponseAmino;
                fromAminoMsg(object: _103.MsgCreateVestingAccountResponseAminoMsg): _103.MsgCreateVestingAccountResponse;
                toAminoMsg(message: _103.MsgCreateVestingAccountResponse): _103.MsgCreateVestingAccountResponseAminoMsg;
                fromProtoMsg(message: _103.MsgCreateVestingAccountResponseProtoMsg): _103.MsgCreateVestingAccountResponse;
                toProto(message: _103.MsgCreateVestingAccountResponse): Uint8Array;
                toProtoMsg(message: _103.MsgCreateVestingAccountResponse): _103.MsgCreateVestingAccountResponseProtoMsg;
            };
            MsgCreatePermanentLockedAccount: {
                typeUrl: string;
                aminoType: string;
                encode(message: _103.MsgCreatePermanentLockedAccount, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _103.MsgCreatePermanentLockedAccount;
                fromPartial(object: {
                    fromAddress?: string;
                    toAddress?: string;
                    amount?: {
                        denom?: string;
                        amount?: string;
                    }[];
                }): _103.MsgCreatePermanentLockedAccount;
                fromAmino(object: _103.MsgCreatePermanentLockedAccountAmino): _103.MsgCreatePermanentLockedAccount;
                toAmino(message: _103.MsgCreatePermanentLockedAccount): _103.MsgCreatePermanentLockedAccountAmino;
                fromAminoMsg(object: _103.MsgCreatePermanentLockedAccountAminoMsg): _103.MsgCreatePermanentLockedAccount;
                toAminoMsg(message: _103.MsgCreatePermanentLockedAccount): _103.MsgCreatePermanentLockedAccountAminoMsg;
                fromProtoMsg(message: _103.MsgCreatePermanentLockedAccountProtoMsg): _103.MsgCreatePermanentLockedAccount;
                toProto(message: _103.MsgCreatePermanentLockedAccount): Uint8Array;
                toProtoMsg(message: _103.MsgCreatePermanentLockedAccount): _103.MsgCreatePermanentLockedAccountProtoMsg;
            };
            MsgCreatePermanentLockedAccountResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _103.MsgCreatePermanentLockedAccountResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _103.MsgCreatePermanentLockedAccountResponse;
                fromPartial(_: {}): _103.MsgCreatePermanentLockedAccountResponse;
                fromAmino(_: _103.MsgCreatePermanentLockedAccountResponseAmino): _103.MsgCreatePermanentLockedAccountResponse;
                toAmino(_: _103.MsgCreatePermanentLockedAccountResponse): _103.MsgCreatePermanentLockedAccountResponseAmino;
                fromAminoMsg(object: _103.MsgCreatePermanentLockedAccountResponseAminoMsg): _103.MsgCreatePermanentLockedAccountResponse;
                toAminoMsg(message: _103.MsgCreatePermanentLockedAccountResponse): _103.MsgCreatePermanentLockedAccountResponseAminoMsg;
                fromProtoMsg(message: _103.MsgCreatePermanentLockedAccountResponseProtoMsg): _103.MsgCreatePermanentLockedAccountResponse;
                toProto(message: _103.MsgCreatePermanentLockedAccountResponse): Uint8Array;
                toProtoMsg(message: _103.MsgCreatePermanentLockedAccountResponse): _103.MsgCreatePermanentLockedAccountResponseProtoMsg;
            };
            MsgCreatePeriodicVestingAccount: {
                typeUrl: string;
                aminoType: string;
                encode(message: _103.MsgCreatePeriodicVestingAccount, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _103.MsgCreatePeriodicVestingAccount;
                fromPartial(object: {
                    fromAddress?: string;
                    toAddress?: string;
                    startTime?: bigint;
                    vestingPeriods?: {
                        length?: bigint;
                        amount?: {
                            denom?: string;
                            amount?: string;
                        }[];
                    }[];
                }): _103.MsgCreatePeriodicVestingAccount;
                fromAmino(object: _103.MsgCreatePeriodicVestingAccountAmino): _103.MsgCreatePeriodicVestingAccount;
                toAmino(message: _103.MsgCreatePeriodicVestingAccount): _103.MsgCreatePeriodicVestingAccountAmino;
                fromAminoMsg(object: _103.MsgCreatePeriodicVestingAccountAminoMsg): _103.MsgCreatePeriodicVestingAccount;
                toAminoMsg(message: _103.MsgCreatePeriodicVestingAccount): _103.MsgCreatePeriodicVestingAccountAminoMsg;
                fromProtoMsg(message: _103.MsgCreatePeriodicVestingAccountProtoMsg): _103.MsgCreatePeriodicVestingAccount;
                toProto(message: _103.MsgCreatePeriodicVestingAccount): Uint8Array;
                toProtoMsg(message: _103.MsgCreatePeriodicVestingAccount): _103.MsgCreatePeriodicVestingAccountProtoMsg;
            };
            MsgCreatePeriodicVestingAccountResponse: {
                typeUrl: string;
                aminoType: string;
                encode(_: _103.MsgCreatePeriodicVestingAccountResponse, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _103.MsgCreatePeriodicVestingAccountResponse;
                fromPartial(_: {}): _103.MsgCreatePeriodicVestingAccountResponse;
                fromAmino(_: _103.MsgCreatePeriodicVestingAccountResponseAmino): _103.MsgCreatePeriodicVestingAccountResponse;
                toAmino(_: _103.MsgCreatePeriodicVestingAccountResponse): _103.MsgCreatePeriodicVestingAccountResponseAmino;
                fromAminoMsg(object: _103.MsgCreatePeriodicVestingAccountResponseAminoMsg): _103.MsgCreatePeriodicVestingAccountResponse;
                toAminoMsg(message: _103.MsgCreatePeriodicVestingAccountResponse): _103.MsgCreatePeriodicVestingAccountResponseAminoMsg;
                fromProtoMsg(message: _103.MsgCreatePeriodicVestingAccountResponseProtoMsg): _103.MsgCreatePeriodicVestingAccountResponse;
                toProto(message: _103.MsgCreatePeriodicVestingAccountResponse): Uint8Array;
                toProtoMsg(message: _103.MsgCreatePeriodicVestingAccountResponse): _103.MsgCreatePeriodicVestingAccountResponseProtoMsg;
            };
        };
    }
    namespace ics23 {
        const v1: {
            hashOpFromJSON(object: any): _105.HashOp;
            hashOpToJSON(object: _105.HashOp): string;
            lengthOpFromJSON(object: any): _105.LengthOp;
            lengthOpToJSON(object: _105.LengthOp): string;
            HashOp: typeof _105.HashOp;
            HashOpSDKType: typeof _105.HashOp;
            HashOpAmino: typeof _105.HashOp;
            LengthOp: typeof _105.LengthOp;
            LengthOpSDKType: typeof _105.LengthOp;
            LengthOpAmino: typeof _105.LengthOp;
            ExistenceProof: {
                typeUrl: string;
                aminoType: string;
                encode(message: _105.ExistenceProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _105.ExistenceProof;
                fromPartial(object: {
                    key?: Uint8Array;
                    value?: Uint8Array;
                    leaf?: {
                        hash?: _105.HashOp;
                        prehashKey?: _105.HashOp;
                        prehashValue?: _105.HashOp;
                        length?: _105.LengthOp;
                        prefix?: Uint8Array;
                    };
                    path?: {
                        hash?: _105.HashOp;
                        prefix?: Uint8Array;
                        suffix?: Uint8Array;
                    }[];
                }): _105.ExistenceProof;
                fromAmino(object: _105.ExistenceProofAmino): _105.ExistenceProof;
                toAmino(message: _105.ExistenceProof): _105.ExistenceProofAmino;
                fromAminoMsg(object: _105.ExistenceProofAminoMsg): _105.ExistenceProof;
                toAminoMsg(message: _105.ExistenceProof): _105.ExistenceProofAminoMsg;
                fromProtoMsg(message: _105.ExistenceProofProtoMsg): _105.ExistenceProof;
                toProto(message: _105.ExistenceProof): Uint8Array;
                toProtoMsg(message: _105.ExistenceProof): _105.ExistenceProofProtoMsg;
            };
            NonExistenceProof: {
                typeUrl: string;
                aminoType: string;
                encode(message: _105.NonExistenceProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _105.NonExistenceProof;
                fromPartial(object: {
                    key?: Uint8Array;
                    left?: {
                        key?: Uint8Array;
                        value?: Uint8Array;
                        leaf?: {
                            hash?: _105.HashOp;
                            prehashKey?: _105.HashOp;
                            prehashValue?: _105.HashOp;
                            length?: _105.LengthOp;
                            prefix?: Uint8Array;
                        };
                        path?: {
                            hash?: _105.HashOp;
                            prefix?: Uint8Array;
                            suffix?: Uint8Array;
                        }[];
                    };
                    right?: {
                        key?: Uint8Array;
                        value?: Uint8Array;
                        leaf?: {
                            hash?: _105.HashOp;
                            prehashKey?: _105.HashOp;
                            prehashValue?: _105.HashOp;
                            length?: _105.LengthOp;
                            prefix?: Uint8Array;
                        };
                        path?: {
                            hash?: _105.HashOp;
                            prefix?: Uint8Array;
                            suffix?: Uint8Array;
                        }[];
                    };
                }): _105.NonExistenceProof;
                fromAmino(object: _105.NonExistenceProofAmino): _105.NonExistenceProof;
                toAmino(message: _105.NonExistenceProof): _105.NonExistenceProofAmino;
                fromAminoMsg(object: _105.NonExistenceProofAminoMsg): _105.NonExistenceProof;
                toAminoMsg(message: _105.NonExistenceProof): _105.NonExistenceProofAminoMsg;
                fromProtoMsg(message: _105.NonExistenceProofProtoMsg): _105.NonExistenceProof;
                toProto(message: _105.NonExistenceProof): Uint8Array;
                toProtoMsg(message: _105.NonExistenceProof): _105.NonExistenceProofProtoMsg;
            };
            CommitmentProof: {
                typeUrl: string;
                aminoType: string;
                encode(message: _105.CommitmentProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _105.CommitmentProof;
                fromPartial(object: {
                    exist?: {
                        key?: Uint8Array;
                        value?: Uint8Array;
                        leaf?: {
                            hash?: _105.HashOp;
                            prehashKey?: _105.HashOp;
                            prehashValue?: _105.HashOp;
                            length?: _105.LengthOp;
                            prefix?: Uint8Array;
                        };
                        path?: {
                            hash?: _105.HashOp;
                            prefix?: Uint8Array;
                            suffix?: Uint8Array;
                        }[];
                    };
                    nonexist?: {
                        key?: Uint8Array;
                        left?: {
                            key?: Uint8Array;
                            value?: Uint8Array;
                            leaf?: {
                                hash?: _105.HashOp;
                                prehashKey?: _105.HashOp;
                                prehashValue?: _105.HashOp;
                                length?: _105.LengthOp;
                                prefix?: Uint8Array;
                            };
                            path?: {
                                hash?: _105.HashOp;
                                prefix?: Uint8Array;
                                suffix?: Uint8Array;
                            }[];
                        };
                        right?: {
                            key?: Uint8Array;
                            value?: Uint8Array;
                            leaf?: {
                                hash?: _105.HashOp;
                                prehashKey?: _105.HashOp;
                                prehashValue?: _105.HashOp;
                                length?: _105.LengthOp;
                                prefix?: Uint8Array;
                            };
                            path?: {
                                hash?: _105.HashOp;
                                prefix?: Uint8Array;
                                suffix?: Uint8Array;
                            }[];
                        };
                    };
                    batch?: {
                        entries?: {
                            exist?: {
                                key?: Uint8Array;
                                value?: Uint8Array;
                                leaf?: {
                                    hash?: _105.HashOp;
                                    prehashKey?: _105.HashOp;
                                    prehashValue?: _105.HashOp;
                                    length?: _105.LengthOp;
                                    prefix?: Uint8Array;
                                };
                                path?: {
                                    hash?: _105.HashOp;
                                    prefix?: Uint8Array;
                                    suffix?: Uint8Array;
                                }[];
                            };
                            nonexist?: {
                                key?: Uint8Array;
                                left?: {
                                    key?: Uint8Array;
                                    value?: Uint8Array;
                                    leaf?: {
                                        hash?: _105.HashOp;
                                        prehashKey?: _105.HashOp;
                                        prehashValue?: _105.HashOp;
                                        length?: _105.LengthOp;
                                        prefix?: Uint8Array;
                                    };
                                    path?: {
                                        hash?: _105.HashOp;
                                        prefix?: Uint8Array;
                                        suffix?: Uint8Array;
                                    }[];
                                };
                                right?: {
                                    key?: Uint8Array;
                                    value?: Uint8Array;
                                    leaf?: {
                                        hash?: _105.HashOp;
                                        prehashKey?: _105.HashOp;
                                        prehashValue?: _105.HashOp;
                                        length?: _105.LengthOp;
                                        prefix?: Uint8Array;
                                    };
                                    path?: {
                                        hash?: _105.HashOp;
                                        prefix?: Uint8Array;
                                        suffix?: Uint8Array;
                                    }[];
                                };
                            };
                        }[];
                    };
                    compressed?: {
                        entries?: {
                            exist?: {
                                key?: Uint8Array;
                                value?: Uint8Array;
                                leaf?: {
                                    hash?: _105.HashOp;
                                    prehashKey?: _105.HashOp;
                                    prehashValue?: _105.HashOp;
                                    length?: _105.LengthOp;
                                    prefix?: Uint8Array;
                                };
                                path?: number[];
                            };
                            nonexist?: {
                                key?: Uint8Array;
                                left?: {
                                    key?: Uint8Array;
                                    value?: Uint8Array;
                                    leaf?: {
                                        hash?: _105.HashOp;
                                        prehashKey?: _105.HashOp;
                                        prehashValue?: _105.HashOp;
                                        length?: _105.LengthOp;
                                        prefix?: Uint8Array;
                                    };
                                    path?: number[];
                                };
                                right?: {
                                    key?: Uint8Array;
                                    value?: Uint8Array;
                                    leaf?: {
                                        hash?: _105.HashOp;
                                        prehashKey?: _105.HashOp;
                                        prehashValue?: _105.HashOp;
                                        length?: _105.LengthOp;
                                        prefix?: Uint8Array;
                                    };
                                    path?: number[];
                                };
                            };
                        }[];
                        lookupInners?: {
                            hash?: _105.HashOp;
                            prefix?: Uint8Array;
                            suffix?: Uint8Array;
                        }[];
                    };
                }): _105.CommitmentProof;
                fromAmino(object: _105.CommitmentProofAmino): _105.CommitmentProof;
                toAmino(message: _105.CommitmentProof): _105.CommitmentProofAmino;
                fromAminoMsg(object: _105.CommitmentProofAminoMsg): _105.CommitmentProof;
                toAminoMsg(message: _105.CommitmentProof): _105.CommitmentProofAminoMsg;
                fromProtoMsg(message: _105.CommitmentProofProtoMsg): _105.CommitmentProof;
                toProto(message: _105.CommitmentProof): Uint8Array;
                toProtoMsg(message: _105.CommitmentProof): _105.CommitmentProofProtoMsg;
            };
            LeafOp: {
                typeUrl: string;
                aminoType: string;
                encode(message: _105.LeafOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _105.LeafOp;
                fromPartial(object: {
                    hash?: _105.HashOp;
                    prehashKey?: _105.HashOp;
                    prehashValue?: _105.HashOp;
                    length?: _105.LengthOp;
                    prefix?: Uint8Array;
                }): _105.LeafOp;
                fromAmino(object: _105.LeafOpAmino): _105.LeafOp;
                toAmino(message: _105.LeafOp): _105.LeafOpAmino;
                fromAminoMsg(object: _105.LeafOpAminoMsg): _105.LeafOp;
                toAminoMsg(message: _105.LeafOp): _105.LeafOpAminoMsg;
                fromProtoMsg(message: _105.LeafOpProtoMsg): _105.LeafOp;
                toProto(message: _105.LeafOp): Uint8Array;
                toProtoMsg(message: _105.LeafOp): _105.LeafOpProtoMsg;
            };
            InnerOp: {
                typeUrl: string;
                aminoType: string;
                encode(message: _105.InnerOp, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _105.InnerOp;
                fromPartial(object: {
                    hash?: _105.HashOp;
                    prefix?: Uint8Array;
                    suffix?: Uint8Array;
                }): _105.InnerOp;
                fromAmino(object: _105.InnerOpAmino): _105.InnerOp;
                toAmino(message: _105.InnerOp): _105.InnerOpAmino;
                fromAminoMsg(object: _105.InnerOpAminoMsg): _105.InnerOp;
                toAminoMsg(message: _105.InnerOp): _105.InnerOpAminoMsg;
                fromProtoMsg(message: _105.InnerOpProtoMsg): _105.InnerOp;
                toProto(message: _105.InnerOp): Uint8Array;
                toProtoMsg(message: _105.InnerOp): _105.InnerOpProtoMsg;
            };
            ProofSpec: {
                typeUrl: string;
                aminoType: string;
                encode(message: _105.ProofSpec, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _105.ProofSpec;
                fromPartial(object: {
                    leafSpec?: {
                        hash?: _105.HashOp;
                        prehashKey?: _105.HashOp;
                        prehashValue?: _105.HashOp;
                        length?: _105.LengthOp;
                        prefix?: Uint8Array;
                    };
                    innerSpec?: {
                        childOrder?: number[];
                        childSize?: number;
                        minPrefixLength?: number;
                        maxPrefixLength?: number;
                        emptyChild?: Uint8Array;
                        hash?: _105.HashOp;
                    };
                    maxDepth?: number;
                    minDepth?: number;
                    prehashKeyBeforeComparison?: boolean;
                }): _105.ProofSpec;
                fromAmino(object: _105.ProofSpecAmino): _105.ProofSpec;
                toAmino(message: _105.ProofSpec): _105.ProofSpecAmino;
                fromAminoMsg(object: _105.ProofSpecAminoMsg): _105.ProofSpec;
                toAminoMsg(message: _105.ProofSpec): _105.ProofSpecAminoMsg;
                fromProtoMsg(message: _105.ProofSpecProtoMsg): _105.ProofSpec;
                toProto(message: _105.ProofSpec): Uint8Array;
                toProtoMsg(message: _105.ProofSpec): _105.ProofSpecProtoMsg;
            };
            InnerSpec: {
                typeUrl: string;
                aminoType: string;
                encode(message: _105.InnerSpec, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _105.InnerSpec;
                fromPartial(object: {
                    childOrder?: number[];
                    childSize?: number;
                    minPrefixLength?: number;
                    maxPrefixLength?: number;
                    emptyChild?: Uint8Array;
                    hash?: _105.HashOp;
                }): _105.InnerSpec;
                fromAmino(object: _105.InnerSpecAmino): _105.InnerSpec;
                toAmino(message: _105.InnerSpec): _105.InnerSpecAmino;
                fromAminoMsg(object: _105.InnerSpecAminoMsg): _105.InnerSpec;
                toAminoMsg(message: _105.InnerSpec): _105.InnerSpecAminoMsg;
                fromProtoMsg(message: _105.InnerSpecProtoMsg): _105.InnerSpec;
                toProto(message: _105.InnerSpec): Uint8Array;
                toProtoMsg(message: _105.InnerSpec): _105.InnerSpecProtoMsg;
            };
            BatchProof: {
                typeUrl: string;
                aminoType: string;
                encode(message: _105.BatchProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _105.BatchProof;
                fromPartial(object: {
                    entries?: {
                        exist?: {
                            key?: Uint8Array;
                            value?: Uint8Array;
                            leaf?: {
                                hash?: _105.HashOp;
                                prehashKey?: _105.HashOp;
                                prehashValue?: _105.HashOp;
                                length?: _105.LengthOp;
                                prefix?: Uint8Array;
                            };
                            path?: {
                                hash?: _105.HashOp;
                                prefix?: Uint8Array;
                                suffix?: Uint8Array;
                            }[];
                        };
                        nonexist?: {
                            key?: Uint8Array;
                            left?: {
                                key?: Uint8Array;
                                value?: Uint8Array;
                                leaf?: {
                                    hash?: _105.HashOp;
                                    prehashKey?: _105.HashOp;
                                    prehashValue?: _105.HashOp;
                                    length?: _105.LengthOp;
                                    prefix?: Uint8Array;
                                };
                                path?: {
                                    hash?: _105.HashOp;
                                    prefix?: Uint8Array;
                                    suffix?: Uint8Array;
                                }[];
                            };
                            right?: {
                                key?: Uint8Array;
                                value?: Uint8Array;
                                leaf?: {
                                    hash?: _105.HashOp;
                                    prehashKey?: _105.HashOp;
                                    prehashValue?: _105.HashOp;
                                    length?: _105.LengthOp;
                                    prefix?: Uint8Array;
                                };
                                path?: {
                                    hash?: _105.HashOp;
                                    prefix?: Uint8Array;
                                    suffix?: Uint8Array;
                                }[];
                            };
                        };
                    }[];
                }): _105.BatchProof;
                fromAmino(object: _105.BatchProofAmino): _105.BatchProof;
                toAmino(message: _105.BatchProof): _105.BatchProofAmino;
                fromAminoMsg(object: _105.BatchProofAminoMsg): _105.BatchProof;
                toAminoMsg(message: _105.BatchProof): _105.BatchProofAminoMsg;
                fromProtoMsg(message: _105.BatchProofProtoMsg): _105.BatchProof;
                toProto(message: _105.BatchProof): Uint8Array;
                toProtoMsg(message: _105.BatchProof): _105.BatchProofProtoMsg;
            };
            BatchEntry: {
                typeUrl: string;
                aminoType: string;
                encode(message: _105.BatchEntry, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _105.BatchEntry;
                fromPartial(object: {
                    exist?: {
                        key?: Uint8Array;
                        value?: Uint8Array;
                        leaf?: {
                            hash?: _105.HashOp;
                            prehashKey?: _105.HashOp;
                            prehashValue?: _105.HashOp;
                            length?: _105.LengthOp;
                            prefix?: Uint8Array;
                        };
                        path?: {
                            hash?: _105.HashOp;
                            prefix?: Uint8Array;
                            suffix?: Uint8Array;
                        }[];
                    };
                    nonexist?: {
                        key?: Uint8Array;
                        left?: {
                            key?: Uint8Array;
                            value?: Uint8Array;
                            leaf?: {
                                hash?: _105.HashOp;
                                prehashKey?: _105.HashOp;
                                prehashValue?: _105.HashOp;
                                length?: _105.LengthOp;
                                prefix?: Uint8Array;
                            };
                            path?: {
                                hash?: _105.HashOp;
                                prefix?: Uint8Array;
                                suffix?: Uint8Array;
                            }[];
                        };
                        right?: {
                            key?: Uint8Array;
                            value?: Uint8Array;
                            leaf?: {
                                hash?: _105.HashOp;
                                prehashKey?: _105.HashOp;
                                prehashValue?: _105.HashOp;
                                length?: _105.LengthOp;
                                prefix?: Uint8Array;
                            };
                            path?: {
                                hash?: _105.HashOp;
                                prefix?: Uint8Array;
                                suffix?: Uint8Array;
                            }[];
                        };
                    };
                }): _105.BatchEntry;
                fromAmino(object: _105.BatchEntryAmino): _105.BatchEntry;
                toAmino(message: _105.BatchEntry): _105.BatchEntryAmino;
                fromAminoMsg(object: _105.BatchEntryAminoMsg): _105.BatchEntry;
                toAminoMsg(message: _105.BatchEntry): _105.BatchEntryAminoMsg;
                fromProtoMsg(message: _105.BatchEntryProtoMsg): _105.BatchEntry;
                toProto(message: _105.BatchEntry): Uint8Array;
                toProtoMsg(message: _105.BatchEntry): _105.BatchEntryProtoMsg;
            };
            CompressedBatchProof: {
                typeUrl: string;
                aminoType: string;
                encode(message: _105.CompressedBatchProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _105.CompressedBatchProof;
                fromPartial(object: {
                    entries?: {
                        exist?: {
                            key?: Uint8Array;
                            value?: Uint8Array;
                            leaf?: {
                                hash?: _105.HashOp;
                                prehashKey?: _105.HashOp;
                                prehashValue?: _105.HashOp;
                                length?: _105.LengthOp;
                                prefix?: Uint8Array;
                            };
                            path?: number[];
                        };
                        nonexist?: {
                            key?: Uint8Array;
                            left?: {
                                key?: Uint8Array;
                                value?: Uint8Array;
                                leaf?: {
                                    hash?: _105.HashOp;
                                    prehashKey?: _105.HashOp;
                                    prehashValue?: _105.HashOp;
                                    length?: _105.LengthOp;
                                    prefix?: Uint8Array;
                                };
                                path?: number[];
                            };
                            right?: {
                                key?: Uint8Array;
                                value?: Uint8Array;
                                leaf?: {
                                    hash?: _105.HashOp;
                                    prehashKey?: _105.HashOp;
                                    prehashValue?: _105.HashOp;
                                    length?: _105.LengthOp;
                                    prefix?: Uint8Array;
                                };
                                path?: number[];
                            };
                        };
                    }[];
                    lookupInners?: {
                        hash?: _105.HashOp;
                        prefix?: Uint8Array;
                        suffix?: Uint8Array;
                    }[];
                }): _105.CompressedBatchProof;
                fromAmino(object: _105.CompressedBatchProofAmino): _105.CompressedBatchProof;
                toAmino(message: _105.CompressedBatchProof): _105.CompressedBatchProofAmino;
                fromAminoMsg(object: _105.CompressedBatchProofAminoMsg): _105.CompressedBatchProof;
                toAminoMsg(message: _105.CompressedBatchProof): _105.CompressedBatchProofAminoMsg;
                fromProtoMsg(message: _105.CompressedBatchProofProtoMsg): _105.CompressedBatchProof;
                toProto(message: _105.CompressedBatchProof): Uint8Array;
                toProtoMsg(message: _105.CompressedBatchProof): _105.CompressedBatchProofProtoMsg;
            };
            CompressedBatchEntry: {
                typeUrl: string;
                aminoType: string;
                encode(message: _105.CompressedBatchEntry, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _105.CompressedBatchEntry;
                fromPartial(object: {
                    exist?: {
                        key?: Uint8Array;
                        value?: Uint8Array;
                        leaf?: {
                            hash?: _105.HashOp;
                            prehashKey?: _105.HashOp;
                            prehashValue?: _105.HashOp;
                            length?: _105.LengthOp;
                            prefix?: Uint8Array;
                        };
                        path?: number[];
                    };
                    nonexist?: {
                        key?: Uint8Array;
                        left?: {
                            key?: Uint8Array;
                            value?: Uint8Array;
                            leaf?: {
                                hash?: _105.HashOp;
                                prehashKey?: _105.HashOp;
                                prehashValue?: _105.HashOp;
                                length?: _105.LengthOp;
                                prefix?: Uint8Array;
                            };
                            path?: number[];
                        };
                        right?: {
                            key?: Uint8Array;
                            value?: Uint8Array;
                            leaf?: {
                                hash?: _105.HashOp;
                                prehashKey?: _105.HashOp;
                                prehashValue?: _105.HashOp;
                                length?: _105.LengthOp;
                                prefix?: Uint8Array;
                            };
                            path?: number[];
                        };
                    };
                }): _105.CompressedBatchEntry;
                fromAmino(object: _105.CompressedBatchEntryAmino): _105.CompressedBatchEntry;
                toAmino(message: _105.CompressedBatchEntry): _105.CompressedBatchEntryAmino;
                fromAminoMsg(object: _105.CompressedBatchEntryAminoMsg): _105.CompressedBatchEntry;
                toAminoMsg(message: _105.CompressedBatchEntry): _105.CompressedBatchEntryAminoMsg;
                fromProtoMsg(message: _105.CompressedBatchEntryProtoMsg): _105.CompressedBatchEntry;
                toProto(message: _105.CompressedBatchEntry): Uint8Array;
                toProtoMsg(message: _105.CompressedBatchEntry): _105.CompressedBatchEntryProtoMsg;
            };
            CompressedExistenceProof: {
                typeUrl: string;
                aminoType: string;
                encode(message: _105.CompressedExistenceProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _105.CompressedExistenceProof;
                fromPartial(object: {
                    key?: Uint8Array;
                    value?: Uint8Array;
                    leaf?: {
                        hash?: _105.HashOp;
                        prehashKey?: _105.HashOp;
                        prehashValue?: _105.HashOp;
                        length?: _105.LengthOp;
                        prefix?: Uint8Array;
                    };
                    path?: number[];
                }): _105.CompressedExistenceProof;
                fromAmino(object: _105.CompressedExistenceProofAmino): _105.CompressedExistenceProof;
                toAmino(message: _105.CompressedExistenceProof): _105.CompressedExistenceProofAmino;
                fromAminoMsg(object: _105.CompressedExistenceProofAminoMsg): _105.CompressedExistenceProof;
                toAminoMsg(message: _105.CompressedExistenceProof): _105.CompressedExistenceProofAminoMsg;
                fromProtoMsg(message: _105.CompressedExistenceProofProtoMsg): _105.CompressedExistenceProof;
                toProto(message: _105.CompressedExistenceProof): Uint8Array;
                toProtoMsg(message: _105.CompressedExistenceProof): _105.CompressedExistenceProofProtoMsg;
            };
            CompressedNonExistenceProof: {
                typeUrl: string;
                aminoType: string;
                encode(message: _105.CompressedNonExistenceProof, writer?: import("..").BinaryWriter): import("..").BinaryWriter;
                decode(input: Uint8Array | import("..").BinaryReader, length?: number): _105.CompressedNonExistenceProof;
                fromPartial(object: {
                    key?: Uint8Array;
                    left?: {
                        key?: Uint8Array;
                        value?: Uint8Array;
                        leaf?: {
                            hash?: _105.HashOp;
                            prehashKey?: _105.HashOp;
                            prehashValue?: _105.HashOp;
                            length?: _105.LengthOp;
                            prefix?: Uint8Array;
                        };
                        path?: number[];
                    };
                    right?: {
                        key?: Uint8Array;
                        value?: Uint8Array;
                        leaf?: {
                            hash?: _105.HashOp;
                            prehashKey?: _105.HashOp;
                            prehashValue?: _105.HashOp;
                            length?: _105.LengthOp;
                            prefix?: Uint8Array;
                        };
                        path?: number[];
                    };
                }): _105.CompressedNonExistenceProof;
                fromAmino(object: _105.CompressedNonExistenceProofAmino): _105.CompressedNonExistenceProof;
                toAmino(message: _105.CompressedNonExistenceProof): _105.CompressedNonExistenceProofAmino;
                fromAminoMsg(object: _105.CompressedNonExistenceProofAminoMsg): _105.CompressedNonExistenceProof;
                toAminoMsg(message: _105.CompressedNonExistenceProof): _105.CompressedNonExistenceProofAminoMsg;
                fromProtoMsg(message: _105.CompressedNonExistenceProofProtoMsg): _105.CompressedNonExistenceProof;
                toProto(message: _105.CompressedNonExistenceProof): Uint8Array;
                toProtoMsg(message: _105.CompressedNonExistenceProof): _105.CompressedNonExistenceProofProtoMsg;
            };
        };
    }
    const ClientFactory: {
        createRPCMsgClient: ({ rpc }: {
            rpc: import("../helpers").Rpc;
        }) => Promise<{
            cosmos: {
                accounts: {
                    v1: _228.MsgClientImpl;
                };
                auth: {
                    v1beta1: _229.MsgClientImpl;
                };
                authz: {
                    v1beta1: _230.MsgClientImpl;
                };
                bank: {
                    v1beta1: _231.MsgClientImpl;
                };
                circuit: {
                    v1: _232.MsgClientImpl;
                };
                consensus: {
                    v1: _233.MsgClientImpl;
                };
                distribution: {
                    v1beta1: _234.MsgClientImpl;
                };
                feegrant: {
                    v1beta1: _235.MsgClientImpl;
                };
                gov: {
                    v1: _236.MsgClientImpl;
                    v1beta1: _237.MsgClientImpl;
                };
                group: {
                    v1: _238.MsgClientImpl;
                };
                mint: {
                    v1beta1: _239.MsgClientImpl;
                };
                staking: {
                    v1beta1: _240.MsgClientImpl;
                };
                upgrade: {
                    v1beta1: _241.MsgClientImpl;
                };
                vesting: {
                    v1beta1: _242.MsgClientImpl;
                };
            };
        }>;
        createRPCQueryClient: ({ rpcEndpoint }: {
            rpcEndpoint: string | import("@cosmjs/tendermint-rpc").HttpEndpoint;
        }) => Promise<{
            cosmos: {
                accounts: {
                    v1: {
                        accountQuery(request: _2.AccountQueryRequest): Promise<_2.AccountQueryResponse>;
                    };
                };
                auth: {
                    v1beta1: {
                        accounts(request?: _8.QueryAccountsRequest): Promise<_8.QueryAccountsResponse>;
                        account(request: _8.QueryAccountRequest): Promise<_8.QueryAccountResponse>;
                        accountAddressByID(request: _8.QueryAccountAddressByIDRequest): Promise<_8.QueryAccountAddressByIDResponse>;
                        params(request?: _8.QueryParamsRequest): Promise<_8.QueryParamsResponse>;
                        moduleAccounts(request?: _8.QueryModuleAccountsRequest): Promise<_8.QueryModuleAccountsResponse>;
                        moduleAccountByName(request: _8.QueryModuleAccountByNameRequest): Promise<_8.QueryModuleAccountByNameResponse>;
                        bech32Prefix(request?: _8.Bech32PrefixRequest): Promise<_8.Bech32PrefixResponse>;
                        addressBytesToString(request: _8.AddressBytesToStringRequest): Promise<_8.AddressBytesToStringResponse>;
                        addressStringToBytes(request: _8.AddressStringToBytesRequest): Promise<_8.AddressStringToBytesResponse>;
                        accountInfo(request: _8.QueryAccountInfoRequest): Promise<_8.QueryAccountInfoResponse>;
                    };
                };
                authz: {
                    v1beta1: {
                        grants(request: _14.QueryGrantsRequest): Promise<_14.QueryGrantsResponse>;
                        granterGrants(request: _14.QueryGranterGrantsRequest): Promise<_14.QueryGranterGrantsResponse>;
                        granteeGrants(request: _14.QueryGranteeGrantsRequest): Promise<_14.QueryGranteeGrantsResponse>;
                    };
                };
                bank: {
                    v1beta1: {
                        balance(request: _20.QueryBalanceRequest): Promise<_20.QueryBalanceResponse>;
                        allBalances(request: _20.QueryAllBalancesRequest): Promise<_20.QueryAllBalancesResponse>;
                        spendableBalances(request: _20.QuerySpendableBalancesRequest): Promise<_20.QuerySpendableBalancesResponse>;
                        spendableBalanceByDenom(request: _20.QuerySpendableBalanceByDenomRequest): Promise<_20.QuerySpendableBalanceByDenomResponse>;
                        totalSupply(request?: _20.QueryTotalSupplyRequest): Promise<_20.QueryTotalSupplyResponse>;
                        supplyOf(request: _20.QuerySupplyOfRequest): Promise<_20.QuerySupplyOfResponse>;
                        params(request?: _20.QueryParamsRequest): Promise<_20.QueryParamsResponse>;
                        denomMetadata(request: _20.QueryDenomMetadataRequest): Promise<_20.QueryDenomMetadataResponse>;
                        denomMetadataByQueryString(request: _20.QueryDenomMetadataByQueryStringRequest): Promise<_20.QueryDenomMetadataByQueryStringResponse>;
                        denomsMetadata(request?: _20.QueryDenomsMetadataRequest): Promise<_20.QueryDenomsMetadataResponse>;
                        denomOwners(request: _20.QueryDenomOwnersRequest): Promise<_20.QueryDenomOwnersResponse>;
                        sendEnabled(request: _20.QuerySendEnabledRequest): Promise<_20.QuerySendEnabledResponse>;
                    };
                };
                base: {
                    node: {
                        v1beta1: {
                            config(request?: _23.ConfigRequest): Promise<_23.ConfigResponse>;
                            status(request?: _23.StatusRequest): Promise<_23.StatusResponse>;
                        };
                    };
                };
                circuit: {
                    v1: {
                        account(request: _28.QueryAccountRequest): Promise<_28.AccountResponse>;
                        accounts(request?: _28.QueryAccountsRequest): Promise<_28.AccountsResponse>;
                        disabledList(request?: _28.QueryDisabledListRequest): Promise<_28.DisabledListResponse>;
                    };
                };
                consensus: {
                    v1: {
                        params(request?: _32.QueryParamsRequest): Promise<_32.QueryParamsResponse>;
                    };
                };
                distribution: {
                    v1beta1: {
                        params(request?: _44.QueryParamsRequest): Promise<_44.QueryParamsResponse>;
                        validatorDistributionInfo(request: _44.QueryValidatorDistributionInfoRequest): Promise<_44.QueryValidatorDistributionInfoResponse>;
                        validatorOutstandingRewards(request: _44.QueryValidatorOutstandingRewardsRequest): Promise<_44.QueryValidatorOutstandingRewardsResponse>;
                        validatorCommission(request: _44.QueryValidatorCommissionRequest): Promise<_44.QueryValidatorCommissionResponse>;
                        validatorSlashes(request: _44.QueryValidatorSlashesRequest): Promise<_44.QueryValidatorSlashesResponse>;
                        delegationRewards(request: _44.QueryDelegationRewardsRequest): Promise<_44.QueryDelegationRewardsResponse>;
                        delegationTotalRewards(request: _44.QueryDelegationTotalRewardsRequest): Promise<_44.QueryDelegationTotalRewardsResponse>;
                        delegatorValidators(request: _44.QueryDelegatorValidatorsRequest): Promise<_44.QueryDelegatorValidatorsResponse>;
                        delegatorWithdrawAddress(request: _44.QueryDelegatorWithdrawAddressRequest): Promise<_44.QueryDelegatorWithdrawAddressResponse>;
                        communityPool(request?: _44.QueryCommunityPoolRequest): Promise<_44.QueryCommunityPoolResponse>;
                    };
                };
                feegrant: {
                    v1beta1: {
                        allowance(request: _50.QueryAllowanceRequest): Promise<_50.QueryAllowanceResponse>;
                        allowances(request: _50.QueryAllowancesRequest): Promise<_50.QueryAllowancesResponse>;
                        allowancesByGranter(request: _50.QueryAllowancesByGranterRequest): Promise<_50.QueryAllowancesByGranterResponse>;
                    };
                };
                gov: {
                    v1: {
                        constitution(request?: _56.QueryConstitutionRequest): Promise<_56.QueryConstitutionResponse>;
                        proposal(request: _56.QueryProposalRequest): Promise<_56.QueryProposalResponse>;
                        proposals(request: _56.QueryProposalsRequest): Promise<_56.QueryProposalsResponse>;
                        vote(request: _56.QueryVoteRequest): Promise<_56.QueryVoteResponse>;
                        votes(request: _56.QueryVotesRequest): Promise<_56.QueryVotesResponse>;
                        params(request: _56.QueryParamsRequest): Promise<_56.QueryParamsResponse>;
                        deposit(request: _56.QueryDepositRequest): Promise<_56.QueryDepositResponse>;
                        deposits(request: _56.QueryDepositsRequest): Promise<_56.QueryDepositsResponse>;
                        tallyResult(request: _56.QueryTallyResultRequest): Promise<_56.QueryTallyResultResponse>;
                    };
                    v1beta1: {
                        proposal(request: _60.QueryProposalRequest): Promise<_60.QueryProposalResponse>;
                        proposals(request: _60.QueryProposalsRequest): Promise<_60.QueryProposalsResponse>;
                        vote(request: _60.QueryVoteRequest): Promise<_60.QueryVoteResponse>;
                        votes(request: _60.QueryVotesRequest): Promise<_60.QueryVotesResponse>;
                        params(request: _60.QueryParamsRequest): Promise<_60.QueryParamsResponse>;
                        deposit(request: _60.QueryDepositRequest): Promise<_60.QueryDepositResponse>;
                        deposits(request: _60.QueryDepositsRequest): Promise<_60.QueryDepositsResponse>;
                        tallyResult(request: _60.QueryTallyResultRequest): Promise<_60.QueryTallyResultResponse>;
                    };
                };
                group: {
                    v1: {
                        groupInfo(request: _65.QueryGroupInfoRequest): Promise<_65.QueryGroupInfoResponse>;
                        groupPolicyInfo(request: _65.QueryGroupPolicyInfoRequest): Promise<_65.QueryGroupPolicyInfoResponse>;
                        groupMembers(request: _65.QueryGroupMembersRequest): Promise<_65.QueryGroupMembersResponse>;
                        groupsByAdmin(request: _65.QueryGroupsByAdminRequest): Promise<_65.QueryGroupsByAdminResponse>;
                        groupPoliciesByGroup(request: _65.QueryGroupPoliciesByGroupRequest): Promise<_65.QueryGroupPoliciesByGroupResponse>;
                        groupPoliciesByAdmin(request: _65.QueryGroupPoliciesByAdminRequest): Promise<_65.QueryGroupPoliciesByAdminResponse>;
                        proposal(request: _65.QueryProposalRequest): Promise<_65.QueryProposalResponse>;
                        proposalsByGroupPolicy(request: _65.QueryProposalsByGroupPolicyRequest): Promise<_65.QueryProposalsByGroupPolicyResponse>;
                        voteByProposalVoter(request: _65.QueryVoteByProposalVoterRequest): Promise<_65.QueryVoteByProposalVoterResponse>;
                        votesByProposal(request: _65.QueryVotesByProposalRequest): Promise<_65.QueryVotesByProposalResponse>;
                        votesByVoter(request: _65.QueryVotesByVoterRequest): Promise<_65.QueryVotesByVoterResponse>;
                        groupsByMember(request: _65.QueryGroupsByMemberRequest): Promise<_65.QueryGroupsByMemberResponse>;
                        tallyResult(request: _65.QueryTallyResultRequest): Promise<_65.QueryTallyResultResponse>;
                        groups(request?: _65.QueryGroupsRequest): Promise<_65.QueryGroupsResponse>;
                    };
                };
                mint: {
                    v1beta1: {
                        params(request?: _71.QueryParamsRequest): Promise<_71.QueryParamsResponse>;
                        inflation(request?: _71.QueryInflationRequest): Promise<_71.QueryInflationResponse>;
                        annualProvisions(request?: _71.QueryAnnualProvisionsRequest): Promise<_71.QueryAnnualProvisionsResponse>;
                    };
                };
                orm: {
                    query: {
                        v1alpha1: {
                            get(request: _76.GetRequest): Promise<_76.GetResponse>;
                            list(request: _76.ListRequest): Promise<_76.ListResponse>;
                        };
                    };
                };
                params: {
                    v1beta1: {
                        params(request: _79.QueryParamsRequest): Promise<_79.QueryParamsResponse>;
                        subspaces(request?: _79.QuerySubspacesRequest): Promise<_79.QuerySubspacesResponse>;
                    };
                };
                staking: {
                    v1beta1: {
                        validators(request: _86.QueryValidatorsRequest): Promise<_86.QueryValidatorsResponse>;
                        validator(request: _86.QueryValidatorRequest): Promise<_86.QueryValidatorResponse>;
                        validatorDelegations(request: _86.QueryValidatorDelegationsRequest): Promise<_86.QueryValidatorDelegationsResponse>;
                        validatorUnbondingDelegations(request: _86.QueryValidatorUnbondingDelegationsRequest): Promise<_86.QueryValidatorUnbondingDelegationsResponse>;
                        delegation(request: _86.QueryDelegationRequest): Promise<_86.QueryDelegationResponse>;
                        unbondingDelegation(request: _86.QueryUnbondingDelegationRequest): Promise<_86.QueryUnbondingDelegationResponse>;
                        delegatorDelegations(request: _86.QueryDelegatorDelegationsRequest): Promise<_86.QueryDelegatorDelegationsResponse>;
                        delegatorUnbondingDelegations(request: _86.QueryDelegatorUnbondingDelegationsRequest): Promise<_86.QueryDelegatorUnbondingDelegationsResponse>;
                        redelegations(request: _86.QueryRedelegationsRequest): Promise<_86.QueryRedelegationsResponse>;
                        delegatorValidators(request: _86.QueryDelegatorValidatorsRequest): Promise<_86.QueryDelegatorValidatorsResponse>;
                        delegatorValidator(request: _86.QueryDelegatorValidatorRequest): Promise<_86.QueryDelegatorValidatorResponse>;
                        historicalInfo(request: _86.QueryHistoricalInfoRequest): Promise<_86.QueryHistoricalInfoResponse>;
                        pool(request?: _86.QueryPoolRequest): Promise<_86.QueryPoolResponse>;
                        params(request?: _86.QueryParamsRequest): Promise<_86.QueryParamsResponse>;
                    };
                };
                tx: {
                    v1beta1: {
                        simulate(request: _96.SimulateRequest): Promise<_96.SimulateResponse>;
                        getTx(request: _96.GetTxRequest): Promise<_96.GetTxResponse>;
                        broadcastTx(request: _96.BroadcastTxRequest): Promise<_96.BroadcastTxResponse>;
                        getTxsEvent(request: _96.GetTxsEventRequest): Promise<_96.GetTxsEventResponse>;
                        getBlockWithTxs(request: _96.GetBlockWithTxsRequest): Promise<_96.GetBlockWithTxsResponse>;
                        txDecode(request: _96.TxDecodeRequest): Promise<_96.TxDecodeResponse>;
                        txEncode(request: _96.TxEncodeRequest): Promise<_96.TxEncodeResponse>;
                        txEncodeAmino(request: _96.TxEncodeAminoRequest): Promise<_96.TxEncodeAminoResponse>;
                        txDecodeAmino(request: _96.TxDecodeAminoRequest): Promise<_96.TxDecodeAminoResponse>;
                    };
                };
                upgrade: {
                    v1beta1: {
                        currentPlan(request?: _99.QueryCurrentPlanRequest): Promise<_99.QueryCurrentPlanResponse>;
                        appliedPlan(request: _99.QueryAppliedPlanRequest): Promise<_99.QueryAppliedPlanResponse>;
                        upgradedConsensusState(request: _99.QueryUpgradedConsensusStateRequest): Promise<_99.QueryUpgradedConsensusStateResponse>;
                        moduleVersions(request: _99.QueryModuleVersionsRequest): Promise<_99.QueryModuleVersionsResponse>;
                        authority(request?: _99.QueryAuthorityRequest): Promise<_99.QueryAuthorityResponse>;
                    };
                };
            };
        }>;
        createLCDClient: ({ restEndpoint }: {
            restEndpoint: string;
        }) => Promise<{
            cosmos: {
                auth: {
                    v1beta1: _194.LCDQueryClient;
                };
                authz: {
                    v1beta1: _195.LCDQueryClient;
                };
                bank: {
                    v1beta1: _196.LCDQueryClient;
                };
                base: {
                    node: {
                        v1beta1: _197.LCDQueryClient;
                    };
                };
                circuit: {
                    v1: _198.LCDQueryClient;
                };
                consensus: {
                    v1: _199.LCDQueryClient;
                };
                distribution: {
                    v1beta1: _200.LCDQueryClient;
                };
                feegrant: {
                    v1beta1: _201.LCDQueryClient;
                };
                gov: {
                    v1: _202.LCDQueryClient;
                    v1beta1: _203.LCDQueryClient;
                };
                group: {
                    v1: _204.LCDQueryClient;
                };
                mint: {
                    v1beta1: _205.LCDQueryClient;
                };
                params: {
                    v1beta1: _206.LCDQueryClient;
                };
                staking: {
                    v1beta1: _207.LCDQueryClient;
                };
                tx: {
                    v1beta1: _208.LCDQueryClient;
                };
                upgrade: {
                    v1beta1: _209.LCDQueryClient;
                };
            };
        }>;
    };
}
