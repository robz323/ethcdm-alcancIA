import { setPaginationParams } from "../../../helpers";
export class LCDQueryClient {
    req;
    constructor({ requestClient }) {
        this.req = requestClient;
    }
    /* ContractInfo gets the contract meta data */
    contractInfo = async (params) => {
        const endpoint = `cosmwasm/wasm/v1/contract/${params.address}`;
        return await this.req.get(endpoint);
    };
    /* ContractHistory gets the contract code history */
    contractHistory = async (params) => {
        const options = {
            params: {}
        };
        if (typeof params?.pagination !== "undefined") {
            setPaginationParams(options, params.pagination);
        }
        const endpoint = `cosmwasm/wasm/v1/contract/${params.address}/history`;
        return await this.req.get(endpoint, options);
    };
    /* ContractsByCode lists all smart contracts for a code id */
    contractsByCode = async (params) => {
        const options = {
            params: {}
        };
        if (typeof params?.pagination !== "undefined") {
            setPaginationParams(options, params.pagination);
        }
        const endpoint = `cosmwasm/wasm/v1/code/${params.codeId}/contracts`;
        return await this.req.get(endpoint, options);
    };
    /* AllContractState gets all raw store data for a single contract */
    allContractState = async (params) => {
        const options = {
            params: {}
        };
        if (typeof params?.pagination !== "undefined") {
            setPaginationParams(options, params.pagination);
        }
        const endpoint = `cosmwasm/wasm/v1/contract/${params.address}/state`;
        return await this.req.get(endpoint, options);
    };
    /* RawContractState gets single key from the raw store data of a contract */
    rawContractState = async (params) => {
        const endpoint = `cosmwasm/wasm/v1/contract/${params.address}/raw/${params.queryData}`;
        return await this.req.get(endpoint);
    };
    /* SmartContractState get smart query result from the contract */
    smartContractState = async (params) => {
        const endpoint = `cosmwasm/wasm/v1/contract/${params.address}/smart/${params.queryData}`;
        return await this.req.get(endpoint);
    };
    /* Code gets the binary code and metadata for a singe wasm code */
    code = async (params) => {
        const endpoint = `cosmwasm/wasm/v1/code/${params.codeId}`;
        return await this.req.get(endpoint);
    };
    /* Codes gets the metadata for all stored wasm codes */
    codes = async (params = {
        pagination: undefined
    }) => {
        const options = {
            params: {}
        };
        if (typeof params?.pagination !== "undefined") {
            setPaginationParams(options, params.pagination);
        }
        const endpoint = `cosmwasm/wasm/v1/code`;
        return await this.req.get(endpoint, options);
    };
    /* PinnedCodes gets the pinned code ids */
    pinnedCodes = async (params = {
        pagination: undefined
    }) => {
        const options = {
            params: {}
        };
        if (typeof params?.pagination !== "undefined") {
            setPaginationParams(options, params.pagination);
        }
        const endpoint = `cosmwasm/wasm/v1/codes/pinned`;
        return await this.req.get(endpoint, options);
    };
    /* Params gets the module params */
    params = async (_params = {}) => {
        const endpoint = `cosmwasm/wasm/v1/codes/params`;
        return await this.req.get(endpoint);
    };
    /* ContractsByCreator gets the contracts by creator */
    contractsByCreator = async (params) => {
        const options = {
            params: {}
        };
        if (typeof params?.pagination !== "undefined") {
            setPaginationParams(options, params.pagination);
        }
        const endpoint = `cosmwasm/wasm/v1/contracts/creator/${params.creatorAddress}`;
        return await this.req.get(endpoint, options);
    };
}
//# sourceMappingURL=query.lcd.js.map