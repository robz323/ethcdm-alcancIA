import { setPaginationParams } from "../../../../helpers";
export class LCDQueryClient {
    req;
    constructor({ requestClient }) {
        this.req = requestClient;
    }
    /* ClientState queries an IBC light client. */
    clientState = async (params) => {
        const endpoint = `ibc/core/client/v1/client_states/${params.clientId}`;
        return await this.req.get(endpoint);
    };
    /* ClientStates queries all the IBC light clients of a chain. */
    clientStates = async (params = {
        pagination: undefined
    }) => {
        const options = {
            params: {}
        };
        if (typeof params?.pagination !== "undefined") {
            setPaginationParams(options, params.pagination);
        }
        const endpoint = `ibc/core/client/v1/client_states`;
        return await this.req.get(endpoint, options);
    };
    /* ConsensusState queries a consensus state associated with a client state at
     a given height. */
    consensusState = async (params) => {
        const options = {
            params: {}
        };
        if (typeof params?.latestHeight !== "undefined") {
            options.params.latest_height = params.latestHeight;
        }
        const endpoint = `ibc/core/client/v1/consensus_states/${params.clientId}/revision/${params.revisionNumber}/height/${params.revisionHeight}`;
        return await this.req.get(endpoint, options);
    };
    /* ConsensusStates queries all the consensus state associated with a given
     client. */
    consensusStates = async (params) => {
        const options = {
            params: {}
        };
        if (typeof params?.pagination !== "undefined") {
            setPaginationParams(options, params.pagination);
        }
        const endpoint = `ibc/core/client/v1/consensus_states/${params.clientId}`;
        return await this.req.get(endpoint, options);
    };
    /* ConsensusStateHeights queries the height of every consensus states associated with a given client. */
    consensusStateHeights = async (params) => {
        const options = {
            params: {}
        };
        if (typeof params?.pagination !== "undefined") {
            setPaginationParams(options, params.pagination);
        }
        const endpoint = `ibc/core/client/v1/consensus_states/${params.clientId}/heights`;
        return await this.req.get(endpoint, options);
    };
    /* Status queries the status of an IBC client. */
    clientStatus = async (params) => {
        const endpoint = `ibc/core/client/v1/client_status/${params.clientId}`;
        return await this.req.get(endpoint);
    };
    /* ClientParams queries all parameters of the ibc client submodule. */
    clientParams = async (_params = {}) => {
        const endpoint = `ibc/core/client/v1/params`;
        return await this.req.get(endpoint);
    };
    /* UpgradedClientState queries an Upgraded IBC light client. */
    upgradedClientState = async (_params = {}) => {
        const endpoint = `ibc/core/client/v1/upgraded_client_states`;
        return await this.req.get(endpoint);
    };
    /* UpgradedConsensusState queries an Upgraded IBC consensus state. */
    upgradedConsensusState = async (_params = {}) => {
        const endpoint = `ibc/core/client/v1/upgraded_consensus_states`;
        return await this.req.get(endpoint);
    };
}
//# sourceMappingURL=query.lcd.js.map