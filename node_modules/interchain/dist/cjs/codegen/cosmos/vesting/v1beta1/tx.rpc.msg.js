"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgClientImpl = void 0;
const binary_1 = require("../../../binary");
const tx_1 = require("./tx");
class MsgClientImpl {
    rpc;
    constructor(rpc) {
        this.rpc = rpc;
    }
    /* CreateVestingAccount defines a method that enables creating a vesting
     account. */
    createVestingAccount = async (request) => {
        const data = tx_1.MsgCreateVestingAccount.encode(request).finish();
        const promise = this.rpc.request("cosmos.vesting.v1beta1.Msg", "CreateVestingAccount", data);
        return promise.then(data => tx_1.MsgCreateVestingAccountResponse.decode(new binary_1.BinaryReader(data)));
    };
    /* CreatePermanentLockedAccount defines a method that enables creating a permanent
     locked account.
    
     Since: cosmos-sdk 0.46 */
    createPermanentLockedAccount = async (request) => {
        const data = tx_1.MsgCreatePermanentLockedAccount.encode(request).finish();
        const promise = this.rpc.request("cosmos.vesting.v1beta1.Msg", "CreatePermanentLockedAccount", data);
        return promise.then(data => tx_1.MsgCreatePermanentLockedAccountResponse.decode(new binary_1.BinaryReader(data)));
    };
    /* CreatePeriodicVestingAccount defines a method that enables creating a
     periodic vesting account.
    
     Since: cosmos-sdk 0.46 */
    createPeriodicVestingAccount = async (request) => {
        const data = tx_1.MsgCreatePeriodicVestingAccount.encode(request).finish();
        const promise = this.rpc.request("cosmos.vesting.v1beta1.Msg", "CreatePeriodicVestingAccount", data);
        return promise.then(data => tx_1.MsgCreatePeriodicVestingAccountResponse.decode(new binary_1.BinaryReader(data)));
    };
}
exports.MsgClientImpl = MsgClientImpl;
//# sourceMappingURL=tx.rpc.msg.js.map