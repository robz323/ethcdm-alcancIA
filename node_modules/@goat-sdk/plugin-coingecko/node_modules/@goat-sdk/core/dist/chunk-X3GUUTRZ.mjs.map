{"version":3,"sources":["../src/solana/methods.ts"],"sourcesContent":["import { formatUnits } from \"viem\";\nimport type { z } from \"zod\";\nimport type { SolanaWalletClient } from \"../wallets\";\nimport type {\n\tgetAddressParametersSchema,\n\tgetSOLBalanceParametersSchema,\n} from \"./parameters\";\n\nexport function getAddress(\n\twalletClient: SolanaWalletClient,\n\tparameters: z.infer<typeof getAddressParametersSchema>,\n): string {\n\treturn walletClient.getAddress();\n}\n\nexport async function getBalance(\n\twalletClient: SolanaWalletClient,\n\tparameters: z.infer<typeof getSOLBalanceParametersSchema>,\n): Promise<string> {\n\ttry {\n\t\tconst balance = await walletClient.balanceOf(\n\t\t\tparameters.address ?? getAddress(walletClient, {}),\n\t\t);\n\n\t\treturn formatUnits(balance.value, balance.decimals);\n\t} catch (error) {\n\t\tthrow new Error(`Failed to fetch balance: ${error}`);\n\t}\n}\n"],"mappings":";AAAA,SAAS,mBAAmB;AAQrB,SAAS,WACf,cACA,YACS;AACT,SAAO,aAAa,WAAW;AAChC;AAEA,eAAsB,WACrB,cACA,YACkB;AAClB,MAAI;AACH,UAAM,UAAU,MAAM,aAAa;AAAA,MAClC,WAAW,WAAW,WAAW,cAAc,CAAC,CAAC;AAAA,IAClD;AAEA,WAAO,YAAY,QAAQ,OAAO,QAAQ,QAAQ;AAAA,EACnD,SAAS,OAAO;AACf,UAAM,IAAI,MAAM,4BAA4B,KAAK,EAAE;AAAA,EACpD;AACD;","names":[]}