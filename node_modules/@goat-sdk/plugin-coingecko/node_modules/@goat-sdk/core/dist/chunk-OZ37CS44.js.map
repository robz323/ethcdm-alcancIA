{"version":3,"sources":["/Users/0xaguspunk/github.com/crossmint/goat/typescript/packages/core/dist/chunk-OZ37CS44.js","../src/plugins/send-eth.ts"],"names":[],"mappings":"AAAA;ACAA,4BAA2B;AAG3B,0BAAkB;AAEX,SAAS,OAAA,CAAA,EAAmC;AAC/C,EAAA,OAAO;AAAA,IACH,IAAA,EAAM,UAAA;AAAA,IACN,oBAAA,EAAsB,CAAA,EAAA,GAAM,IAAA;AAAA,IAC5B,aAAA,EAAe,CAAC,KAAA,EAAA,GAAU,KAAA,CAAM,KAAA,IAAS,KAAA;AAAA,IACzC,QAAA,EAAU,MAAA,CAAA,EAAA,GAAY;AAClB,MAAA,OAAO;AAAA,QACH;AAAA,UACI,IAAA,EAAM,UAAA;AAAA,UACN,WAAA,EACI,wDAAA;AAAA,UACJ,UAAA,EAAY,uBAAA;AAAA,UACZ,MAAA,EAAQ;AAAA,QACZ;AAAA,MACJ,CAAA;AAAA,IACJ;AAAA,EACJ,CAAA;AACJ;AAEA,IAAM,wBAAA,EAA0B,MAAA,CAAE,MAAA,CAAO;AAAA,EACrC,EAAA,EAAI,MAAA,CAAE,MAAA,CAAO,CAAA,CAAE,QAAA,CAAS,4BAA4B,CAAA;AAAA,EACpD,MAAA,EAAQ,MAAA,CAAE,MAAA,CAAO,CAAA,CAAE,QAAA,CAAS,2BAA2B;AAC3D,CAAC,CAAA;AAGD,MAAA,SAAe,aAAA,CACX,YAAA,EACA,UAAA,EACe;AACf,EAAA,IAAI;AACA,IAAA,MAAM,OAAA,EAAS,8BAAA,UAAW,CAAW,MAAM,CAAA;AAC3C,IAAA,MAAM,GAAA,EAAK,MAAM,YAAA,CAAa,eAAA,CAAgB;AAAA,MAC1C,EAAA,EAAI,UAAA,CAAW,EAAA;AAAA,MACf,KAAA,EAAO;AAAA,IACX,CAAC,CAAA;AAED,IAAA,OAAO,EAAA,CAAG,IAAA;AAAA,EACd,EAAA,MAAA,CAAS,KAAA,EAAO;AACZ,IAAA,MAAM,IAAI,KAAA,CAAM,CAAA,oBAAA,EAAuB,KAAK,CAAA,CAAA;AAChD,EAAA;AACJ;ADTiD;AACA;AACA;AACA","file":"/Users/0xaguspunk/github.com/crossmint/goat/typescript/packages/core/dist/chunk-OZ37CS44.js","sourcesContent":[null,"import { parseEther } from \"viem\";\nimport type { EVMWalletClient } from \"../wallets\";\nimport type { Plugin } from \"./plugins\";\nimport { z } from \"zod\";\n\nexport function sendETH(): Plugin<EVMWalletClient> {\n    return {\n        name: \"send_eth\",\n        supportsSmartWallets: () => true,\n        supportsChain: (chain) => chain.type === \"evm\",\n        getTools: async () => {\n            return [\n                {\n                    name: \"send_eth\",\n                    description:\n                        \"This {{tool}} sends ETH to an address on an EVM chain.\",\n                    parameters: sendETHParametersSchema,\n                    method: sendETHMethod,\n                },\n            ];\n        },\n    };\n}\n\nconst sendETHParametersSchema = z.object({\n    to: z.string().describe(\"The address to send ETH to\"),\n    amount: z.string().describe(\"The amount of ETH to send\"),\n});\n\n\nasync function sendETHMethod(\n    walletClient: EVMWalletClient,\n    parameters: z.infer<typeof sendETHParametersSchema>\n): Promise<string> {\n    try {\n        const amount = parseEther(parameters.amount);\n        const tx = await walletClient.sendTransaction({\n            to: parameters.to,\n            value: amount,\n        });\n\n        return tx.hash;\n    } catch (error) {\n        throw new Error(`Failed to send ETH: ${error}`);\n    }\n}\n"]}