{"version":3,"sources":["../src/plugins/send-eth.ts"],"sourcesContent":["import { parseEther } from \"viem\";\nimport type { EVMWalletClient } from \"../wallets\";\nimport type { Plugin } from \"./plugins\";\nimport { z } from \"zod\";\n\nexport function sendETH(): Plugin<EVMWalletClient> {\n    return {\n        name: \"send_eth\",\n        supportsSmartWallets: () => true,\n        supportsChain: (chain) => chain.type === \"evm\",\n        getTools: async () => {\n            return [\n                {\n                    name: \"send_eth\",\n                    description:\n                        \"This {{tool}} sends ETH to an address on an EVM chain.\",\n                    parameters: sendETHParametersSchema,\n                    method: sendETHMethod,\n                },\n            ];\n        },\n    };\n}\n\nconst sendETHParametersSchema = z.object({\n    to: z.string().describe(\"The address to send ETH to\"),\n    amount: z.string().describe(\"The amount of ETH to send\"),\n});\n\n\nasync function sendETHMethod(\n    walletClient: EVMWalletClient,\n    parameters: z.infer<typeof sendETHParametersSchema>\n): Promise<string> {\n    try {\n        const amount = parseEther(parameters.amount);\n        const tx = await walletClient.sendTransaction({\n            to: parameters.to,\n            value: amount,\n        });\n\n        return tx.hash;\n    } catch (error) {\n        throw new Error(`Failed to send ETH: ${error}`);\n    }\n}\n"],"mappings":";AAAA,SAAS,kBAAkB;AAG3B,SAAS,SAAS;AAEX,SAAS,UAAmC;AAC/C,SAAO;AAAA,IACH,MAAM;AAAA,IACN,sBAAsB,MAAM;AAAA,IAC5B,eAAe,CAAC,UAAU,MAAM,SAAS;AAAA,IACzC,UAAU,YAAY;AAClB,aAAO;AAAA,QACH;AAAA,UACI,MAAM;AAAA,UACN,aACI;AAAA,UACJ,YAAY;AAAA,UACZ,QAAQ;AAAA,QACZ;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACJ;AAEA,IAAM,0BAA0B,EAAE,OAAO;AAAA,EACrC,IAAI,EAAE,OAAO,EAAE,SAAS,4BAA4B;AAAA,EACpD,QAAQ,EAAE,OAAO,EAAE,SAAS,2BAA2B;AAC3D,CAAC;AAGD,eAAe,cACX,cACA,YACe;AACf,MAAI;AACA,UAAM,SAAS,WAAW,WAAW,MAAM;AAC3C,UAAM,KAAK,MAAM,aAAa,gBAAgB;AAAA,MAC1C,IAAI,WAAW;AAAA,MACf,OAAO;AAAA,IACX,CAAC;AAED,WAAO,GAAG;AAAA,EACd,SAAS,OAAO;AACZ,UAAM,IAAI,MAAM,uBAAuB,KAAK,EAAE;AAAA,EAClD;AACJ;","names":[]}