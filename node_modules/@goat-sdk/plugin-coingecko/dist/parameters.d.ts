import { z } from 'zod';

declare const getTrendingCoinsParametersSchema: z.ZodObject<{
    limit: z.ZodOptional<z.ZodNumber>;
    include_platform: z.ZodOptional<z.ZodBoolean>;
}, "strip", z.ZodTypeAny, {
    limit?: number | undefined;
    include_platform?: boolean | undefined;
}, {
    limit?: number | undefined;
    include_platform?: boolean | undefined;
}>;
declare const getCoinPriceParametersSchema: z.ZodObject<{
    coinId: z.ZodString;
    vsCurrency: z.ZodDefault<z.ZodString>;
    includeMarketCap: z.ZodDefault<z.ZodOptional<z.ZodBoolean>>;
    include24hrVol: z.ZodDefault<z.ZodOptional<z.ZodBoolean>>;
    include24hrChange: z.ZodDefault<z.ZodOptional<z.ZodBoolean>>;
    includeLastUpdatedAt: z.ZodDefault<z.ZodOptional<z.ZodBoolean>>;
}, "strip", z.ZodTypeAny, {
    coinId: string;
    vsCurrency: string;
    includeMarketCap: boolean;
    include24hrVol: boolean;
    include24hrChange: boolean;
    includeLastUpdatedAt: boolean;
}, {
    coinId: string;
    vsCurrency?: string | undefined;
    includeMarketCap?: boolean | undefined;
    include24hrVol?: boolean | undefined;
    include24hrChange?: boolean | undefined;
    includeLastUpdatedAt?: boolean | undefined;
}>;
declare const searchCoinsParametersSchema: z.ZodObject<{
    query: z.ZodString;
    exact_match: z.ZodDefault<z.ZodOptional<z.ZodBoolean>>;
}, "strip", z.ZodTypeAny, {
    query: string;
    exact_match: boolean;
}, {
    query: string;
    exact_match?: boolean | undefined;
}>;

export { getCoinPriceParametersSchema, getTrendingCoinsParametersSchema, searchCoinsParametersSchema };
