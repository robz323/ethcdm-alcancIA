import { EVMWalletClient } from '@goat-sdk/wallet-evm';
import { GetTokenInfoBySymbolParameters, GetTokenBalanceParameters, TransferParameters, GetTokenTotalSupplyParameters, GetTokenAllowanceParameters, ApproveParameters, TransferFromParameters, ConvertToBaseUnitParameters, ConvertFromBaseUnitParameters } from './parameters.js';
import { Token } from './token.js';
import '@goat-sdk/core';
import 'zod';

declare class Erc20Service {
    private tokens;
    constructor({ tokens }?: {
        tokens?: Token[];
    });
    getTokenInfoBySymbol(walletClient: EVMWalletClient, parameters: GetTokenInfoBySymbolParameters): Promise<{
        symbol: string;
        contractAddress: `0x${string}`;
        decimals: number;
        name: string;
    }>;
    getTokenBalance(walletClient: EVMWalletClient, parameters: GetTokenBalanceParameters): Promise<number>;
    transfer(walletClient: EVMWalletClient, parameters: TransferParameters): Promise<string>;
    getTokenTotalSupply(walletClient: EVMWalletClient, parameters: GetTokenTotalSupplyParameters): Promise<unknown>;
    getTokenAllowance(walletClient: EVMWalletClient, parameters: GetTokenAllowanceParameters): Promise<number>;
    approve(walletClient: EVMWalletClient, parameters: ApproveParameters): Promise<string>;
    transferFrom(walletClient: EVMWalletClient, parameters: TransferFromParameters): Promise<string>;
    convertToBaseUnit(parameters: ConvertToBaseUnitParameters): Promise<number>;
    convertFromBaseUnit(parameters: ConvertFromBaseUnitParameters): Promise<number>;
}

export { Erc20Service };
