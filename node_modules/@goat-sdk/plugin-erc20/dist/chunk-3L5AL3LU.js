"use strict";Object.defineProperty(exports, "__esModule", {value: true});var _chunkEI7MMDWYjs = require('./chunk-EI7MMDWY.js');var _core = require('@goat-sdk/core');var _zod = require('zod');var n=class extends _core.createToolParameters.call(void 0, _zod.z.object({symbol:_zod.z.string().describe("The symbol of the token to get the info of")})){static{_chunkEI7MMDWYjs.a.call(void 0, this,"GetTokenInfoBySymbolParameters")}},r= exports.b =class extends _core.createToolParameters.call(void 0, _zod.z.object({wallet:_zod.z.string().describe("The address to get the balance of"),tokenAddress:_zod.z.string().describe("The address of the token to get the balance of")})){static{_chunkEI7MMDWYjs.a.call(void 0, this,"GetTokenBalanceParameters")}},d= exports.c =class extends _core.createToolParameters.call(void 0, _zod.z.object({tokenAddress:_zod.z.string().describe("The address of the token to transfer"),to:_zod.z.string().describe("The address to transfer the token to"),amount:_zod.z.string().describe("The amount of tokens to transfer in base units")})){static{_chunkEI7MMDWYjs.a.call(void 0, this,"TransferParameters")}},c= exports.d =class extends _core.createToolParameters.call(void 0, _zod.z.object({tokenAddress:_zod.z.string().describe("The address of the token to get the total supply of")})){static{_chunkEI7MMDWYjs.a.call(void 0, this,"GetTokenTotalSupplyParameters")}},i= exports.e =class extends _core.createToolParameters.call(void 0, _zod.z.object({tokenAddress:_zod.z.string().describe("The address of the token to check the allowance of"),owner:_zod.z.string().describe("The address to check the allowance of"),spender:_zod.z.string().describe("The address to check the allowance for")})){static{_chunkEI7MMDWYjs.a.call(void 0, this,"GetTokenAllowanceParameters")}},a= exports.f =class extends _core.createToolParameters.call(void 0, _zod.z.object({tokenAddress:_zod.z.string().describe("The address of the token to approve"),spender:_zod.z.string().describe("The address to approve the allowance to"),amount:_zod.z.string().describe("The amount of tokens to approve in base units")})){static{_chunkEI7MMDWYjs.a.call(void 0, this,"ApproveParameters")}},b= exports.g =class extends _core.createToolParameters.call(void 0, _zod.z.object({tokenAddress:_zod.z.string().describe("The address of the token to transfer"),from:_zod.z.string().describe("The address to transfer the token from"),to:_zod.z.string().describe("The address to transfer the token to"),amount:_zod.z.string().describe("The amount of tokens to transfer in base units")})){static{_chunkEI7MMDWYjs.a.call(void 0, this,"TransferFromParameters")}},h= exports.h =class extends _core.createToolParameters.call(void 0, _zod.z.object({amount:_zod.z.number().describe("The amount of tokens to convert from decimal units to base units"),decimals:_zod.z.number().describe("The number of decimals of the token")})){static{_chunkEI7MMDWYjs.a.call(void 0, this,"ConvertToBaseUnitParameters")}},f= exports.i =class extends _core.createToolParameters.call(void 0, _zod.z.object({amount:_zod.z.number().describe("The amount of tokens to convert from base units to decimal units"),decimals:_zod.z.number().describe("The number of decimals of the token")})){static{_chunkEI7MMDWYjs.a.call(void 0, this,"ConvertFromBaseUnitParameters")}};exports.a = n; exports.b = r; exports.c = d; exports.d = c; exports.e = i; exports.f = a; exports.g = b; exports.h = h; exports.i = f;
