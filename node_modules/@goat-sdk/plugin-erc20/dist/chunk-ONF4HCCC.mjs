import{a as t}from"./chunk-YSXGDEY5.mjs";import{createToolParameters as s}from"@goat-sdk/core";import{z as e}from"zod";var n=class extends s(e.object({symbol:e.string().describe("The symbol of the token to get the info of")})){static{t(this,"GetTokenInfoBySymbolParameters")}},r=class extends s(e.object({wallet:e.string().describe("The address to get the balance of"),tokenAddress:e.string().describe("The address of the token to get the balance of")})){static{t(this,"GetTokenBalanceParameters")}},d=class extends s(e.object({tokenAddress:e.string().describe("The address of the token to transfer"),to:e.string().describe("The address to transfer the token to"),amount:e.string().describe("The amount of tokens to transfer in base units")})){static{t(this,"TransferParameters")}},c=class extends s(e.object({tokenAddress:e.string().describe("The address of the token to get the total supply of")})){static{t(this,"GetTokenTotalSupplyParameters")}},i=class extends s(e.object({tokenAddress:e.string().describe("The address of the token to check the allowance of"),owner:e.string().describe("The address to check the allowance of"),spender:e.string().describe("The address to check the allowance for")})){static{t(this,"GetTokenAllowanceParameters")}},a=class extends s(e.object({tokenAddress:e.string().describe("The address of the token to approve"),spender:e.string().describe("The address to approve the allowance to"),amount:e.string().describe("The amount of tokens to approve in base units")})){static{t(this,"ApproveParameters")}},b=class extends s(e.object({tokenAddress:e.string().describe("The address of the token to transfer"),from:e.string().describe("The address to transfer the token from"),to:e.string().describe("The address to transfer the token to"),amount:e.string().describe("The amount of tokens to transfer in base units")})){static{t(this,"TransferFromParameters")}},h=class extends s(e.object({amount:e.number().describe("The amount of tokens to convert from decimal units to base units"),decimals:e.number().describe("The number of decimals of the token")})){static{t(this,"ConvertToBaseUnitParameters")}},f=class extends s(e.object({amount:e.number().describe("The amount of tokens to convert from base units to decimal units"),decimals:e.number().describe("The number of decimals of the token")})){static{t(this,"ConvertFromBaseUnitParameters")}};export{n as a,r as b,d as c,c as d,i as e,a as f,b as g,h,f as i};
