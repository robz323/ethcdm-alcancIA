"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.isEmailValid = exports.VERIFY_EMAIL_ENDPOINT = void 0;
const DEFAULT_VERIFY_EMAIL_ENDPOINT = "https://email-verify.tiplink.tech/verify-email";
exports.VERIFY_EMAIL_ENDPOINT = process !== undefined && process.env !== undefined
    ? process.env.NEXT_PUBLIC_VERIFY_EMAIL_ENDPOINT_OVERRIDE ||
        DEFAULT_VERIFY_EMAIL_ENDPOINT
    : DEFAULT_VERIFY_EMAIL_ENDPOINT;
function isEmailValid(emailAddress) {
    return __awaiter(this, void 0, void 0, function* () {
        const res = yield fetch(exports.VERIFY_EMAIL_ENDPOINT, {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({ emailAddress }),
        });
        if (!res.ok) {
            throw new Error(`HTTP error! Status: ${res.status}`);
        }
        const { validFormat, validSmtp, validMx } = yield res.json();
        return validFormat && validSmtp && validMx;
    });
}
exports.isEmailValid = isEmailValid;
