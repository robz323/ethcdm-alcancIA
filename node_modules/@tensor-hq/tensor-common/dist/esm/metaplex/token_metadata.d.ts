/// <reference types="node" />
import { Metadata } from '@metaplex-foundation/mpl-token-metadata';
import { Connection, PublicKey } from '@solana/web3.js';
export declare const findMetadataFromMint: (mint: string | PublicKey) => PublicKey;
export declare const fetchMetadataByMint: (conn: Connection, mint: string | PublicKey) => Promise<{
    address: PublicKey;
    metadata: Metadata | null;
}>;
export declare enum MetadataErrType {
    Malformed = "Malformed",
    Unknown = "Unknown"
}
export declare const getMetadataErrType: (err: any) => MetadataErrType;
/** Handles burned but non-empty metadata accounts */
export declare const deserializeMeta: (data: Uint8Array | Buffer) => Metadata | null;
/** Fetches Metadata account and handles zero'ed out accounts w/ Metaplex fee remaining */
export declare const fetchMetadata: (conn: Connection, address: PublicKey) => Promise<Metadata | null>;
//# sourceMappingURL=token_metadata.d.ts.map