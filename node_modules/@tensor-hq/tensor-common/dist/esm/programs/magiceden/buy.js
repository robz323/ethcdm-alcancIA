import { LAMPORTS_PER_SOL } from '@solana/web3.js';
import axios from 'axios';
import Big from 'big.js';
import { makeMEHeaders, ME_AH_ADDRESS, ME_URL } from './shared';
import { legacyToV0Tx } from '../../solana_contrib';
export const makeMEBuyTx = async ({ tokenMint, tokenAcc, buyer, seller, priceLamports, apiKey, sellerReferral, expiry, buyerCreatorRoyaltyPercent, }) => {
    const price = new Big(priceLamports).div(LAMPORTS_PER_SOL).toNumber();
    const { data } = await axios.get(`${ME_URL}/v2/instructions/buy_now`, {
        params: {
            buyer,
            seller,
            auctionHouseAddress: ME_AH_ADDRESS,
            tokenMint,
            tokenATA: tokenAcc,
            price,
            sellerReferral,
            sellerExpiry: expiry,
            buyerCreatorRoyaltyPercent,
        },
        headers: makeMEHeaders(apiKey),
    });
    return {
        txSigned: data.txSigned.data,
        v0TxSigned: data.v0?.txSigned.data ?? [
            ...legacyToV0Tx(data.txSigned.data).serialize(),
        ],
        lastValidBlockHeight: data.blockhashData.lastValidBlockHeight,
    };
};
//# sourceMappingURL=buy.js.map