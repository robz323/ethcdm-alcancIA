import { PublicKey } from '@solana/web3.js';
import { createAssociatedTokenAccountInstruction, getAssociatedTokenAddressSync, } from '@solana/spl-token';
export const findAta = (mint, owner) => {
    return getAssociatedTokenAddressSync(mint, owner, true);
};
export const getOrCreateAtaForMint = async ({ connection, mint, owner, }) => {
    const instructions = [];
    const tokenAccount = findAta(mint, owner);
    const accInfo = await connection.getAccountInfo(tokenAccount);
    //create if missing
    if (!accInfo) {
        instructions.push(createAssociatedTokenAccountInstruction(owner, tokenAccount, owner, mint));
    }
    return {
        tokenAccount,
        instructions,
    };
};
// Returns the token account currently holding the NFT.
export const getNftTokenAcc = async (conn, mint) => {
    const nftTokenAcc = (await conn.getTokenLargestAccounts(mint)).value.find((acc) => acc.uiAmount === 1);
    if (!nftTokenAcc)
        return null;
    return new PublicKey(nftTokenAcc.address);
};
//# sourceMappingURL=spl_token.js.map