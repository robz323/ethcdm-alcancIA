"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.makeMEAcceptBidTx = void 0;
const shared_1 = require("./shared");
const web3_js_1 = require("@solana/web3.js");
const axios_1 = __importDefault(require("axios"));
const spl_token_1 = require("@solana/spl-token");
const makeMEAcceptBidTx = async ({ tokenMint, buyer, seller, priceLamports, newPriceLamports, apiKey, }) => {
    const price = priceLamports.div(web3_js_1.LAMPORTS_PER_SOL).toNumber();
    const newPrice = newPriceLamports.div(web3_js_1.LAMPORTS_PER_SOL).toNumber();
    const tokenAccount = await (0, spl_token_1.getAssociatedTokenAddress)(new web3_js_1.PublicKey(tokenMint), new web3_js_1.PublicKey(seller));
    const { data } = await axios_1.default.get(`${shared_1.ME_URL}/v2/instructions/sell_now`, {
        params: {
            buyer,
            seller,
            auctionHouseAddress: shared_1.ME_AH_ADDRESS,
            tokenMint,
            tokenATA: tokenAccount.toBase58(),
            price,
            newPrice,
            sellerExpiry: '-1',
        },
        headers: (0, shared_1.makeMEHeaders)(apiKey),
    });
    return data.txSigned.data;
};
exports.makeMEAcceptBidTx = makeMEAcceptBidTx;
//# sourceMappingURL=accept_bid.js.map