"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.makeMEBuyTx = void 0;
const web3_js_1 = require("@solana/web3.js");
const axios_1 = __importDefault(require("axios"));
const big_js_1 = __importDefault(require("big.js"));
const shared_1 = require("./shared");
const solana_contrib_1 = require("../../solana_contrib");
const makeMEBuyTx = async ({ tokenMint, tokenAcc, buyer, seller, priceLamports, apiKey, sellerReferral, expiry, buyerCreatorRoyaltyPercent, }) => {
    const price = new big_js_1.default(priceLamports).div(web3_js_1.LAMPORTS_PER_SOL).toNumber();
    const { data } = await axios_1.default.get(`${shared_1.ME_URL}/v2/instructions/buy_now`, {
        params: {
            buyer,
            seller,
            auctionHouseAddress: shared_1.ME_AH_ADDRESS,
            tokenMint,
            tokenATA: tokenAcc,
            price,
            sellerReferral,
            sellerExpiry: expiry,
            buyerCreatorRoyaltyPercent,
        },
        headers: (0, shared_1.makeMEHeaders)(apiKey),
    });
    return {
        txSigned: data.txSigned.data,
        v0TxSigned: data.v0?.txSigned.data ?? [
            ...(0, solana_contrib_1.legacyToV0Tx)(data.txSigned.data).serialize(),
        ],
        lastValidBlockHeight: data.blockhashData.lastValidBlockHeight,
    };
};
exports.makeMEBuyTx = makeMEBuyTx;
//# sourceMappingURL=buy.js.map