import BN from 'bn.js';
export type OSReceivedOrderData = {
    client_message: string;
    client_signature_standard: string;
    order_data: string;
    server_signature: string;
};
export type OSOrder = {
    relay_id: string;
    listing_time: number;
    expiration_time: number;
    current_price: string;
};
export declare const listOSActiveOrdersOrListings: (type: 'offers' | 'listings', { tokenMint, apiKey, maker, listedAfter: listed_after, listedBefore: listed_before, orderBy: order_by, orderDir: order_direction, }: {
    tokenMint: string;
    apiKey: string;
    maker?: string | undefined;
    listedAfter?: number | undefined;
    listedBefore?: number | undefined;
    orderBy?: "created_date" | "eth_price" | undefined;
    orderDir?: "asc" | "desc" | undefined;
}) => Promise<OSOrder[]>;
export declare const requestOSOfferOrListingTx: (type: 'offer' | 'listing', { tokenMint, maker, priceLamports, apiKey, }: {
    tokenMint: string;
    maker: string;
    priceLamports: BN;
    apiKey: string;
}) => Promise<OSReceivedOrderData>;
export declare const requestOSFulfillmentTx: ({ relayId, taker, apiKey, }: {
    relayId: string;
    taker: string;
    apiKey: string;
}) => Promise<OSReceivedOrderData>;
//# sourceMappingURL=shared.d.ts.map