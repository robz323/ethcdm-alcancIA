"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.findWNSDistributionPda = exports.findWNSExtraMetasPda = exports.findWNSApprovalPda = exports.findWNSMemberPda = exports.findWNSGroupPda = exports.WNS_DIST_PROGRAM_ID = exports.WNS_PROGRAM_ID = void 0;
const anchor_1 = require("@coral-xyz/anchor");
const web3_js_1 = require("@solana/web3.js");
exports.WNS_PROGRAM_ID = new web3_js_1.PublicKey('wns1gDLt8fgLcGhWi5MqAqgXpwEP1JftKE9eZnXS1HM');
exports.WNS_DIST_PROGRAM_ID = new web3_js_1.PublicKey('diste3nXmK7ddDTs1zb6uday6j4etCa9RChD8fJ1xay');
const findWNSGroupPda = (mint) => {
    const [groupAccount] = web3_js_1.PublicKey.findProgramAddressSync([anchor_1.utils.bytes.utf8.encode('group'), new web3_js_1.PublicKey(mint).toBuffer()], exports.WNS_PROGRAM_ID);
    return groupAccount;
};
exports.findWNSGroupPda = findWNSGroupPda;
const findWNSMemberPda = (mint) => {
    const [groupAccount] = web3_js_1.PublicKey.findProgramAddressSync([anchor_1.utils.bytes.utf8.encode('member'), new web3_js_1.PublicKey(mint).toBuffer()], exports.WNS_PROGRAM_ID);
    return groupAccount;
};
exports.findWNSMemberPda = findWNSMemberPda;
const findWNSApprovalPda = (mint) => {
    const [approvalAccount] = web3_js_1.PublicKey.findProgramAddressSync([
        anchor_1.utils.bytes.utf8.encode('approve-account'),
        new web3_js_1.PublicKey(mint).toBuffer(),
    ], exports.WNS_PROGRAM_ID);
    return approvalAccount;
};
exports.findWNSApprovalPda = findWNSApprovalPda;
const findWNSExtraMetasPda = (mint) => {
    const [extraMetasAccount] = web3_js_1.PublicKey.findProgramAddressSync([
        anchor_1.utils.bytes.utf8.encode('extra-account-metas'),
        new web3_js_1.PublicKey(mint).toBuffer(),
    ], exports.WNS_PROGRAM_ID);
    return extraMetasAccount;
};
exports.findWNSExtraMetasPda = findWNSExtraMetasPda;
const findWNSDistributionPda = (collection, paymentMint) => {
    const [distributionAccount] = web3_js_1.PublicKey.findProgramAddressSync([
        new web3_js_1.PublicKey(collection).toBuffer(),
        paymentMint ? paymentMint.toBuffer() : web3_js_1.SystemProgram.programId.toBuffer(),
    ], exports.WNS_DIST_PROGRAM_ID);
    return distributionAccount;
};
exports.findWNSDistributionPda = findWNSDistributionPda;
//# sourceMappingURL=wns.js.map