export function median(data) {
    // Only include items in the array that are finite numbers.
    const numbers = data.filter((num) => Number.isFinite(num));
    if (!numbers || numbers.length === 0)
        return Number.NaN;
    // Sort the array
    const sortedNumbers = numbers.slice().sort((a, b) => a - b);
    const midIndex = Math.floor(sortedNumbers.length / 2);
    return sortedNumbers.length % 2 === 0
        ? // If there are an even number of elements, return the average of the two middle numbers
            (sortedNumbers[midIndex - 1] + sortedNumbers[midIndex]) / 2
        : // If there are an odd number of elements, return the middle number
            sortedNumbers[midIndex];
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnVtYmVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3V0aWxzL251bWJlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLFVBQVUsTUFBTSxDQUFDLElBQWM7SUFDbkMsMkRBQTJEO0lBQzNELE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUMzRCxJQUFJLENBQUMsT0FBTyxJQUFJLE9BQU8sQ0FBQyxNQUFNLEtBQUssQ0FBQztRQUFFLE9BQU8sTUFBTSxDQUFDLEdBQUcsQ0FBQztJQUV4RCxpQkFBaUI7SUFDakIsTUFBTSxhQUFhLEdBQUcsT0FBTyxDQUFDLEtBQUssRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztJQUM1RCxNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLGFBQWEsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDdEQsT0FBTyxhQUFhLENBQUMsTUFBTSxHQUFHLENBQUMsS0FBSyxDQUFDO1FBQ25DLENBQUMsQ0FBQyx3RkFBd0Y7WUFDeEYsQ0FBQyxhQUFhLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQyxHQUFHLGFBQWEsQ0FBQyxRQUFRLENBQUMsQ0FBQyxHQUFHLENBQUM7UUFDN0QsQ0FBQyxDQUFDLG1FQUFtRTtZQUNuRSxhQUFhLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDOUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBtZWRpYW4oZGF0YTogbnVtYmVyW10pOiBudW1iZXIge1xuICAvLyBPbmx5IGluY2x1ZGUgaXRlbXMgaW4gdGhlIGFycmF5IHRoYXQgYXJlIGZpbml0ZSBudW1iZXJzLlxuICBjb25zdCBudW1iZXJzID0gZGF0YS5maWx0ZXIoKG51bSkgPT4gTnVtYmVyLmlzRmluaXRlKG51bSkpO1xuICBpZiAoIW51bWJlcnMgfHwgbnVtYmVycy5sZW5ndGggPT09IDApIHJldHVybiBOdW1iZXIuTmFOO1xuXG4gIC8vIFNvcnQgdGhlIGFycmF5XG4gIGNvbnN0IHNvcnRlZE51bWJlcnMgPSBudW1iZXJzLnNsaWNlKCkuc29ydCgoYSwgYikgPT4gYSAtIGIpO1xuICBjb25zdCBtaWRJbmRleCA9IE1hdGguZmxvb3Ioc29ydGVkTnVtYmVycy5sZW5ndGggLyAyKTtcbiAgcmV0dXJuIHNvcnRlZE51bWJlcnMubGVuZ3RoICUgMiA9PT0gMFxuICAgID8gLy8gSWYgdGhlcmUgYXJlIGFuIGV2ZW4gbnVtYmVyIG9mIGVsZW1lbnRzLCByZXR1cm4gdGhlIGF2ZXJhZ2Ugb2YgdGhlIHR3byBtaWRkbGUgbnVtYmVyc1xuICAgICAgKHNvcnRlZE51bWJlcnNbbWlkSW5kZXggLSAxXSArIHNvcnRlZE51bWJlcnNbbWlkSW5kZXhdKSAvIDJcbiAgICA6IC8vIElmIHRoZXJlIGFyZSBhbiBvZGQgbnVtYmVyIG9mIGVsZW1lbnRzLCByZXR1cm4gdGhlIG1pZGRsZSBudW1iZXJcbiAgICAgIHNvcnRlZE51bWJlcnNbbWlkSW5kZXhdO1xufVxuIl19