{"version":3,"sources":["../src/alpha-vault/index.ts","../src/alpha-vault/constant.ts","../src/alpha-vault/helper/index.ts","../src/alpha-vault/type.ts","../src/alpha-vault/idl.ts","../src/alpha-vault/merkle_tree/balance-tree.ts","../src/alpha-vault/merkle_tree/merkle-tree.ts","../src/index.ts"],"names":["BN","NATIVE_MINT","TOKEN_PROGRAM_ID","SystemProgram","Transaction","PublicKey","VaultMode","PoolType","ActivationType","fillDlmmTransaction","sha256"],"mappings":"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AA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,OAAO;AAAA,IACT;AAAA,EACF;AACF;;;ACpoK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","sourcesContent":["import { AnchorProvider, BN, Program } from \"@coral-xyz/anchor\";\nimport { NATIVE_MINT, TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport {\n  Cluster,\n  Connection,\n  PublicKey,\n  SystemProgram,\n  Transaction,\n  TransactionInstruction,\n} from \"@solana/web3.js\";\nimport {\n  ALPHA_VAULT_TREASURY_ID,\n  Permissionless,\n  PermissionWithAuthority,\n  PermissionWithMerkleProof,\n  PROGRAM_ID,\n  WhitelistMode,\n} from \"./constant\";\nimport {\n  deriveAlphaVault,\n  deriveEscrow,\n  deriveMerkleRootConfig,\n  fillDlmmTransaction,\n  fillDynamicAmmTransaction,\n  getOrCreateATAInstruction,\n  unwrapSOLInstruction,\n  wrapSOLInstruction,\n} from \"./helper\";\nimport { IDL } from \"./idl\";\nimport {\n  AlphaVaultProgram,\n  CustomizableFcfsVaultParams,\n  CustomizableProrataVaultParams,\n  DepositInfo,\n  DepositWithProofParams,\n  Escrow,\n  PoolType,\n  Vault,\n  VaultMode,\n  VaultParam,\n  WalletDepositCap,\n} from \"./type\";\n\nexport * from \"./constant\";\nexport * from \"./helper\";\nexport * from \"./merkle_tree/\";\nexport * from \"./type\";\n\ntype Opt = {\n  cluster: Cluster | \"localhost\";\n};\n\nexport class AlphaVault {\n  constructor(\n    public program: AlphaVaultProgram,\n    public pubkey: PublicKey,\n    public vault: Vault,\n    public mode: VaultMode\n  ) { }\n\n  /**\n   * Creates an AlphaVault instance from a given vault address.\n   *\n   * @param {Connection} connection - The Solana connection to use.\n   * @param {PublicKey} vaultAddress - The address of the vault to create an instance for.\n   * @param {Opt} [opt] - Optional configuration options.\n   * @return {Promise<AlphaVault>} A promise resolving to the created AlphaVault instance.\n   */\n  public static async create(\n    connection: Connection,\n    vaultAddress: PublicKey,\n    opt?: Opt\n  ): Promise<AlphaVault> {\n    const provider = new AnchorProvider(\n      connection,\n      {} as any,\n      AnchorProvider.defaultOptions()\n    );\n    const program = new Program(\n      IDL,\n      PROGRAM_ID[opt?.cluster || \"mainnet-beta\"],\n      provider\n    );\n\n    const vault = await program.account.vault.fetch(vaultAddress);\n    const vaultMode =\n      vault.vaultMode === 0 ? VaultMode.PRORATA : VaultMode.FCFS;\n\n    return new AlphaVault(program, vaultAddress, vault, vaultMode);\n  }\n\n  /**\n   * Creates a customizable FCFS vault\n   *\n   * @param {Connection} connection - The Solana connection to use.\n   * @param {CustomizableFcfsVaultParams} vaultParam - The parameters for creating the vault.\n   * @param {PublicKey} owner - The owner of the vault.\n   * @param {Opt} [opt] - Optional configuration options.\n   * @return {Promise<Transaction>} The transaction for creating the vault.\n   */\n  public static async createCustomizableFcfsVault(\n    connection: Connection,\n    vaultParam: CustomizableFcfsVaultParams,\n    owner: PublicKey,\n    opt?: Opt\n  ) {\n    const provider = new AnchorProvider(\n      connection,\n      {} as any,\n      AnchorProvider.defaultOptions()\n    );\n\n    const program = new Program(\n      IDL,\n      PROGRAM_ID[opt?.cluster || \"mainnet-beta\"],\n      provider\n    );\n\n    const {\n      poolAddress,\n      poolType,\n      baseMint,\n      quoteMint,\n      depositingPoint,\n      startVestingPoint,\n      endVestingPoint,\n      maxDepositingCap,\n      individualDepositingCap,\n      escrowFee,\n      whitelistMode,\n    } = vaultParam;\n\n    const [alphaVault] = deriveAlphaVault(\n      owner,\n      poolAddress,\n      program.programId\n    );\n\n    const createTx = await program.methods\n      .initializeFcfsVault({\n        poolType,\n        baseMint,\n        quoteMint,\n        depositingPoint,\n        startVestingPoint,\n        endVestingPoint,\n        maxDepositingCap,\n        individualDepositingCap,\n        escrowFee,\n        whitelistMode,\n      })\n      .accounts({\n        base: owner,\n        vault: alphaVault,\n        pool: poolAddress,\n        funder: owner,\n        program: program.programId,\n        systemProgram: SystemProgram.programId,\n      })\n      .transaction();\n\n    const { blockhash, lastValidBlockHeight } =\n      await program.provider.connection.getLatestBlockhash(\"confirmed\");\n    return new Transaction({\n      blockhash,\n      lastValidBlockHeight,\n      feePayer: owner,\n    }).add(createTx);\n  }\n\n  /**\n   * Creates a customizable Prorata vault.\n   *\n   * @param {Connection} connection - The Solana connection to use.\n   * @param {CustomizableProrataVaultParams} vaultParam - The parameters for creating the vault.\n   * @param {PublicKey} owner - The owner of the vault.\n   * @param {Opt} [opt] - Optional configuration options.\n   * @return {Promise<Transaction>} The transaction for creating the vault.\n   */\n  public static async createCustomizableProrataVault(\n    connection: Connection,\n    vaultParam: CustomizableProrataVaultParams,\n    owner: PublicKey,\n    opt?: Opt\n  ) {\n    const provider = new AnchorProvider(\n      connection,\n      {} as any,\n      AnchorProvider.defaultOptions()\n    );\n    const program = new Program(\n      IDL,\n      PROGRAM_ID[opt?.cluster || \"mainnet-beta\"],\n      provider\n    );\n\n    const {\n      poolAddress,\n      poolType,\n      baseMint,\n      quoteMint,\n      depositingPoint,\n      startVestingPoint,\n      endVestingPoint,\n      maxBuyingCap,\n      escrowFee,\n      whitelistMode,\n    } = vaultParam;\n\n    const [alphaVault] = deriveAlphaVault(\n      owner,\n      poolAddress,\n      program.programId\n    );\n\n    const createTx = await program.methods\n      .initializeProrataVault({\n        poolType,\n        baseMint,\n        quoteMint,\n        depositingPoint,\n        startVestingPoint,\n        endVestingPoint,\n        maxBuyingCap,\n        escrowFee,\n        whitelistMode,\n      })\n      .accounts({\n        base: owner,\n        vault: alphaVault,\n        pool: poolAddress,\n        funder: owner,\n        program: program.programId,\n        systemProgram: SystemProgram.programId,\n      })\n      .transaction();\n\n    const { blockhash, lastValidBlockHeight } =\n      await program.provider.connection.getLatestBlockhash(\"confirmed\");\n    return new Transaction({\n      blockhash,\n      lastValidBlockHeight,\n      feePayer: owner,\n    }).add(createTx);\n  }\n\n  /**\n   * Creates a permissionless vault for dynamic amm / dlmm pool.\n   *\n   * @param {Connection} connection - The Solana connection to use.\n   * @param {VaultParam} params - The vault parameters.\n   * @param {PublicKey} owner - The public key of the vault owner.\n   * @param {Opt} [opt] - Optional parameters.\n   * @return {Promise<Transaction>} The transaction creating the vault.\n   */\n  public static async createPermissionlessVault(\n    connection: Connection,\n    vaultParam: VaultParam,\n    owner: PublicKey,\n    opt?: Opt\n  ): Promise<Transaction> {\n    const provider = new AnchorProvider(\n      connection,\n      {} as any,\n      AnchorProvider.defaultOptions()\n    );\n    const program = new Program(\n      IDL,\n      PROGRAM_ID[opt?.cluster || \"mainnet-beta\"],\n      provider\n    );\n\n    return AlphaVault.createVault(program, vaultParam, owner, Permissionless);\n  }\n\n  /**\n   * Creates a permissioned vault for dynamic amm / dlmm pool. Vault created with this function will require merkle proof to be passed along when create stake escrow.\n   *\n   * @param {Connection} connection - The Solana connection to use.\n   * @param {VaultParam} params - The vault parameters.\n   * @param {PublicKey} owner - The public key of the vault owner.\n   * @param {Opt} [opt] - Optional parameters.\n   * @return {Promise<Transaction>} The transaction creating the vault.\n   */\n  public static async createPermissionedVaultWithMerkleProof(\n    connection: Connection,\n    vaultParam: VaultParam,\n    owner: PublicKey,\n    opt?: Opt\n  ): Promise<Transaction> {\n    const provider = new AnchorProvider(\n      connection,\n      {} as any,\n      AnchorProvider.defaultOptions()\n    );\n    const program = new Program(\n      IDL,\n      PROGRAM_ID[opt?.cluster || \"mainnet-beta\"],\n      provider\n    );\n\n    return AlphaVault.createVault(\n      program,\n      vaultParam,\n      owner,\n      PermissionWithMerkleProof\n    );\n  }\n\n  /**\n   * Creates a permissioned vault for dynamic amm / dlmm pool. Vault created with this function will require vault creator to create stake escrow for each users.\n   *\n   * @param {Connection} connection - The Solana connection to use.\n   * @param {VaultParam} params - The vault parameters.\n   * @param {PublicKey} owner - The public key of the vault owner.\n   * @param {Opt} [opt] - Optional parameters.\n   * @return {Promise<Transaction>} The transaction creating the vault.\n   */\n  public static async createPermissionedVaultWithAuthorityFund(\n    connection: Connection,\n    vaultParam: VaultParam,\n    owner: PublicKey,\n    opt?: Opt\n  ): Promise<Transaction> {\n    const provider = new AnchorProvider(\n      connection,\n      {} as any,\n      AnchorProvider.defaultOptions()\n    );\n    const program = new Program(\n      IDL,\n      PROGRAM_ID[opt?.cluster || \"mainnet-beta\"],\n      provider\n    );\n\n    return AlphaVault.createVault(\n      program,\n      vaultParam,\n      owner,\n      PermissionWithAuthority\n    );\n  }\n\n  /**\n   * Retrieves a list of all FCFS vault configurations.\n   *\n   * @param {Connection} connection - The Solana connection to use.\n   * @param {Opt} [opt] - Optional parameters (e.g., cluster).\n   * @return {Promise<fcfsVaultConfig[]>} A promise containing a list of FCFS vault configurations.\n   */\n  public static async getFcfsConfigs(connection: Connection, opt?: Opt) {\n    const provider = new AnchorProvider(\n      connection,\n      {} as any,\n      AnchorProvider.defaultOptions()\n    );\n    const program = new Program(\n      IDL,\n      PROGRAM_ID[opt?.cluster || \"mainnet-beta\"],\n      provider\n    );\n\n    return program.account.fcfsVaultConfig.all();\n  }\n\n  /**\n   * Retrieves a list of all prorata vault configurations.\n   *\n   * @param {Connection} connection - The Solana connection to use.\n   * @param {Opt} [opt] - Optional configuration options.\n   * @return {Promise<prorataVaultConfig[]>} A promise containing a list of prorata vault configurations.\n   */\n  public static async getProrataConfigs(connection: Connection, opt?: Opt) {\n    const provider = new AnchorProvider(\n      connection,\n      {} as any,\n      AnchorProvider.defaultOptions()\n    );\n    const program = new Program(\n      IDL,\n      PROGRAM_ID[opt?.cluster || \"mainnet-beta\"],\n      provider\n    );\n\n    return program.account.prorataVaultConfig.all();\n  }\n\n  /**\n   * Refreshes the state of the Alpha Vault by fetching the latest vault data.\n   *\n   * @return {void} No return value, updates the internal state of the Alpha Vault.\n   */\n  public async refreshState() {\n    this.vault = await this.program.account.vault.fetch(this.pubkey);\n  }\n\n  /**\n   * Retrieves the escrow account associated with the given owner.\n   *\n   * @param {PublicKey} owner - The public key of the owner.\n   * @return {Promise<Escrow | null>} A promise containing the escrow account, or null if not found.\n   */\n  public async getEscrow(owner: PublicKey): Promise<Escrow | null> {\n    const [escrow] = deriveEscrow(this.pubkey, owner, this.program.programId);\n    const escrowAccount =\n      await this.program.account.escrow.fetchNullable(escrow);\n\n    return escrowAccount;\n  }\n\n  /**\n   * Creates a stake escrow account by vault authority. Only applicable with PermissionWithAuthority whitelist mode\n   *\n   * @param {BN} maxAmount - The maximum amount for the escrow.\n   * @param {PublicKey} owner - The public key of the owner.\n   * @param {PublicKey} vaultAuthority - The public key of the vault authority.\n   * @return {Promise<Transaction>} A promise that resolves to the transaction for creating a stake escrow.\n   */\n  public async createStakeEscrowByAuthority(\n    maxAmount: BN,\n    owner: PublicKey,\n    vaultAuthority: PublicKey\n  ): Promise<Transaction> {\n    const [escrow] = deriveEscrow(this.pubkey, owner, this.program.programId);\n\n    const createStakeEscrowIx = await this.program.methods\n      .createPermissionedEscrowWithAuthority(maxAmount)\n      .accounts({\n        vault: this.pubkey,\n        pool: this.vault.pool,\n        escrow,\n        owner,\n        payer: vaultAuthority,\n      })\n      .instruction();\n\n    const { blockhash, lastValidBlockHeight } =\n      await this.program.provider.connection.getLatestBlockhash(\"confirmed\");\n\n    return new Transaction({\n      blockhash,\n      lastValidBlockHeight,\n      feePayer: vaultAuthority,\n    }).add(createStakeEscrowIx);\n  }\n\n  /**\n   * Creates a stake escrow account by vault authority. Only applicable with PermissionWithAuthority whitelist mode\n   *\n   * @param {BN} maxAmount - The maximum amount for the escrow.\n   * @param {PublicKey[]} owners - The public key of the owners.\n   * @param {PublicKey} vaultAuthority - The public key of the vault authority.\n   * @return {Promise<Transaction>} A promise that resolves to the transaction for creating a stake escrow.\n   */\n  public async createMultipleStakeEscrowByAuthorityInstructions(\n    walletDepositCap: WalletDepositCap[],\n    vaultAuthority: PublicKey\n  ): Promise<TransactionInstruction[]> {\n    return Promise.all(\n      walletDepositCap.map((individualCap) => {\n        const owner = individualCap.address;\n        const maxAmount = individualCap.maxAmount;\n\n        const [escrow] = deriveEscrow(\n          this.pubkey,\n          owner,\n          this.program.programId\n        );\n\n        return this.program.methods\n          .createPermissionedEscrowWithAuthority(maxAmount)\n          .accounts({\n            vault: this.pubkey,\n            pool: this.vault.pool,\n            escrow,\n            owner,\n            payer: vaultAuthority,\n          })\n          .instruction();\n      })\n    );\n  }\n\n  /**\n   * Deposits a specified amount of tokens into the vault.\n   *\n   * @param {BN} maxAmount - The maximum amount of tokens to deposit.\n   * @param {PublicKey} owner - The public key of the owner's wallet.\n   * @param {DepositWithProofParams} [depositProof] - The deposit proof parameters. Required for permisisoned vault.\n   * @return {Promise<Transaction>} A promise that resolves to the deposit transaction.\n   */\n  public async deposit(\n    maxAmount: BN,\n    owner: PublicKey,\n    depositProof?: DepositWithProofParams\n  ): Promise<Transaction> {\n    const [escrow] = deriveEscrow(this.pubkey, owner, this.program.programId);\n    const escrowAccount =\n      await this.program.account.escrow.fetchNullable(escrow);\n\n    const preInstructions: TransactionInstruction[] = [];\n    if (!escrowAccount) {\n      if (this.vault.whitelistMode === PermissionWithMerkleProof) {\n        const { merkleRootConfig, maxCap, proof } = depositProof;\n\n        const createEscrowTx = await this.program.methods\n          .createPermissionedEscrow(maxCap, proof)\n          .accounts({\n            merkleRootConfig,\n            vault: this.pubkey,\n            pool: this.vault.pool,\n            escrow,\n            owner,\n            payer: owner,\n            systemProgram: SystemProgram.programId,\n            escrowFeeReceiver: ALPHA_VAULT_TREASURY_ID,\n          })\n          .instruction();\n        preInstructions.push(createEscrowTx);\n      } else if (this.vault.whitelistMode === Permissionless) {\n        const createEscrowTx = await this.program.methods\n          .createNewEscrow()\n          .accounts({\n            vault: this.pubkey,\n            escrow,\n            owner,\n            payer: owner,\n            systemProgram: SystemProgram.programId,\n            pool: this.vault.pool,\n            escrowFeeReceiver: ALPHA_VAULT_TREASURY_ID,\n          })\n          .instruction();\n        preInstructions.push(createEscrowTx);\n      }\n    }\n\n    const [\n      { ataPubKey: sourceToken, ix: createSourceTokenIx },\n      { ix: createBaseTokenIx },\n      { ix: createTokenVaultIx },\n    ] = await Promise.all([\n      getOrCreateATAInstruction(\n        this.program.provider.connection,\n        this.vault.quoteMint,\n        owner\n      ),\n      getOrCreateATAInstruction(\n        this.program.provider.connection,\n        this.vault.baseMint,\n        owner\n      ),\n      getOrCreateATAInstruction(\n        this.program.provider.connection,\n        this.vault.quoteMint,\n        this.pubkey,\n        owner\n      ),\n    ]);\n    createSourceTokenIx && preInstructions.push(createSourceTokenIx);\n    createBaseTokenIx && preInstructions.push(createBaseTokenIx);\n    createTokenVaultIx && preInstructions.push(createTokenVaultIx);\n\n    const postInstructions: TransactionInstruction[] = [];\n    if (this.vault.quoteMint.equals(NATIVE_MINT)) {\n      preInstructions.push(\n        ...wrapSOLInstruction(owner, sourceToken, BigInt(maxAmount.toString()))\n      );\n      postInstructions.push(unwrapSOLInstruction(owner));\n    }\n\n    const depositTx = await this.program.methods\n      .deposit(maxAmount)\n      .accounts({\n        vault: this.pubkey,\n        escrow,\n        sourceToken,\n        tokenVault: this.vault.tokenVault,\n        tokenMint: this.vault.quoteMint,\n        pool: this.vault.pool,\n        owner,\n      })\n      .preInstructions(preInstructions)\n      .postInstructions(postInstructions)\n      .transaction();\n\n    const { blockhash, lastValidBlockHeight } =\n      await this.program.provider.connection.getLatestBlockhash(\"confirmed\");\n    return new Transaction({\n      blockhash,\n      lastValidBlockHeight,\n      feePayer: owner,\n    }).add(depositTx);\n  }\n\n  /**\n   * Withdraws a specified amount of tokens from the vault.\n   *\n   * @param {BN} amount - The amount of tokens to withdraw.\n   * @param {PublicKey} owner - The public key of the owner's wallet.\n   * @return {Promise<Transaction>} A promise that resolves to the withdraw transaction.\n   */\n  public async withdraw(amount: BN, owner: PublicKey) {\n    const [escrow] = deriveEscrow(this.pubkey, owner, this.program.programId);\n\n    const preInstructions: TransactionInstruction[] = [];\n    const { ataPubKey: destinationToken, ix: createDestinationTokenIx } =\n      await getOrCreateATAInstruction(\n        this.program.provider.connection,\n        this.vault.quoteMint,\n        owner\n      );\n    createDestinationTokenIx && preInstructions.push(createDestinationTokenIx);\n\n    const withdrawTx = await this.program.methods\n      .withdraw(amount)\n      .accounts({\n        vault: this.pubkey,\n        destinationToken,\n        escrow,\n        owner,\n        pool: this.vault.pool,\n        tokenVault: this.vault.tokenVault,\n        tokenMint: this.vault.quoteMint,\n        tokenProgram: TOKEN_PROGRAM_ID,\n      })\n      .preInstructions(preInstructions)\n      .transaction();\n\n    const { blockhash, lastValidBlockHeight } =\n      await this.program.provider.connection.getLatestBlockhash(\"confirmed\");\n    return new Transaction({\n      blockhash,\n      lastValidBlockHeight,\n      feePayer: owner,\n    }).add(withdrawTx);\n  }\n\n  /**\n   * Withdraws the remaining quote from the vault.\n   *\n   * @param {PublicKey} owner - The public key of the owner's wallet.\n   * @return {Promise<Transaction>} A promise that resolves to the withdraw transaction.\n   */\n  public async withdrawRemainingQuote(owner: PublicKey) {\n    const [escrow] = deriveEscrow(this.pubkey, owner, this.program.programId);\n\n    const preInstructions: TransactionInstruction[] = [];\n    const { ataPubKey: destinationToken, ix: createDestinationTokenIx } =\n      await getOrCreateATAInstruction(\n        this.program.provider.connection,\n        this.vault.quoteMint,\n        owner\n      );\n    createDestinationTokenIx && preInstructions.push(createDestinationTokenIx);\n\n    const withdrawRemainingTx = await this.program.methods\n      .withdrawRemainingQuote()\n      .accounts({\n        vault: this.pubkey,\n        escrow,\n        owner,\n        destinationToken,\n        pool: this.vault.pool,\n        tokenVault: this.vault.tokenVault,\n        tokenMint: this.vault.quoteMint,\n        tokenProgram: TOKEN_PROGRAM_ID,\n      })\n      .preInstructions(preInstructions)\n      .transaction();\n\n    const { blockhash, lastValidBlockHeight } =\n      await this.program.provider.connection.getLatestBlockhash(\"confirmed\");\n    return new Transaction({\n      blockhash,\n      lastValidBlockHeight,\n      feePayer: owner,\n    }).add(withdrawRemainingTx);\n  }\n\n  /**\n   * Claims bought token from the vault.\n   *\n   * @param {PublicKey} owner - The public key of the owner's wallet.\n   * @return {Promise<Transaction>} A promise that resolves to the claim transaction.\n   */\n  public async claimToken(owner: PublicKey) {\n    const [escrow] = deriveEscrow(this.pubkey, owner, this.program.programId);\n\n    const preInstructions: TransactionInstruction[] = [];\n    const { ataPubKey: destinationToken, ix: createDestinationTokenIx } =\n      await getOrCreateATAInstruction(\n        this.program.provider.connection,\n        this.vault.baseMint,\n        owner\n      );\n    createDestinationTokenIx && preInstructions.push(createDestinationTokenIx);\n\n    const claimTokenTx = await this.program.methods\n      .claimToken()\n      .accounts({\n        vault: this.pubkey,\n        escrow,\n        owner,\n        destinationToken,\n        tokenOutVault: this.vault.tokenOutVault,\n        tokenMint: this.vault.baseMint,\n        tokenProgram: TOKEN_PROGRAM_ID,\n      })\n      .preInstructions(preInstructions)\n      .transaction();\n\n    const { blockhash, lastValidBlockHeight } =\n      await this.program.provider.connection.getLatestBlockhash(\"confirmed\");\n    return new Transaction({\n      blockhash,\n      lastValidBlockHeight,\n      feePayer: owner,\n    }).add(claimTokenTx);\n  }\n\n  /**\n   * Crank the vault to buy tokens from the pool.\n   *\n   * @param {PublicKey} payer - The public key of the payer's wallet.\n   *\n   * @returns {Promise<Transaction | null>} A promise that resolves to the fill vault transaction or null if it's DLMM pool and out of liquidity.\n   */\n  public async fillVault(payer: PublicKey): Promise<Transaction | null> {\n    const poolType = this.vault.poolType;\n\n    if (poolType === PoolType.DYNAMIC) {\n      return fillDynamicAmmTransaction(\n        this.program,\n        this.pubkey,\n        this.vault,\n        payer\n      );\n    } else {\n      return fillDlmmTransaction(this.program, this.pubkey, this.vault, payer);\n    }\n  }\n\n  /**\n   * Creates a Merkle root configuration for the vault.\n   *\n   * @param {Buffer} root - The Merkle root to be configured.\n   * @param {BN} version - The version of the Merkle root configuration.\n   * @return {Transaction} A transaction to create the Merkle root configuration.\n   */\n  public async createMerkleRootConfig(\n    root: Buffer,\n    version: BN,\n    vaultCreator: PublicKey\n  ) {\n    const [merkleRootConfig] = deriveMerkleRootConfig(\n      this.pubkey,\n      version,\n      this.program.programId\n    );\n\n    return this.program.methods\n      .createMerkleRootConfig({\n        root: Array.from(new Uint8Array(root)),\n        version,\n      })\n      .accounts({\n        merkleRootConfig,\n        vault: this.pubkey,\n        admin: vaultCreator,\n        systemProgram: SystemProgram.programId,\n      })\n      .transaction();\n  }\n\n  /**\n   * Close the escrow account.\n   *\n   * @param {PublicKey} owner - The public key of the owner's wallet.\n   * @return {Promise<Transaction>} A promise that resolves to the close escrow transaction.\n   */\n  public async closeEscrow(owner: PublicKey) {\n    const [escrow] = deriveEscrow(this.pubkey, owner, this.program.programId);\n\n    const closeEscrowTx = await this.program.methods\n      .closeEscrow()\n      .accounts({\n        vault: this.pubkey,\n        escrow,\n        owner,\n        rentReceiver: owner,\n      })\n      .transaction();\n\n    const { blockhash, lastValidBlockHeight } =\n      await this.program.provider.connection.getLatestBlockhash(\"confirmed\");\n    return new Transaction({\n      blockhash,\n      lastValidBlockHeight,\n      feePayer: owner,\n    }).add(closeEscrowTx);\n  }\n\n  /**\n   * Retrieves deposit information for the given escrow account.\n   *\n   * @param {Escrow | null} escrowAccount - The escrow account to retrieve deposit information for.\n   * @return {Promise<DepositInfo>} A promise that resolves to the deposit information, including total deposit, total filled, and total returned.\n   */\n  public async getDepositInfo(\n    escrowAccount: Escrow | null\n  ): Promise<DepositInfo> {\n    if (!escrowAccount) {\n      return {\n        totalDeposit: new BN(0),\n        totalFilled: new BN(0),\n        totalReturned: new BN(0),\n      };\n    }\n\n    const remainingAmount = this.vault.totalDeposit.sub(this.vault.swappedAmount);\n    const totalReturned = remainingAmount.mul(escrowAccount.totalDeposit).div(this.vault.totalDeposit);\n    \n    const totalFilled = escrowAccount.totalDeposit.sub(totalReturned);\n\n    return {\n      totalDeposit: escrowAccount.totalDeposit,\n      totalFilled,\n      totalReturned,\n    };\n  }\n\n  private static async createVault(\n    program: AlphaVaultProgram,\n    {\n      quoteMint,\n      baseMint,\n      poolType,\n      vaultMode,\n      poolAddress,\n      config,\n    }: VaultParam,\n    owner: PublicKey,\n    whitelistMode: WhitelistMode\n  ) {\n    const [alphaVault] = deriveAlphaVault(\n      config,\n      poolAddress,\n      program.programId\n    );\n\n    const method =\n      vaultMode === VaultMode.PRORATA\n        ? program.methods.initializeVaultWithProrataConfig\n        : program.methods.initializeVaultWithFcfsConfig;\n\n    const createTx = await method({\n      poolType,\n      baseMint,\n      quoteMint,\n      whitelistMode,\n    })\n      .accounts({\n        vault: alphaVault,\n        pool: poolAddress,\n        funder: owner,\n        config,\n        quoteMint,\n        program: program.programId,\n        systemProgram: SystemProgram.programId,\n      })\n      .transaction();\n\n    const { blockhash, lastValidBlockHeight } =\n      await program.provider.connection.getLatestBlockhash(\"confirmed\");\n    return new Transaction({\n      blockhash,\n      lastValidBlockHeight,\n      feePayer: owner,\n    }).add(createTx);\n  }\n\n  /**\n   * Retrieves a list of all escrows by owner\n   *\n   * @param {Connection} connection - The Solana connection to use.\n   * @param {PublicKey} owner - The owner of escrows.\n   * @param {Opt} [opt] - Optional configuration options.\n   * @return {Promise<Esrow[]>} A promise containing a list of escrow\n   */\n  public static async getEscrowByOwner(\n    connection: Connection,\n    owner: PublicKey,\n    opt?: Opt\n  ) {\n    const provider = new AnchorProvider(\n      connection,\n      {} as any,\n      AnchorProvider.defaultOptions()\n    );\n    const program = new Program(\n      IDL,\n      PROGRAM_ID[opt?.cluster || \"mainnet-beta\"],\n      provider\n    );\n\n    return program.account.escrow.all([\n      {\n        memcmp: {\n          bytes: owner.toBase58(),\n          offset: 40,\n        },\n      },\n    ]);\n  }\n\n  public static async getVault(connection: Connection, vaultAddress: PublicKey, opt?: Opt) {\n    const provider = new AnchorProvider(\n      connection,\n      {} as any,\n      AnchorProvider.defaultOptions()\n    );\n    const program = new Program(\n      IDL,\n      PROGRAM_ID[opt?.cluster || \"mainnet-beta\"],\n      provider\n    );\n\n    return program.account.vault.fetch(vaultAddress);\n  }\n\n}\n","import { PublicKey } from \"@solana/web3.js\";\n\nexport const PROGRAM_ID = Object.freeze({\n  devnet: \"vaU6kP7iNEGkbmPkLmZfGwiGxd4Mob24QQCie5R9kd2\",\n  \"mainnet-beta\": \"vaU6kP7iNEGkbmPkLmZfGwiGxd4Mob24QQCie5R9kd2\",\n  \"localhost\": \"SNPmGgnywBvvrAKMLundzG6StojyHTHDLu7T4sdhP4k\"\n});\n\nexport const SEED = Object.freeze({\n  escrow: \"escrow\",\n  vault: \"vault\",\n  merkleRoot: \"merkle_root\",\n  crankFeeWhitelist: \"crank_fee_whitelist\",\n});\n\nexport const ALPHA_VAULT_TREASURY_ID = new PublicKey(\n  \"BJQbRiRWhJCyTYZcAuAL3ngDCx3AyFQGKDq8zhiZAKUw\"\n);\n\nexport const VAULT_PROGRAM_ID = new PublicKey(\n  \"24Uqj9JCLxUeoC3hGfh5W3s9FM9uCHDS2SG3LYwBpyTi\"\n);\n\nexport const DYNAMIC_AMM_PROGRAM_ID = new PublicKey(\n  \"Eo7WjKq67rjJQSZxS6z3YkapzY3eMj6Xy8X5EQVn5UaB\"\n);\n\nexport const DLMM_PROGRAM_ID = new PublicKey(\n  \"LBUZKhRxPF3XUpBCjp4YzTKgLccjZhTSDM9YuVaPwxo\"\n);\n\nexport const MERKLE_PROOF_API = Object.freeze({\n  devnet: \"https://worker-dev.meteora.ag/merkle-root-config-proof\",\n  \"mainnet-beta\": \"https://worker.meteora.ag/merkle-root-config-proof\",\n});\n\nexport type WhitelistMode = 0 | 1 | 2;\nexport const Permissionless = 0;\nexport const PermissionWithMerkleProof = 1;\nexport const PermissionWithAuthority = 2;\n","import {\n  ComputeBudgetProgram,\n  Connection,\n  PublicKey,\n  SystemProgram,\n  TransactionInstruction,\n} from \"@solana/web3.js\";\nimport {\n  ALPHA_VAULT_TREASURY_ID,\n  DLMM_PROGRAM_ID,\n  DYNAMIC_AMM_PROGRAM_ID,\n  SEED,\n  VAULT_PROGRAM_ID,\n} from \"../constant\";\nimport {\n  AlphaVaultProgram,\n  GetOrCreateATAResponse,\n  Vault,\n  VaultMode,\n} from \"../type\";\nimport {\n  createAssociatedTokenAccountInstruction,\n  createCloseAccountInstruction,\n  getAccount,\n  getAssociatedTokenAddressSync,\n  NATIVE_MINT,\n  TOKEN_PROGRAM_ID,\n  TokenAccountNotFoundError,\n  TokenInvalidAccountOwnerError,\n} from \"@solana/spl-token\";\nimport DynamicAmm from \"@mercurial-finance/dynamic-amm-sdk\";\nimport { Transaction } from \"@solana/web3.js\";\nimport DLMM, { DlmmSdkError, SwapQuote } from \"@meteora-ag/dlmm\";\nimport BN from \"bn.js\";\n\nexport function deriveCrankFeeWhitelist(\n  cranker: PublicKey,\n  programId: PublicKey\n) {\n  return PublicKey.findProgramAddressSync(\n    [\n      Buffer.from(SEED.crankFeeWhitelist),\n      cranker.toBuffer()\n    ],\n    programId\n  );\n}\n\nexport function deriveMerkleRootConfig(\n  alphaVault: PublicKey,\n  version: BN,\n  programId: PublicKey\n) {\n  return PublicKey.findProgramAddressSync(\n    [\n      Buffer.from(SEED.merkleRoot),\n      alphaVault.toBuffer(),\n      new Uint8Array(version.toArrayLike(Buffer, \"le\", 8)),\n    ],\n    programId\n  );\n}\n\nexport function deriveEscrow(\n  alphaVault: PublicKey,\n  owner: PublicKey,\n  programId: PublicKey\n) {\n  return PublicKey.findProgramAddressSync(\n    [Buffer.from(SEED.escrow), alphaVault.toBuffer(), owner.toBuffer()],\n    programId\n  );\n}\n\nexport function deriveAlphaVault(\n  base: PublicKey,\n  lbPair: PublicKey,\n  programId: PublicKey\n) {\n  return PublicKey.findProgramAddressSync(\n    [Buffer.from(SEED.vault), base.toBuffer(), lbPair.toBuffer()],\n    programId\n  );\n}\n\nexport const getOrCreateATAInstruction = async (\n  connection: Connection,\n  tokenMint: PublicKey,\n  owner: PublicKey,\n  payer: PublicKey = owner,\n  allowOwnerOffCurve = true\n): Promise<GetOrCreateATAResponse> => {\n  const toAccount = getAssociatedTokenAddressSync(\n    tokenMint,\n    owner,\n    allowOwnerOffCurve\n  );\n\n  try {\n    await getAccount(connection, toAccount);\n\n    return { ataPubKey: toAccount, ix: undefined };\n  } catch (e) {\n    if (\n      e instanceof TokenAccountNotFoundError ||\n      e instanceof TokenInvalidAccountOwnerError\n    ) {\n      const ix = createAssociatedTokenAccountInstruction(\n        payer,\n        toAccount,\n        owner,\n        tokenMint\n      );\n\n      return { ataPubKey: toAccount, ix };\n    } else {\n      /* handle error */\n      console.error(\"Error::getOrCreateATAInstruction\", e);\n      throw e;\n    }\n  }\n};\n\nexport const wrapSOLInstruction = (\n  from: PublicKey,\n  to: PublicKey,\n  amount: bigint\n): TransactionInstruction[] => {\n  return [\n    SystemProgram.transfer({\n      fromPubkey: from,\n      toPubkey: to,\n      lamports: amount,\n    }),\n    new TransactionInstruction({\n      keys: [\n        {\n          pubkey: to,\n          isSigner: false,\n          isWritable: true,\n        },\n      ],\n      data: Buffer.from(new Uint8Array([17])),\n      programId: TOKEN_PROGRAM_ID,\n    }),\n  ];\n};\n\nexport const unwrapSOLInstruction = (owner: PublicKey) => {\n  const wSolATAAccount = getAssociatedTokenAddressSync(\n    NATIVE_MINT,\n    owner,\n    true\n  );\n  if (wSolATAAccount) {\n    const closedWrappedSolInstruction = createCloseAccountInstruction(\n      wSolATAAccount,\n      owner,\n      owner\n    );\n    return closedWrappedSolInstruction;\n  }\n  return null;\n};\n\nexport const fillDlmmTransaction = async (\n  program: AlphaVaultProgram,\n  vaultKey: PublicKey,\n  vault: Vault,\n  payer: PublicKey\n) => {\n  const connection = program.provider.connection;\n  const pair = await DLMM.create(connection, vault.pool);\n  \n  const [crankFeeWhitelist] = deriveCrankFeeWhitelist(payer, program.programId);\n  const crankFeeWhitelistAccount = await connection.getAccountInfo(crankFeeWhitelist);\n\n  // TODO: Estimate CU\n  const preInstructions: TransactionInstruction[] = [\n    ComputeBudgetProgram.setComputeUnitLimit({\n      units: 1_400_000,\n    }),\n  ];\n  const { ataPubKey: tokenOutVault, ix: createTokenOutVaultIx } =\n    await getOrCreateATAInstruction(\n      connection,\n      vault.baseMint,\n      vaultKey,\n      payer\n    );\n  createTokenOutVaultIx && preInstructions.push(createTokenOutVaultIx);\n\n  const inAmountCap =\n    vault.vaultMode == VaultMode.FCFS\n      ? vault.totalDeposit\n      : vault.totalDeposit.lt(vault.maxBuyingCap)\n        ? vault.totalDeposit\n        : vault.maxBuyingCap;\n\n  const remainingInAmount = inAmountCap.sub(vault.swappedAmount);\n\n  const swapForY = pair.lbPair.tokenXMint.equals(vault.quoteMint);\n\n  const binArrays = await pair.getBinArrayForSwap(swapForY, 3);\n\n  let quoteResult: SwapQuote;\n  try {\n    quoteResult = pair.swapQuote(\n      remainingInAmount,\n      swapForY,\n      new BN(0),\n      binArrays,\n      true\n    );\n  } catch (error) {\n    if (error instanceof DlmmSdkError) {\n      if (error.name == \"SWAP_QUOTE_INSUFFICIENT_LIQUIDITY\") {\n        // With isPartialFill, insufficient liquidity happen only when there is not enough liquidity in the pool\n        // Vault bought up full distribution curve\n        return null;\n      }\n    }\n    throw error;\n  }\n\n  const { consumedInAmount, binArraysPubkey } = quoteResult;\n\n  const [dlmmEventAuthority] = PublicKey.findProgramAddressSync(\n    [Buffer.from(\"__event_authority\")],\n    DLMM_PROGRAM_ID\n  );\n\n  const fillDlmmTransaction = await program.methods\n    .fillDlmm(consumedInAmount)\n    .accounts({\n      vault: vaultKey,\n      tokenVault: vault.tokenVault,\n      tokenOutVault,\n      ammProgram: DLMM_PROGRAM_ID,\n      pool: vault.pool,\n      binArrayBitmapExtension: pair.binArrayBitmapExtension\n        ? pair.binArrayBitmapExtension.publicKey\n        : pair.program.programId,\n      reserveX: pair.lbPair.reserveX,\n      reserveY: pair.lbPair.reserveY,\n      tokenXMint: pair.lbPair.tokenXMint,\n      tokenYMint: pair.lbPair.tokenYMint,\n      oracle: pair.lbPair.oracle,\n      tokenXProgram: TOKEN_PROGRAM_ID,\n      tokenYProgram: TOKEN_PROGRAM_ID,\n      dlmmEventAuthority,\n      cranker: payer,\n      crankFeeReceiver: crankFeeWhitelistAccount ? program.programId : ALPHA_VAULT_TREASURY_ID,\n      crankFeeWhitelist: crankFeeWhitelistAccount ? crankFeeWhitelist : program.programId,\n      systemProgram: SystemProgram.programId,\n    })\n    .preInstructions(preInstructions)\n    .remainingAccounts(\n      binArraysPubkey.map((x) => ({\n        pubkey: x,\n        isSigner: false,\n        isWritable: true,\n      }))\n    )\n    .transaction();\n\n  const { blockhash, lastValidBlockHeight } =\n    await connection.getLatestBlockhash(\"confirmed\");\n\n  return new Transaction({\n    blockhash,\n    lastValidBlockHeight,\n    feePayer: payer,\n  }).add(fillDlmmTransaction);\n};\n\n/**\n * Creates a transaction to fill a dynamic AMM.\n *\n * @param {AlphaVaultProgram} program - The Alpha Vault program instance.\n * @param {PublicKey} vaultKey - The public key of the vault.\n * @param {Vault} vault - The vault state.\n * @param {PublicKey} payer - The public key of the payer.\n * @return {Promise<Transaction>} A transaction to fill the dynamic AMM.\n */\nexport const fillDynamicAmmTransaction = async (\n  program: AlphaVaultProgram,\n  vaultKey: PublicKey,\n  vault: Vault,\n  payer: PublicKey\n) => {\n  const connection = program.provider.connection;\n  const pool = await DynamicAmm.create(connection, vault.pool);\n\n  const [crankFeeWhitelist] = deriveCrankFeeWhitelist(payer, program.programId);\n  const crankFeeWhitelistAccount = await connection.getAccountInfo(crankFeeWhitelist);\n\n  const preInstructions: TransactionInstruction[] = [];\n  const { ataPubKey: tokenOutVault, ix: createTokenOutVaultIx } =\n    await getOrCreateATAInstruction(\n      connection,\n      vault.baseMint,\n      vaultKey,\n      payer\n    );\n  createTokenOutVaultIx && preInstructions.push(createTokenOutVaultIx);\n\n  const adminTokenFee = vault.quoteMint.equals(pool.poolState.tokenBMint)\n    ? pool.poolState.protocolTokenBFee\n    : pool.poolState.protocolTokenAFee;\n\n  const fillAmmTransaction = await program.methods\n    .fillDynamicAmm(vault.maxBuyingCap)\n    .accounts({\n      vault: vaultKey,\n      tokenVault: vault.tokenVault,\n      tokenOutVault,\n      ammProgram: DYNAMIC_AMM_PROGRAM_ID,\n      pool: vault.pool,\n      aVault: pool.vaultA.vaultPda,\n      bVault: pool.vaultB.vaultPda,\n      aTokenVault: pool.vaultA.tokenVaultPda,\n      bTokenVault: pool.vaultB.tokenVaultPda,\n      aVaultLp: pool.poolState.aVaultLp,\n      bVaultLp: pool.poolState.bVaultLp,\n      aVaultLpMint: pool.vaultA.tokenLpMint.address,\n      bVaultLpMint: pool.vaultB.tokenLpMint.address,\n      adminTokenFee,\n      vaultProgram: VAULT_PROGRAM_ID,\n      tokenProgram: TOKEN_PROGRAM_ID,\n      cranker: payer,\n      crankFeeReceiver: crankFeeWhitelistAccount ? program.programId : ALPHA_VAULT_TREASURY_ID,\n      crankFeeWhitelist: crankFeeWhitelistAccount ? crankFeeWhitelist : program.programId,\n      systemProgram: SystemProgram.programId\n    })\n    .preInstructions(preInstructions)\n    .transaction();\n\n  const { blockhash, lastValidBlockHeight } =\n    await connection.getLatestBlockhash(\"confirmed\");\n\n  return new Transaction({\n    blockhash,\n    lastValidBlockHeight,\n    feePayer: payer,\n  }).add(fillAmmTransaction);\n};\n","import { BN, IdlAccounts, Program } from \"@coral-xyz/anchor\";\nimport { AlphaVault } from \"./idl\";\nimport { PublicKey, TransactionInstruction } from \"@solana/web3.js\";\nimport { WhitelistMode } from \"./constant\";\n\nexport interface GetOrCreateATAResponse {\n  ataPubKey: PublicKey;\n  ix?: TransactionInstruction;\n}\n\nexport interface DepositWithProofParams {\n  merkleRootConfig: PublicKey;\n  maxCap: BN;\n  proof: number[][];\n}\n\nexport interface DepositInfo {\n  // Total deposit amount\n  totalDeposit: BN;\n  // Total consumed deposit amount for bought token\n  totalFilled: BN;\n  // Total remaining deposit amount to be returned\n  totalReturned: BN;\n}\n\nexport interface WalletDepositCap {\n  address: PublicKey;\n  maxAmount: BN;\n}\n\nexport interface VaultParam {\n  quoteMint: PublicKey;\n  baseMint: PublicKey;\n  poolAddress: PublicKey;\n  poolType: PoolType;\n  vaultMode: VaultMode;\n  config: PublicKey;\n}\n\nexport interface CustomizableFcfsVaultParams {\n  quoteMint: PublicKey;\n  baseMint: PublicKey;\n  poolAddress: PublicKey;\n  poolType: PoolType;\n  depositingPoint: BN;\n  startVestingPoint: BN;\n  endVestingPoint: BN;\n  maxDepositingCap: BN;\n  individualDepositingCap: BN;\n  escrowFee: BN;\n  whitelistMode: WhitelistMode;\n}\n\nexport interface CustomizableProrataVaultParams {\n  quoteMint: PublicKey;\n  baseMint: PublicKey;\n  poolAddress: PublicKey;\n  poolType: PoolType;\n  depositingPoint: BN;\n  startVestingPoint: BN;\n  endVestingPoint: BN;\n  maxBuyingCap: BN;\n  escrowFee: BN;\n  whitelistMode: WhitelistMode;\n}\n\nexport type AlphaVaultProgram = Program<AlphaVault>;\n\nexport type Vault = IdlAccounts<AlphaVault>[\"vault\"];\nexport type Escrow = IdlAccounts<AlphaVault>[\"escrow\"];\nexport type FCFSConfig = IdlAccounts<AlphaVault>[\"fcfsVaultConfig\"];\nexport type ProrataConfig = IdlAccounts<AlphaVault>[\"prorataVaultConfig\"];\n\nexport enum VaultMode {\n  PRORATA,\n  FCFS,\n}\n\nexport enum PoolType {\n  DLMM,\n  DYNAMIC,\n}\n\nexport enum ActivationType {\n  SLOT,\n  TIMESTAMP,\n}\n","export type AlphaVault = {\n  \"version\": \"0.3.2\",\n  \"name\": \"alpha_vault\",\n  \"instructions\": [\n    {\n      \"name\": \"transferVaultAuthority\",\n      \"accounts\": [\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"vaultAuthority\",\n          \"isMut\": false,\n          \"isSigner\": true\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"newAuthority\",\n          \"type\": \"publicKey\"\n        }\n      ]\n    },\n    {\n      \"name\": \"initializeProrataVault\",\n      \"accounts\": [\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"pool\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"funder\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"base\",\n          \"isMut\": false,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"params\",\n          \"type\": {\n            \"defined\": \"InitializeProrataVaultParams\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"initializeVaultWithProrataConfig\",\n      \"accounts\": [\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"pool\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"quoteMint\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"funder\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"config\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"params\",\n          \"type\": {\n            \"defined\": \"InitializeVaultWithConfigParams\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"updateProrataVaultParameters\",\n      \"accounts\": [\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"pool\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"admin\",\n          \"isMut\": false,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"params\",\n          \"type\": {\n            \"defined\": \"UpdateProrataVaultParams\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"createProrataConfig\",\n      \"accounts\": [\n        {\n          \"name\": \"config\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"admin\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"configParameters\",\n          \"type\": {\n            \"defined\": \"ProrataConfigParameters\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"closeProrataConfig\",\n      \"accounts\": [\n        {\n          \"name\": \"config\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"admin\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"rentReceiver\",\n          \"isMut\": true,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": []\n    },\n    {\n      \"name\": \"initializeFcfsVault\",\n      \"accounts\": [\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"pool\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"funder\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"base\",\n          \"isMut\": false,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"params\",\n          \"type\": {\n            \"defined\": \"InitializeFcfsVaultParams\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"initializeVaultWithFcfsConfig\",\n      \"accounts\": [\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"pool\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"quoteMint\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"funder\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"config\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"params\",\n          \"type\": {\n            \"defined\": \"InitializeVaultWithConfigParams\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"updateFcfsVaultParameters\",\n      \"accounts\": [\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"pool\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"admin\",\n          \"isMut\": false,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"params\",\n          \"type\": {\n            \"defined\": \"UpdateFcfsVaultParams\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"createFcfsConfig\",\n      \"accounts\": [\n        {\n          \"name\": \"config\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"admin\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"configParameters\",\n          \"type\": {\n            \"defined\": \"FcfsConfigParameters\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"closeFcfsConfig\",\n      \"accounts\": [\n        {\n          \"name\": \"config\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"admin\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"rentReceiver\",\n          \"isMut\": true,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": []\n    },\n    {\n      \"name\": \"createMerkleRootConfig\",\n      \"accounts\": [\n        {\n          \"name\": \"vault\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"merkleRootConfig\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"admin\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"params\",\n          \"type\": {\n            \"defined\": \"CreateMerkleRootConfigParams\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"createNewEscrow\",\n      \"accounts\": [\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"pool\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"escrow\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"owner\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"payer\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"escrowFeeReceiver\",\n          \"isMut\": true,\n          \"isSigner\": false,\n          \"isOptional\": true\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": []\n    },\n    {\n      \"name\": \"createPermissionedEscrow\",\n      \"accounts\": [\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"pool\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"escrow\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"owner\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"merkleRootConfig\",\n          \"isMut\": false,\n          \"isSigner\": false,\n          \"docs\": [\n            \"merkle_root_config\"\n          ]\n        },\n        {\n          \"name\": \"payer\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"escrowFeeReceiver\",\n          \"isMut\": true,\n          \"isSigner\": false,\n          \"isOptional\": true\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"maxCap\",\n          \"type\": \"u64\"\n        },\n        {\n          \"name\": \"proof\",\n          \"type\": {\n            \"vec\": {\n              \"array\": [\n                \"u8\",\n                32\n              ]\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"createPermissionedEscrowWithAuthority\",\n      \"accounts\": [\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"pool\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"escrow\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"owner\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"payer\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"maxCap\",\n          \"type\": \"u64\"\n        }\n      ]\n    },\n    {\n      \"name\": \"closeEscrow\",\n      \"accounts\": [\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"escrow\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"owner\",\n          \"isMut\": false,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"rentReceiver\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": []\n    },\n    {\n      \"name\": \"deposit\",\n      \"accounts\": [\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"pool\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"escrow\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"sourceToken\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenVault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenMint\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"owner\",\n          \"isMut\": false,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"maxAmount\",\n          \"type\": \"u64\"\n        }\n      ]\n    },\n    {\n      \"name\": \"withdraw\",\n      \"accounts\": [\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"pool\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"escrow\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"destinationToken\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenVault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenMint\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"owner\",\n          \"isMut\": false,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"amount\",\n          \"type\": \"u64\"\n        }\n      ]\n    },\n    {\n      \"name\": \"withdrawRemainingQuote\",\n      \"accounts\": [\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"pool\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"escrow\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenVault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"destinationToken\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenMint\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"owner\",\n          \"isMut\": false,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": []\n    },\n    {\n      \"name\": \"claimToken\",\n      \"accounts\": [\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"escrow\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenOutVault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"destinationToken\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenMint\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"owner\",\n          \"isMut\": false,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": []\n    },\n    {\n      \"name\": \"fillDlmm\",\n      \"accounts\": [\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenVault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenOutVault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"ammProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"pool\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"binArrayBitmapExtension\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"reserveX\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"reserveY\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenXMint\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenYMint\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"oracle\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenXProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenYProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"dlmmEventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"crankFeeWhitelist\",\n          \"isMut\": false,\n          \"isSigner\": false,\n          \"isOptional\": true\n        },\n        {\n          \"name\": \"crankFeeReceiver\",\n          \"isMut\": true,\n          \"isSigner\": false,\n          \"isOptional\": true\n        },\n        {\n          \"name\": \"cranker\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"maxAmount\",\n          \"type\": \"u64\"\n        }\n      ]\n    },\n    {\n      \"name\": \"fillDynamicAmm\",\n      \"accounts\": [\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenVault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenOutVault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"ammProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"pool\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"aVault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"bVault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"aTokenVault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"bTokenVault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"aVaultLpMint\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"bVaultLpMint\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"aVaultLp\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"bVaultLp\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"adminTokenFee\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"vaultProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"crankFeeWhitelist\",\n          \"isMut\": false,\n          \"isSigner\": false,\n          \"isOptional\": true\n        },\n        {\n          \"name\": \"crankFeeReceiver\",\n          \"isMut\": true,\n          \"isSigner\": false,\n          \"isOptional\": true\n        },\n        {\n          \"name\": \"cranker\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"maxAmount\",\n          \"type\": \"u64\"\n        }\n      ]\n    },\n    {\n      \"name\": \"createCrankFeeWhitelist\",\n      \"accounts\": [\n        {\n          \"name\": \"crankFeeWhitelist\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"cranker\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"admin\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": []\n    },\n    {\n      \"name\": \"closeCrankFeeWhitelist\",\n      \"accounts\": [\n        {\n          \"name\": \"crankFeeWhitelist\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"admin\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"rentReceiver\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": []\n    }\n  ],\n  \"accounts\": [\n    {\n      \"name\": \"crankFeeWhitelist\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"owner\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"padding\",\n            \"type\": {\n              \"array\": [\n                \"u128\",\n                5\n              ]\n            }\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"escrow\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"vault\",\n            \"docs\": [\n              \"vault address\"\n            ],\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"owner\",\n            \"docs\": [\n              \"owner\"\n            ],\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"totalDeposit\",\n            \"docs\": [\n              \"total deposited quote token\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"claimedToken\",\n            \"docs\": [\n              \"Total token that escrow has claimed\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"lastClaimedPoint\",\n            \"docs\": [\n              \"Last claimed timestamp\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"refunded\",\n            \"docs\": [\n              \"Whether owner has claimed for remaining quote token\"\n            ],\n            \"type\": \"u8\"\n          },\n          {\n            \"name\": \"padding1\",\n            \"docs\": [\n              \"padding 1\"\n            ],\n            \"type\": {\n              \"array\": [\n                \"u8\",\n                7\n              ]\n            }\n          },\n          {\n            \"name\": \"maxCap\",\n            \"docs\": [\n              \"Only has meaning in permissioned vault\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"padding2\",\n            \"docs\": [\n              \"padding 2\"\n            ],\n            \"type\": {\n              \"array\": [\n                \"u8\",\n                8\n              ]\n            }\n          },\n          {\n            \"name\": \"padding\",\n            \"type\": {\n              \"array\": [\n                \"u128\",\n                1\n              ]\n            }\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"merkleRootConfig\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"root\",\n            \"docs\": [\n              \"The 256-bit merkle root.\"\n            ],\n            \"type\": {\n              \"array\": [\n                \"u8\",\n                32\n              ]\n            }\n          },\n          {\n            \"name\": \"vault\",\n            \"docs\": [\n              \"vault pubkey that config is belong\"\n            ],\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"version\",\n            \"docs\": [\n              \"version\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"padding\",\n            \"docs\": [\n              \"padding for further use\"\n            ],\n            \"type\": {\n              \"array\": [\n                \"u128\",\n                4\n              ]\n            }\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"prorataVaultConfig\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"maxBuyingCap\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"startVestingDuration\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"endVestingDuration\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"escrowFee\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"activationType\",\n            \"type\": \"u8\"\n          },\n          {\n            \"name\": \"padding\",\n            \"type\": {\n              \"array\": [\n                \"u8\",\n                191\n              ]\n            }\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"fcfsVaultConfig\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"maxDepositingCap\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"startVestingDuration\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"endVestingDuration\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"depositingDurationUntilLastJoinPoint\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"individualDepositingCap\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"escrowFee\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"activationType\",\n            \"type\": \"u8\"\n          },\n          {\n            \"name\": \"padding\",\n            \"type\": {\n              \"array\": [\n                \"u8\",\n                175\n              ]\n            }\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"vault\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"pool\",\n            \"docs\": [\n              \"pool\"\n            ],\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"tokenVault\",\n            \"docs\": [\n              \"reserve quote token\"\n            ],\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"tokenOutVault\",\n            \"docs\": [\n              \"reserve base token\"\n            ],\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"quoteMint\",\n            \"docs\": [\n              \"quote token\"\n            ],\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"baseMint\",\n            \"docs\": [\n              \"base token\"\n            ],\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"base\",\n            \"docs\": [\n              \"base key\"\n            ],\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"owner\",\n            \"docs\": [\n              \"owner key, deprecated field, can re-use in the future\"\n            ],\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"maxBuyingCap\",\n            \"docs\": [\n              \"max buying cap\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"totalDeposit\",\n            \"docs\": [\n              \"total deposited quote token\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"totalEscrow\",\n            \"docs\": [\n              \"total user deposit\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"swappedAmount\",\n            \"docs\": [\n              \"swapped_amount\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"boughtToken\",\n            \"docs\": [\n              \"total bought token\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"totalRefund\",\n            \"docs\": [\n              \"Total quote refund\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"totalClaimedToken\",\n            \"docs\": [\n              \"Total claimed_token\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"startVestingPoint\",\n            \"docs\": [\n              \"Start vesting ts\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"endVestingPoint\",\n            \"docs\": [\n              \"End vesting ts\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"bump\",\n            \"docs\": [\n              \"bump\"\n            ],\n            \"type\": \"u8\"\n          },\n          {\n            \"name\": \"poolType\",\n            \"docs\": [\n              \"pool type\"\n            ],\n            \"type\": \"u8\"\n          },\n          {\n            \"name\": \"vaultMode\",\n            \"docs\": [\n              \"vault mode\"\n            ],\n            \"type\": \"u8\"\n          },\n          {\n            \"name\": \"padding0\",\n            \"docs\": [\n              \"padding 0\"\n            ],\n            \"type\": {\n              \"array\": [\n                \"u8\",\n                5\n              ]\n            }\n          },\n          {\n            \"name\": \"maxDepositingCap\",\n            \"docs\": [\n              \"max depositing cap\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"individualDepositingCap\",\n            \"docs\": [\n              \"individual depositing cap\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"depositingPoint\",\n            \"docs\": [\n              \"depositing point\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"escrowFee\",\n            \"docs\": [\n              \"flat fee when user open an escrow\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"totalEscrowFee\",\n            \"docs\": [\n              \"total escrow fee just for statistic\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"whitelistMode\",\n            \"docs\": [\n              \"deposit whitelist mode\"\n            ],\n            \"type\": \"u8\"\n          },\n          {\n            \"name\": \"activationType\",\n            \"docs\": [\n              \"activation type\"\n            ],\n            \"type\": \"u8\"\n          },\n          {\n            \"name\": \"padding1\",\n            \"docs\": [\n              \"padding 1\"\n            ],\n            \"type\": {\n              \"array\": [\n                \"u8\",\n                6\n              ]\n            }\n          },\n          {\n            \"name\": \"vaultAuthority\",\n            \"docs\": [\n              \"vault authority normally is vault creator, will be able to create merkle root config\"\n            ],\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"padding\",\n            \"type\": {\n              \"array\": [\n                \"u128\",\n                5\n              ]\n            }\n          }\n        ]\n      }\n    }\n  ],\n  \"types\": [\n    {\n      \"name\": \"CreateMerkleRootConfigParams\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"root\",\n            \"docs\": [\n              \"The 256-bit merkle root.\"\n            ],\n            \"type\": {\n              \"array\": [\n                \"u8\",\n                32\n              ]\n            }\n          },\n          {\n            \"name\": \"version\",\n            \"docs\": [\n              \"version\"\n            ],\n            \"type\": \"u64\"\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"FcfsConfigParameters\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"maxDepositingCap\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"startVestingDuration\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"endVestingDuration\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"depositingDurationUntilLastJoinPoint\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"individualDepositingCap\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"escrowFee\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"activationType\",\n            \"type\": \"u8\"\n          },\n          {\n            \"name\": \"index\",\n            \"type\": \"u64\"\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"InitializeFcfsVaultParams\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"poolType\",\n            \"type\": \"u8\"\n          },\n          {\n            \"name\": \"quoteMint\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"baseMint\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"depositingPoint\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"startVestingPoint\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"endVestingPoint\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"maxDepositingCap\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"individualDepositingCap\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"escrowFee\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"whitelistMode\",\n            \"type\": \"u8\"\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"UpdateFcfsVaultParams\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"maxDepositingCap\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"depositingPoint\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"individualDepositingCap\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"startVestingPoint\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"endVestingPoint\",\n            \"type\": \"u64\"\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"ProrataConfigParameters\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"maxBuyingCap\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"startVestingDuration\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"endVestingDuration\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"escrowFee\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"activationType\",\n            \"type\": \"u8\"\n          },\n          {\n            \"name\": \"index\",\n            \"type\": \"u64\"\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"InitializeProrataVaultParams\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"poolType\",\n            \"type\": \"u8\"\n          },\n          {\n            \"name\": \"quoteMint\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"baseMint\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"depositingPoint\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"startVestingPoint\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"endVestingPoint\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"maxBuyingCap\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"escrowFee\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"whitelistMode\",\n            \"type\": \"u8\"\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"InitializeVaultWithConfigParams\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"poolType\",\n            \"type\": \"u8\"\n          },\n          {\n            \"name\": \"quoteMint\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"baseMint\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"whitelistMode\",\n            \"type\": \"u8\"\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"UpdateProrataVaultParams\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"maxBuyingCap\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"startVestingPoint\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"endVestingPoint\",\n            \"type\": \"u64\"\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"ActivationType\",\n      \"docs\": [\n        \"Type of the activation\"\n      ],\n      \"type\": {\n        \"kind\": \"enum\",\n        \"variants\": [\n          {\n            \"name\": \"Slot\"\n          },\n          {\n            \"name\": \"Timestamp\"\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"PoolType\",\n      \"docs\": [\n        \"Type of the Pair. 0 = Permissionless, 1 = Permission. Putting 0 as permissionless for backward compatibility.\"\n      ],\n      \"type\": {\n        \"kind\": \"enum\",\n        \"variants\": [\n          {\n            \"name\": \"Dlmm\"\n          },\n          {\n            \"name\": \"DynamicPool\"\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"VaultMode\",\n      \"docs\": [\n        \"Vault Mode. 0 = Prorata, 1 = FirstComeFirstServe. Putting 0 as Prorata for backward compatibility.\"\n      ],\n      \"type\": {\n        \"kind\": \"enum\",\n        \"variants\": [\n          {\n            \"name\": \"Prorata\"\n          },\n          {\n            \"name\": \"Fcfs\"\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"WhitelistMode\",\n      \"type\": {\n        \"kind\": \"enum\",\n        \"variants\": [\n          {\n            \"name\": \"Permissionless\"\n          },\n          {\n            \"name\": \"PermissionWithMerkleProof\"\n          },\n          {\n            \"name\": \"PermissionWithAuthority\"\n          }\n        ]\n      }\n    }\n  ],\n  \"events\": [\n    {\n      \"name\": \"ProrataVaultCreated\",\n      \"fields\": [\n        {\n          \"name\": \"baseMint\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"quoteMint\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"startVestingPoint\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"endVestingPoint\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"maxBuyingCap\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"pool\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"poolType\",\n          \"type\": \"u8\",\n          \"index\": false\n        },\n        {\n          \"name\": \"escrowFee\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"activationType\",\n          \"type\": \"u8\",\n          \"index\": false\n        }\n      ]\n    },\n    {\n      \"name\": \"FcfsVaultCreated\",\n      \"fields\": [\n        {\n          \"name\": \"baseMint\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"quoteMint\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"startVestingPoint\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"endVestingPoint\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"maxDepositingCap\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"pool\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"poolType\",\n          \"type\": \"u8\",\n          \"index\": false\n        },\n        {\n          \"name\": \"depositingPoint\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"individualDepositingCap\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"escrowFee\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"activationType\",\n          \"type\": \"u8\",\n          \"index\": false\n        }\n      ]\n    },\n    {\n      \"name\": \"EscrowCreated\",\n      \"fields\": [\n        {\n          \"name\": \"vault\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"escrow\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"owner\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"vaultTotalEscrow\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"escrowFee\",\n          \"type\": \"u64\",\n          \"index\": false\n        }\n      ]\n    },\n    {\n      \"name\": \"MerkleRootConfigCreated\",\n      \"fields\": [\n        {\n          \"name\": \"admin\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"config\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"vault\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"version\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"root\",\n          \"type\": {\n            \"array\": [\n              \"u8\",\n              32\n            ]\n          },\n          \"index\": false\n        }\n      ]\n    },\n    {\n      \"name\": \"ProrataVaultParametersUpdated\",\n      \"fields\": [\n        {\n          \"name\": \"vault\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"maxBuyingCap\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"startVestingPoint\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"endVestingPoint\",\n          \"type\": \"u64\",\n          \"index\": false\n        }\n      ]\n    },\n    {\n      \"name\": \"FcfsVaultParametersUpdated\",\n      \"fields\": [\n        {\n          \"name\": \"vault\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"maxDepositingCap\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"startVestingPoint\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"endVestingPoint\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"depositingPoint\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"individualDepositingCap\",\n          \"type\": \"u64\",\n          \"index\": false\n        }\n      ]\n    },\n    {\n      \"name\": \"EscrowRemainingWithdraw\",\n      \"fields\": [\n        {\n          \"name\": \"vault\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"escrow\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"owner\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"amount\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"vaultRemainingDeposit\",\n          \"type\": \"u64\",\n          \"index\": false\n        }\n      ]\n    },\n    {\n      \"name\": \"EscrowWithdraw\",\n      \"fields\": [\n        {\n          \"name\": \"vault\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"escrow\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"owner\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"amount\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"vaultTotalDeposit\",\n          \"type\": \"u64\",\n          \"index\": false\n        }\n      ]\n    },\n    {\n      \"name\": \"SwapFill\",\n      \"fields\": [\n        {\n          \"name\": \"vault\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"pair\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"fillAmount\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"purchasedAmount\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"unfilledAmount\",\n          \"type\": \"u64\",\n          \"index\": false\n        }\n      ]\n    },\n    {\n      \"name\": \"EscrowDeposit\",\n      \"fields\": [\n        {\n          \"name\": \"vault\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"escrow\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"owner\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"amount\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"vaultTotalDeposit\",\n          \"type\": \"u64\",\n          \"index\": false\n        }\n      ]\n    },\n    {\n      \"name\": \"EscrowClosed\",\n      \"fields\": [\n        {\n          \"name\": \"vault\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"escrow\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"owner\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"vaultTotalEscrow\",\n          \"type\": \"u64\",\n          \"index\": false\n        }\n      ]\n    },\n    {\n      \"name\": \"EscrowClaimToken\",\n      \"fields\": [\n        {\n          \"name\": \"vault\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"escrow\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"owner\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"amount\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"vaultTotalClaimedToken\",\n          \"type\": \"u64\",\n          \"index\": false\n        }\n      ]\n    },\n    {\n      \"name\": \"CrankFeeWhitelistCreated\",\n      \"fields\": [\n        {\n          \"name\": \"cranker\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        }\n      ]\n    },\n    {\n      \"name\": \"CrankFeeWhitelistClosed\",\n      \"fields\": [\n        {\n          \"name\": \"cranker\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        }\n      ]\n    }\n  ],\n  \"errors\": [\n    {\n      \"code\": 6000,\n      \"name\": \"TimePointNotInFuture\",\n      \"msg\": \"Time point is not in future\"\n    },\n    {\n      \"code\": 6001,\n      \"name\": \"IncorrectTokenMint\",\n      \"msg\": \"Token mint is incorrect\"\n    },\n    {\n      \"code\": 6002,\n      \"name\": \"IncorrectPairType\",\n      \"msg\": \"Pair is not permissioned\"\n    },\n    {\n      \"code\": 6003,\n      \"name\": \"PoolHasStarted\",\n      \"msg\": \"Pool has started\"\n    },\n    {\n      \"code\": 6004,\n      \"name\": \"NotPermitThisActionInThisTimePoint\",\n      \"msg\": \"This action is not permitted in this time point\"\n    },\n    {\n      \"code\": 6005,\n      \"name\": \"TheSaleIsOngoing\",\n      \"msg\": \"The sale is on going, cannot withdraw\"\n    },\n    {\n      \"code\": 6006,\n      \"name\": \"EscrowIsNotClosable\",\n      \"msg\": \"Escrow is not closable\"\n    },\n    {\n      \"code\": 6007,\n      \"name\": \"TimePointOrdersAreIncorrect\",\n      \"msg\": \"Time point orders are incorrect\"\n    },\n    {\n      \"code\": 6008,\n      \"name\": \"EscrowHasRefuned\",\n      \"msg\": \"Escrow has refunded\"\n    },\n    {\n      \"code\": 6009,\n      \"name\": \"MathOverflow\",\n      \"msg\": \"Math operation overflow\"\n    },\n    {\n      \"code\": 6010,\n      \"name\": \"MaxBuyingCapIsZero\",\n      \"msg\": \"Max buying cap is zero\"\n    },\n    {\n      \"code\": 6011,\n      \"name\": \"MaxAmountIsTooSmall\",\n      \"msg\": \"Max amount is too small\"\n    },\n    {\n      \"code\": 6012,\n      \"name\": \"PoolTypeIsNotSupported\",\n      \"msg\": \"Pool type is not supported\"\n    },\n    {\n      \"code\": 6013,\n      \"name\": \"InvalidAdmin\",\n      \"msg\": \"Invalid admin\"\n    },\n    {\n      \"code\": 6014,\n      \"name\": \"VaultModeIsIncorrect\",\n      \"msg\": \"Vault mode is incorrect\"\n    },\n    {\n      \"code\": 6015,\n      \"name\": \"MaxDepositingCapIsInValid\",\n      \"msg\": \"Max depositing cap is invalid\"\n    },\n    {\n      \"code\": 6016,\n      \"name\": \"VestingDurationIsInValid\",\n      \"msg\": \"Vesting duration is invalid\"\n    },\n    {\n      \"code\": 6017,\n      \"name\": \"DepositAmountIsZero\",\n      \"msg\": \"Deposit amount is zero\"\n    },\n    {\n      \"code\": 6018,\n      \"name\": \"PoolOwnerIsMismatched\",\n      \"msg\": \"Pool owner is mismatched\"\n    },\n    {\n      \"code\": 6019,\n      \"name\": \"RefundAmountIsZero\",\n      \"msg\": \"Refund amount is zero\"\n    },\n    {\n      \"code\": 6020,\n      \"name\": \"DepositingDurationIsInvalid\",\n      \"msg\": \"Depositing duration is invalid\"\n    },\n    {\n      \"code\": 6021,\n      \"name\": \"DepositingTimePointIsInvalid\",\n      \"msg\": \"Depositing time point is invalid\"\n    },\n    {\n      \"code\": 6022,\n      \"name\": \"IndividualDepositingCapIsZero\",\n      \"msg\": \"Individual depositing cap is zero\"\n    },\n    {\n      \"code\": 6023,\n      \"name\": \"InvalidFeeReceiverAccount\",\n      \"msg\": \"Invalid fee receiver account\"\n    },\n    {\n      \"code\": 6024,\n      \"name\": \"NotPermissionedVault\",\n      \"msg\": \"Not permissioned vault\"\n    },\n    {\n      \"code\": 6025,\n      \"name\": \"NotPermitToDoThisAction\",\n      \"msg\": \"Not permit to do this action\"\n    },\n    {\n      \"code\": 6026,\n      \"name\": \"InvalidProof\",\n      \"msg\": \"Invalid Merkle proof\"\n    },\n    {\n      \"code\": 6027,\n      \"name\": \"InvalidActivationType\",\n      \"msg\": \"Invalid activation type\"\n    },\n    {\n      \"code\": 6028,\n      \"name\": \"ActivationTypeIsMismatched\",\n      \"msg\": \"Activation type is mismatched\"\n    },\n    {\n      \"code\": 6029,\n      \"name\": \"InvalidPool\",\n      \"msg\": \"Pool is not connected to the alpha vault\"\n    },\n    {\n      \"code\": 6030,\n      \"name\": \"InvalidCreator\",\n      \"msg\": \"Invalid creator\"\n    },\n    {\n      \"code\": 6031,\n      \"name\": \"PermissionedVaultCannotChargeEscrowFee\",\n      \"msg\": \"Permissioned vault cannot charge escrow fee\"\n    },\n    {\n      \"code\": 6032,\n      \"name\": \"EscrowFeeTooHigh\",\n      \"msg\": \"Escrow fee too high\"\n    },\n    {\n      \"code\": 6033,\n      \"name\": \"LockDurationInvalid\",\n      \"msg\": \"Lock duration is invalid\"\n    },\n    {\n      \"code\": 6034,\n      \"name\": \"MaxBuyingCapIsTooSmall\",\n      \"msg\": \"Max buying cap is too small\"\n    },\n    {\n      \"code\": 6035,\n      \"name\": \"MaxDepositingCapIsTooSmall\",\n      \"msg\": \"Max depositing cap is too small\"\n    },\n    {\n      \"code\": 6036,\n      \"name\": \"InvalidWhitelistWalletMode\",\n      \"msg\": \"Invalid whitelist wallet mode\"\n    },\n    {\n      \"code\": 6037,\n      \"name\": \"InvalidCrankFeeWhitelist\",\n      \"msg\": \"Invalid crank fee whitelist\"\n    },\n    {\n      \"code\": 6038,\n      \"name\": \"MissingFeeReceiver\",\n      \"msg\": \"Missing fee receiver\"\n    }\n  ]\n};\n\nexport const IDL: AlphaVault = {\n  \"version\": \"0.3.2\",\n  \"name\": \"alpha_vault\",\n  \"instructions\": [\n    {\n      \"name\": \"transferVaultAuthority\",\n      \"accounts\": [\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"vaultAuthority\",\n          \"isMut\": false,\n          \"isSigner\": true\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"newAuthority\",\n          \"type\": \"publicKey\"\n        }\n      ]\n    },\n    {\n      \"name\": \"initializeProrataVault\",\n      \"accounts\": [\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"pool\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"funder\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"base\",\n          \"isMut\": false,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"params\",\n          \"type\": {\n            \"defined\": \"InitializeProrataVaultParams\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"initializeVaultWithProrataConfig\",\n      \"accounts\": [\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"pool\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"quoteMint\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"funder\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"config\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"params\",\n          \"type\": {\n            \"defined\": \"InitializeVaultWithConfigParams\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"updateProrataVaultParameters\",\n      \"accounts\": [\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"pool\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"admin\",\n          \"isMut\": false,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"params\",\n          \"type\": {\n            \"defined\": \"UpdateProrataVaultParams\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"createProrataConfig\",\n      \"accounts\": [\n        {\n          \"name\": \"config\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"admin\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"configParameters\",\n          \"type\": {\n            \"defined\": \"ProrataConfigParameters\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"closeProrataConfig\",\n      \"accounts\": [\n        {\n          \"name\": \"config\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"admin\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"rentReceiver\",\n          \"isMut\": true,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": []\n    },\n    {\n      \"name\": \"initializeFcfsVault\",\n      \"accounts\": [\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"pool\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"funder\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"base\",\n          \"isMut\": false,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"params\",\n          \"type\": {\n            \"defined\": \"InitializeFcfsVaultParams\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"initializeVaultWithFcfsConfig\",\n      \"accounts\": [\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"pool\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"quoteMint\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"funder\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"config\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"params\",\n          \"type\": {\n            \"defined\": \"InitializeVaultWithConfigParams\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"updateFcfsVaultParameters\",\n      \"accounts\": [\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"pool\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"admin\",\n          \"isMut\": false,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"params\",\n          \"type\": {\n            \"defined\": \"UpdateFcfsVaultParams\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"createFcfsConfig\",\n      \"accounts\": [\n        {\n          \"name\": \"config\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"admin\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"configParameters\",\n          \"type\": {\n            \"defined\": \"FcfsConfigParameters\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"closeFcfsConfig\",\n      \"accounts\": [\n        {\n          \"name\": \"config\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"admin\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"rentReceiver\",\n          \"isMut\": true,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": []\n    },\n    {\n      \"name\": \"createMerkleRootConfig\",\n      \"accounts\": [\n        {\n          \"name\": \"vault\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"merkleRootConfig\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"admin\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"params\",\n          \"type\": {\n            \"defined\": \"CreateMerkleRootConfigParams\"\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"createNewEscrow\",\n      \"accounts\": [\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"pool\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"escrow\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"owner\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"payer\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"escrowFeeReceiver\",\n          \"isMut\": true,\n          \"isSigner\": false,\n          \"isOptional\": true\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": []\n    },\n    {\n      \"name\": \"createPermissionedEscrow\",\n      \"accounts\": [\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"pool\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"escrow\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"owner\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"merkleRootConfig\",\n          \"isMut\": false,\n          \"isSigner\": false,\n          \"docs\": [\n            \"merkle_root_config\"\n          ]\n        },\n        {\n          \"name\": \"payer\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"escrowFeeReceiver\",\n          \"isMut\": true,\n          \"isSigner\": false,\n          \"isOptional\": true\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"maxCap\",\n          \"type\": \"u64\"\n        },\n        {\n          \"name\": \"proof\",\n          \"type\": {\n            \"vec\": {\n              \"array\": [\n                \"u8\",\n                32\n              ]\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"createPermissionedEscrowWithAuthority\",\n      \"accounts\": [\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"pool\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"escrow\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"owner\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"payer\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"maxCap\",\n          \"type\": \"u64\"\n        }\n      ]\n    },\n    {\n      \"name\": \"closeEscrow\",\n      \"accounts\": [\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"escrow\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"owner\",\n          \"isMut\": false,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"rentReceiver\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": []\n    },\n    {\n      \"name\": \"deposit\",\n      \"accounts\": [\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"pool\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"escrow\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"sourceToken\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenVault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenMint\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"owner\",\n          \"isMut\": false,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"maxAmount\",\n          \"type\": \"u64\"\n        }\n      ]\n    },\n    {\n      \"name\": \"withdraw\",\n      \"accounts\": [\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"pool\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"escrow\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"destinationToken\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenVault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenMint\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"owner\",\n          \"isMut\": false,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"amount\",\n          \"type\": \"u64\"\n        }\n      ]\n    },\n    {\n      \"name\": \"withdrawRemainingQuote\",\n      \"accounts\": [\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"pool\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"escrow\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenVault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"destinationToken\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenMint\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"owner\",\n          \"isMut\": false,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": []\n    },\n    {\n      \"name\": \"claimToken\",\n      \"accounts\": [\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"escrow\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenOutVault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"destinationToken\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenMint\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"owner\",\n          \"isMut\": false,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": []\n    },\n    {\n      \"name\": \"fillDlmm\",\n      \"accounts\": [\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenVault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenOutVault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"ammProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"pool\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"binArrayBitmapExtension\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"reserveX\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"reserveY\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenXMint\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenYMint\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"oracle\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenXProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenYProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"dlmmEventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"crankFeeWhitelist\",\n          \"isMut\": false,\n          \"isSigner\": false,\n          \"isOptional\": true\n        },\n        {\n          \"name\": \"crankFeeReceiver\",\n          \"isMut\": true,\n          \"isSigner\": false,\n          \"isOptional\": true\n        },\n        {\n          \"name\": \"cranker\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"maxAmount\",\n          \"type\": \"u64\"\n        }\n      ]\n    },\n    {\n      \"name\": \"fillDynamicAmm\",\n      \"accounts\": [\n        {\n          \"name\": \"vault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenVault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenOutVault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"ammProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"pool\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"aVault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"bVault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"aTokenVault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"bTokenVault\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"aVaultLpMint\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"bVaultLpMint\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"aVaultLp\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"bVaultLp\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"adminTokenFee\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"vaultProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"tokenProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"crankFeeWhitelist\",\n          \"isMut\": false,\n          \"isSigner\": false,\n          \"isOptional\": true\n        },\n        {\n          \"name\": \"crankFeeReceiver\",\n          \"isMut\": true,\n          \"isSigner\": false,\n          \"isOptional\": true\n        },\n        {\n          \"name\": \"cranker\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": [\n        {\n          \"name\": \"maxAmount\",\n          \"type\": \"u64\"\n        }\n      ]\n    },\n    {\n      \"name\": \"createCrankFeeWhitelist\",\n      \"accounts\": [\n        {\n          \"name\": \"crankFeeWhitelist\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"cranker\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"admin\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"systemProgram\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": []\n    },\n    {\n      \"name\": \"closeCrankFeeWhitelist\",\n      \"accounts\": [\n        {\n          \"name\": \"crankFeeWhitelist\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"admin\",\n          \"isMut\": true,\n          \"isSigner\": true\n        },\n        {\n          \"name\": \"rentReceiver\",\n          \"isMut\": true,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"eventAuthority\",\n          \"isMut\": false,\n          \"isSigner\": false\n        },\n        {\n          \"name\": \"program\",\n          \"isMut\": false,\n          \"isSigner\": false\n        }\n      ],\n      \"args\": []\n    }\n  ],\n  \"accounts\": [\n    {\n      \"name\": \"crankFeeWhitelist\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"owner\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"padding\",\n            \"type\": {\n              \"array\": [\n                \"u128\",\n                5\n              ]\n            }\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"escrow\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"vault\",\n            \"docs\": [\n              \"vault address\"\n            ],\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"owner\",\n            \"docs\": [\n              \"owner\"\n            ],\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"totalDeposit\",\n            \"docs\": [\n              \"total deposited quote token\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"claimedToken\",\n            \"docs\": [\n              \"Total token that escrow has claimed\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"lastClaimedPoint\",\n            \"docs\": [\n              \"Last claimed timestamp\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"refunded\",\n            \"docs\": [\n              \"Whether owner has claimed for remaining quote token\"\n            ],\n            \"type\": \"u8\"\n          },\n          {\n            \"name\": \"padding1\",\n            \"docs\": [\n              \"padding 1\"\n            ],\n            \"type\": {\n              \"array\": [\n                \"u8\",\n                7\n              ]\n            }\n          },\n          {\n            \"name\": \"maxCap\",\n            \"docs\": [\n              \"Only has meaning in permissioned vault\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"padding2\",\n            \"docs\": [\n              \"padding 2\"\n            ],\n            \"type\": {\n              \"array\": [\n                \"u8\",\n                8\n              ]\n            }\n          },\n          {\n            \"name\": \"padding\",\n            \"type\": {\n              \"array\": [\n                \"u128\",\n                1\n              ]\n            }\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"merkleRootConfig\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"root\",\n            \"docs\": [\n              \"The 256-bit merkle root.\"\n            ],\n            \"type\": {\n              \"array\": [\n                \"u8\",\n                32\n              ]\n            }\n          },\n          {\n            \"name\": \"vault\",\n            \"docs\": [\n              \"vault pubkey that config is belong\"\n            ],\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"version\",\n            \"docs\": [\n              \"version\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"padding\",\n            \"docs\": [\n              \"padding for further use\"\n            ],\n            \"type\": {\n              \"array\": [\n                \"u128\",\n                4\n              ]\n            }\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"prorataVaultConfig\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"maxBuyingCap\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"startVestingDuration\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"endVestingDuration\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"escrowFee\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"activationType\",\n            \"type\": \"u8\"\n          },\n          {\n            \"name\": \"padding\",\n            \"type\": {\n              \"array\": [\n                \"u8\",\n                191\n              ]\n            }\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"fcfsVaultConfig\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"maxDepositingCap\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"startVestingDuration\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"endVestingDuration\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"depositingDurationUntilLastJoinPoint\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"individualDepositingCap\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"escrowFee\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"activationType\",\n            \"type\": \"u8\"\n          },\n          {\n            \"name\": \"padding\",\n            \"type\": {\n              \"array\": [\n                \"u8\",\n                175\n              ]\n            }\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"vault\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"pool\",\n            \"docs\": [\n              \"pool\"\n            ],\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"tokenVault\",\n            \"docs\": [\n              \"reserve quote token\"\n            ],\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"tokenOutVault\",\n            \"docs\": [\n              \"reserve base token\"\n            ],\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"quoteMint\",\n            \"docs\": [\n              \"quote token\"\n            ],\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"baseMint\",\n            \"docs\": [\n              \"base token\"\n            ],\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"base\",\n            \"docs\": [\n              \"base key\"\n            ],\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"owner\",\n            \"docs\": [\n              \"owner key, deprecated field, can re-use in the future\"\n            ],\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"maxBuyingCap\",\n            \"docs\": [\n              \"max buying cap\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"totalDeposit\",\n            \"docs\": [\n              \"total deposited quote token\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"totalEscrow\",\n            \"docs\": [\n              \"total user deposit\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"swappedAmount\",\n            \"docs\": [\n              \"swapped_amount\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"boughtToken\",\n            \"docs\": [\n              \"total bought token\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"totalRefund\",\n            \"docs\": [\n              \"Total quote refund\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"totalClaimedToken\",\n            \"docs\": [\n              \"Total claimed_token\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"startVestingPoint\",\n            \"docs\": [\n              \"Start vesting ts\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"endVestingPoint\",\n            \"docs\": [\n              \"End vesting ts\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"bump\",\n            \"docs\": [\n              \"bump\"\n            ],\n            \"type\": \"u8\"\n          },\n          {\n            \"name\": \"poolType\",\n            \"docs\": [\n              \"pool type\"\n            ],\n            \"type\": \"u8\"\n          },\n          {\n            \"name\": \"vaultMode\",\n            \"docs\": [\n              \"vault mode\"\n            ],\n            \"type\": \"u8\"\n          },\n          {\n            \"name\": \"padding0\",\n            \"docs\": [\n              \"padding 0\"\n            ],\n            \"type\": {\n              \"array\": [\n                \"u8\",\n                5\n              ]\n            }\n          },\n          {\n            \"name\": \"maxDepositingCap\",\n            \"docs\": [\n              \"max depositing cap\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"individualDepositingCap\",\n            \"docs\": [\n              \"individual depositing cap\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"depositingPoint\",\n            \"docs\": [\n              \"depositing point\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"escrowFee\",\n            \"docs\": [\n              \"flat fee when user open an escrow\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"totalEscrowFee\",\n            \"docs\": [\n              \"total escrow fee just for statistic\"\n            ],\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"whitelistMode\",\n            \"docs\": [\n              \"deposit whitelist mode\"\n            ],\n            \"type\": \"u8\"\n          },\n          {\n            \"name\": \"activationType\",\n            \"docs\": [\n              \"activation type\"\n            ],\n            \"type\": \"u8\"\n          },\n          {\n            \"name\": \"padding1\",\n            \"docs\": [\n              \"padding 1\"\n            ],\n            \"type\": {\n              \"array\": [\n                \"u8\",\n                6\n              ]\n            }\n          },\n          {\n            \"name\": \"vaultAuthority\",\n            \"docs\": [\n              \"vault authority normally is vault creator, will be able to create merkle root config\"\n            ],\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"padding\",\n            \"type\": {\n              \"array\": [\n                \"u128\",\n                5\n              ]\n            }\n          }\n        ]\n      }\n    }\n  ],\n  \"types\": [\n    {\n      \"name\": \"CreateMerkleRootConfigParams\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"root\",\n            \"docs\": [\n              \"The 256-bit merkle root.\"\n            ],\n            \"type\": {\n              \"array\": [\n                \"u8\",\n                32\n              ]\n            }\n          },\n          {\n            \"name\": \"version\",\n            \"docs\": [\n              \"version\"\n            ],\n            \"type\": \"u64\"\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"FcfsConfigParameters\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"maxDepositingCap\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"startVestingDuration\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"endVestingDuration\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"depositingDurationUntilLastJoinPoint\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"individualDepositingCap\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"escrowFee\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"activationType\",\n            \"type\": \"u8\"\n          },\n          {\n            \"name\": \"index\",\n            \"type\": \"u64\"\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"InitializeFcfsVaultParams\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"poolType\",\n            \"type\": \"u8\"\n          },\n          {\n            \"name\": \"quoteMint\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"baseMint\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"depositingPoint\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"startVestingPoint\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"endVestingPoint\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"maxDepositingCap\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"individualDepositingCap\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"escrowFee\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"whitelistMode\",\n            \"type\": \"u8\"\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"UpdateFcfsVaultParams\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"maxDepositingCap\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"depositingPoint\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"individualDepositingCap\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"startVestingPoint\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"endVestingPoint\",\n            \"type\": \"u64\"\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"ProrataConfigParameters\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"maxBuyingCap\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"startVestingDuration\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"endVestingDuration\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"escrowFee\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"activationType\",\n            \"type\": \"u8\"\n          },\n          {\n            \"name\": \"index\",\n            \"type\": \"u64\"\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"InitializeProrataVaultParams\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"poolType\",\n            \"type\": \"u8\"\n          },\n          {\n            \"name\": \"quoteMint\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"baseMint\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"depositingPoint\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"startVestingPoint\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"endVestingPoint\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"maxBuyingCap\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"escrowFee\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"whitelistMode\",\n            \"type\": \"u8\"\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"InitializeVaultWithConfigParams\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"poolType\",\n            \"type\": \"u8\"\n          },\n          {\n            \"name\": \"quoteMint\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"baseMint\",\n            \"type\": \"publicKey\"\n          },\n          {\n            \"name\": \"whitelistMode\",\n            \"type\": \"u8\"\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"UpdateProrataVaultParams\",\n      \"type\": {\n        \"kind\": \"struct\",\n        \"fields\": [\n          {\n            \"name\": \"maxBuyingCap\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"startVestingPoint\",\n            \"type\": \"u64\"\n          },\n          {\n            \"name\": \"endVestingPoint\",\n            \"type\": \"u64\"\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"ActivationType\",\n      \"docs\": [\n        \"Type of the activation\"\n      ],\n      \"type\": {\n        \"kind\": \"enum\",\n        \"variants\": [\n          {\n            \"name\": \"Slot\"\n          },\n          {\n            \"name\": \"Timestamp\"\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"PoolType\",\n      \"docs\": [\n        \"Type of the Pair. 0 = Permissionless, 1 = Permission. Putting 0 as permissionless for backward compatibility.\"\n      ],\n      \"type\": {\n        \"kind\": \"enum\",\n        \"variants\": [\n          {\n            \"name\": \"Dlmm\"\n          },\n          {\n            \"name\": \"DynamicPool\"\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"VaultMode\",\n      \"docs\": [\n        \"Vault Mode. 0 = Prorata, 1 = FirstComeFirstServe. Putting 0 as Prorata for backward compatibility.\"\n      ],\n      \"type\": {\n        \"kind\": \"enum\",\n        \"variants\": [\n          {\n            \"name\": \"Prorata\"\n          },\n          {\n            \"name\": \"Fcfs\"\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"WhitelistMode\",\n      \"type\": {\n        \"kind\": \"enum\",\n        \"variants\": [\n          {\n            \"name\": \"Permissionless\"\n          },\n          {\n            \"name\": \"PermissionWithMerkleProof\"\n          },\n          {\n            \"name\": \"PermissionWithAuthority\"\n          }\n        ]\n      }\n    }\n  ],\n  \"events\": [\n    {\n      \"name\": \"ProrataVaultCreated\",\n      \"fields\": [\n        {\n          \"name\": \"baseMint\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"quoteMint\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"startVestingPoint\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"endVestingPoint\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"maxBuyingCap\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"pool\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"poolType\",\n          \"type\": \"u8\",\n          \"index\": false\n        },\n        {\n          \"name\": \"escrowFee\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"activationType\",\n          \"type\": \"u8\",\n          \"index\": false\n        }\n      ]\n    },\n    {\n      \"name\": \"FcfsVaultCreated\",\n      \"fields\": [\n        {\n          \"name\": \"baseMint\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"quoteMint\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"startVestingPoint\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"endVestingPoint\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"maxDepositingCap\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"pool\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"poolType\",\n          \"type\": \"u8\",\n          \"index\": false\n        },\n        {\n          \"name\": \"depositingPoint\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"individualDepositingCap\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"escrowFee\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"activationType\",\n          \"type\": \"u8\",\n          \"index\": false\n        }\n      ]\n    },\n    {\n      \"name\": \"EscrowCreated\",\n      \"fields\": [\n        {\n          \"name\": \"vault\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"escrow\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"owner\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"vaultTotalEscrow\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"escrowFee\",\n          \"type\": \"u64\",\n          \"index\": false\n        }\n      ]\n    },\n    {\n      \"name\": \"MerkleRootConfigCreated\",\n      \"fields\": [\n        {\n          \"name\": \"admin\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"config\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"vault\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"version\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"root\",\n          \"type\": {\n            \"array\": [\n              \"u8\",\n              32\n            ]\n          },\n          \"index\": false\n        }\n      ]\n    },\n    {\n      \"name\": \"ProrataVaultParametersUpdated\",\n      \"fields\": [\n        {\n          \"name\": \"vault\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"maxBuyingCap\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"startVestingPoint\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"endVestingPoint\",\n          \"type\": \"u64\",\n          \"index\": false\n        }\n      ]\n    },\n    {\n      \"name\": \"FcfsVaultParametersUpdated\",\n      \"fields\": [\n        {\n          \"name\": \"vault\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"maxDepositingCap\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"startVestingPoint\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"endVestingPoint\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"depositingPoint\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"individualDepositingCap\",\n          \"type\": \"u64\",\n          \"index\": false\n        }\n      ]\n    },\n    {\n      \"name\": \"EscrowRemainingWithdraw\",\n      \"fields\": [\n        {\n          \"name\": \"vault\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"escrow\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"owner\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"amount\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"vaultRemainingDeposit\",\n          \"type\": \"u64\",\n          \"index\": false\n        }\n      ]\n    },\n    {\n      \"name\": \"EscrowWithdraw\",\n      \"fields\": [\n        {\n          \"name\": \"vault\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"escrow\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"owner\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"amount\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"vaultTotalDeposit\",\n          \"type\": \"u64\",\n          \"index\": false\n        }\n      ]\n    },\n    {\n      \"name\": \"SwapFill\",\n      \"fields\": [\n        {\n          \"name\": \"vault\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"pair\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"fillAmount\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"purchasedAmount\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"unfilledAmount\",\n          \"type\": \"u64\",\n          \"index\": false\n        }\n      ]\n    },\n    {\n      \"name\": \"EscrowDeposit\",\n      \"fields\": [\n        {\n          \"name\": \"vault\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"escrow\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"owner\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"amount\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"vaultTotalDeposit\",\n          \"type\": \"u64\",\n          \"index\": false\n        }\n      ]\n    },\n    {\n      \"name\": \"EscrowClosed\",\n      \"fields\": [\n        {\n          \"name\": \"vault\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"escrow\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"owner\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"vaultTotalEscrow\",\n          \"type\": \"u64\",\n          \"index\": false\n        }\n      ]\n    },\n    {\n      \"name\": \"EscrowClaimToken\",\n      \"fields\": [\n        {\n          \"name\": \"vault\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"escrow\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"owner\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        },\n        {\n          \"name\": \"amount\",\n          \"type\": \"u64\",\n          \"index\": false\n        },\n        {\n          \"name\": \"vaultTotalClaimedToken\",\n          \"type\": \"u64\",\n          \"index\": false\n        }\n      ]\n    },\n    {\n      \"name\": \"CrankFeeWhitelistCreated\",\n      \"fields\": [\n        {\n          \"name\": \"cranker\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        }\n      ]\n    },\n    {\n      \"name\": \"CrankFeeWhitelistClosed\",\n      \"fields\": [\n        {\n          \"name\": \"cranker\",\n          \"type\": \"publicKey\",\n          \"index\": false\n        }\n      ]\n    }\n  ],\n  \"errors\": [\n    {\n      \"code\": 6000,\n      \"name\": \"TimePointNotInFuture\",\n      \"msg\": \"Time point is not in future\"\n    },\n    {\n      \"code\": 6001,\n      \"name\": \"IncorrectTokenMint\",\n      \"msg\": \"Token mint is incorrect\"\n    },\n    {\n      \"code\": 6002,\n      \"name\": \"IncorrectPairType\",\n      \"msg\": \"Pair is not permissioned\"\n    },\n    {\n      \"code\": 6003,\n      \"name\": \"PoolHasStarted\",\n      \"msg\": \"Pool has started\"\n    },\n    {\n      \"code\": 6004,\n      \"name\": \"NotPermitThisActionInThisTimePoint\",\n      \"msg\": \"This action is not permitted in this time point\"\n    },\n    {\n      \"code\": 6005,\n      \"name\": \"TheSaleIsOngoing\",\n      \"msg\": \"The sale is on going, cannot withdraw\"\n    },\n    {\n      \"code\": 6006,\n      \"name\": \"EscrowIsNotClosable\",\n      \"msg\": \"Escrow is not closable\"\n    },\n    {\n      \"code\": 6007,\n      \"name\": \"TimePointOrdersAreIncorrect\",\n      \"msg\": \"Time point orders are incorrect\"\n    },\n    {\n      \"code\": 6008,\n      \"name\": \"EscrowHasRefuned\",\n      \"msg\": \"Escrow has refunded\"\n    },\n    {\n      \"code\": 6009,\n      \"name\": \"MathOverflow\",\n      \"msg\": \"Math operation overflow\"\n    },\n    {\n      \"code\": 6010,\n      \"name\": \"MaxBuyingCapIsZero\",\n      \"msg\": \"Max buying cap is zero\"\n    },\n    {\n      \"code\": 6011,\n      \"name\": \"MaxAmountIsTooSmall\",\n      \"msg\": \"Max amount is too small\"\n    },\n    {\n      \"code\": 6012,\n      \"name\": \"PoolTypeIsNotSupported\",\n      \"msg\": \"Pool type is not supported\"\n    },\n    {\n      \"code\": 6013,\n      \"name\": \"InvalidAdmin\",\n      \"msg\": \"Invalid admin\"\n    },\n    {\n      \"code\": 6014,\n      \"name\": \"VaultModeIsIncorrect\",\n      \"msg\": \"Vault mode is incorrect\"\n    },\n    {\n      \"code\": 6015,\n      \"name\": \"MaxDepositingCapIsInValid\",\n      \"msg\": \"Max depositing cap is invalid\"\n    },\n    {\n      \"code\": 6016,\n      \"name\": \"VestingDurationIsInValid\",\n      \"msg\": \"Vesting duration is invalid\"\n    },\n    {\n      \"code\": 6017,\n      \"name\": \"DepositAmountIsZero\",\n      \"msg\": \"Deposit amount is zero\"\n    },\n    {\n      \"code\": 6018,\n      \"name\": \"PoolOwnerIsMismatched\",\n      \"msg\": \"Pool owner is mismatched\"\n    },\n    {\n      \"code\": 6019,\n      \"name\": \"RefundAmountIsZero\",\n      \"msg\": \"Refund amount is zero\"\n    },\n    {\n      \"code\": 6020,\n      \"name\": \"DepositingDurationIsInvalid\",\n      \"msg\": \"Depositing duration is invalid\"\n    },\n    {\n      \"code\": 6021,\n      \"name\": \"DepositingTimePointIsInvalid\",\n      \"msg\": \"Depositing time point is invalid\"\n    },\n    {\n      \"code\": 6022,\n      \"name\": \"IndividualDepositingCapIsZero\",\n      \"msg\": \"Individual depositing cap is zero\"\n    },\n    {\n      \"code\": 6023,\n      \"name\": \"InvalidFeeReceiverAccount\",\n      \"msg\": \"Invalid fee receiver account\"\n    },\n    {\n      \"code\": 6024,\n      \"name\": \"NotPermissionedVault\",\n      \"msg\": \"Not permissioned vault\"\n    },\n    {\n      \"code\": 6025,\n      \"name\": \"NotPermitToDoThisAction\",\n      \"msg\": \"Not permit to do this action\"\n    },\n    {\n      \"code\": 6026,\n      \"name\": \"InvalidProof\",\n      \"msg\": \"Invalid Merkle proof\"\n    },\n    {\n      \"code\": 6027,\n      \"name\": \"InvalidActivationType\",\n      \"msg\": \"Invalid activation type\"\n    },\n    {\n      \"code\": 6028,\n      \"name\": \"ActivationTypeIsMismatched\",\n      \"msg\": \"Activation type is mismatched\"\n    },\n    {\n      \"code\": 6029,\n      \"name\": \"InvalidPool\",\n      \"msg\": \"Pool is not connected to the alpha vault\"\n    },\n    {\n      \"code\": 6030,\n      \"name\": \"InvalidCreator\",\n      \"msg\": \"Invalid creator\"\n    },\n    {\n      \"code\": 6031,\n      \"name\": \"PermissionedVaultCannotChargeEscrowFee\",\n      \"msg\": \"Permissioned vault cannot charge escrow fee\"\n    },\n    {\n      \"code\": 6032,\n      \"name\": \"EscrowFeeTooHigh\",\n      \"msg\": \"Escrow fee too high\"\n    },\n    {\n      \"code\": 6033,\n      \"name\": \"LockDurationInvalid\",\n      \"msg\": \"Lock duration is invalid\"\n    },\n    {\n      \"code\": 6034,\n      \"name\": \"MaxBuyingCapIsTooSmall\",\n      \"msg\": \"Max buying cap is too small\"\n    },\n    {\n      \"code\": 6035,\n      \"name\": \"MaxDepositingCapIsTooSmall\",\n      \"msg\": \"Max depositing cap is too small\"\n    },\n    {\n      \"code\": 6036,\n      \"name\": \"InvalidWhitelistWalletMode\",\n      \"msg\": \"Invalid whitelist wallet mode\"\n    },\n    {\n      \"code\": 6037,\n      \"name\": \"InvalidCrankFeeWhitelist\",\n      \"msg\": \"Invalid crank fee whitelist\"\n    },\n    {\n      \"code\": 6038,\n      \"name\": \"MissingFeeReceiver\",\n      \"msg\": \"Missing fee receiver\"\n    }\n  ]\n};\n","import { BN, web3 } from \"@coral-xyz/anchor\";\nimport { sha256 } from \"js-sha256\";\n\nimport { MerkleTree } from \"./merkle-tree\";\n\nexport class BalanceTree {\n  private readonly _tree: MerkleTree;\n  constructor(balances: { account: web3.PublicKey; maxCap: BN }[]) {\n    this._tree = new MerkleTree(\n      balances.map(({ account, maxCap }, index) => {\n        return BalanceTree.toNode(account, maxCap);\n      })\n    );\n  }\n\n  static verifyProof(\n    account: web3.PublicKey,\n    maxCap: BN,\n    proof: Buffer[],\n    root: Buffer\n  ): boolean {\n    let pair = BalanceTree.toNode(account, maxCap);\n    for (const item of proof) {\n      pair = MerkleTree.combinedHash(pair, item);\n    }\n\n    return pair.equals(root);\n  }\n\n  // keccak256(abi.encode(index, account, amount))\n  static toNode(account: web3.PublicKey, maxCap: BN): Buffer {\n    const buf = Buffer.concat([\n      account.toBuffer(),\n      new BN(maxCap).toArrayLike(Buffer, \"le\", 8),\n    ]);\n\n    const hashedBuff = Buffer.from(sha256(buf), \"hex\");\n    const bufWithPrefix = Buffer.concat([Buffer.from([0]), hashedBuff]);\n\n    return Buffer.from(sha256(bufWithPrefix), \"hex\");\n  }\n\n  getHexRoot(): string {\n    return this._tree.getHexRoot();\n  }\n\n  // returns the hex bytes32 values of the proof\n  getHexProof(account: web3.PublicKey, maxCap: BN): string[] {\n    return this._tree.getHexProof(BalanceTree.toNode(account, maxCap));\n  }\n\n  getRoot(): Buffer {\n    return this._tree.getRoot();\n  }\n\n  getProof(account: web3.PublicKey, maxCap: BN): Buffer[] {\n    return this._tree.getProof(BalanceTree.toNode(account, maxCap));\n  }\n}\n","import { sha256 } from \"js-sha256\";\nimport invariant from \"tiny-invariant\";\n\nfunction getPairElement(idx: number, layer: Buffer[]): Buffer | null {\n  const pairIdx = idx % 2 === 0 ? idx + 1 : idx - 1;\n\n  if (pairIdx < layer.length) {\n    const pairEl = layer[pairIdx];\n    invariant(pairEl, \"pairEl\");\n    return pairEl;\n  } else {\n    return null;\n  }\n}\n\nfunction bufDedup(elements: Buffer[]): Buffer[] {\n  return elements.filter((el, idx) => {\n    return idx === 0 || !elements[idx - 1]?.equals(el);\n  });\n}\n\nfunction bufArrToHexArr(arr: Buffer[]): string[] {\n  if (arr.some((el) => !Buffer.isBuffer(el))) {\n    throw new Error(\"Array is not an array of buffers\");\n  }\n\n  return arr.map((el) => \"0x\" + el.toString(\"hex\"));\n}\n\nfunction sortAndConcat(...args: Buffer[]): Buffer {\n  return Buffer.concat([\n    Buffer.from([1]),\n    Buffer.concat([...args].sort(Buffer.compare.bind(null))),\n  ]);\n}\n\nexport class MerkleTree {\n  private readonly _elements: Buffer[];\n  private readonly _bufferElementPositionIndex: {\n    [hexElement: string]: number;\n  };\n  private readonly _layers: Buffer[][];\n\n  constructor(elements: Buffer[]) {\n    this._elements = [...elements];\n    // Sort elements\n    this._elements.sort(Buffer.compare.bind(null));\n    // Deduplicate elements\n    this._elements = bufDedup(this._elements);\n\n    this._bufferElementPositionIndex = this._elements.reduce<{\n      [hexElement: string]: number;\n    }>((memo, el, index) => {\n      memo[el.toString(\"hex\")] = index;\n      return memo;\n    }, {});\n\n    // Create layers\n    this._layers = this.getLayers(this._elements);\n  }\n\n  getLayers(elements: Buffer[]): Buffer[][] {\n    if (elements.length === 0) {\n      throw new Error(\"empty tree\");\n    }\n\n    const layers = [];\n    layers.push(elements);\n\n    // Get next layer until we reach the root\n    while ((layers[layers.length - 1]?.length ?? 0) > 1) {\n      const nextLayerIndex: Buffer[] | undefined = layers[layers.length - 1];\n      invariant(nextLayerIndex, \"nextLayerIndex\");\n      layers.push(this.getNextLayer(nextLayerIndex));\n    }\n\n    return layers;\n  }\n\n  getNextLayer(elements: Buffer[]): Buffer[] {\n    return elements.reduce<Buffer[]>((layer, el, idx, arr) => {\n      if (idx % 2 === 0) {\n        // Hash the current element with its pair element\n        const pairEl = arr[idx + 1];\n        layer.push(MerkleTree.combinedHash(el, pairEl));\n      }\n\n      return layer;\n    }, []);\n  }\n\n  static combinedHash(first: Buffer, second: Buffer | undefined): Buffer {\n    if (!first) {\n      invariant(second, \"second element of pair must exist\");\n      return second;\n    }\n    if (!second) {\n      invariant(first, \"first element of pair must exist\");\n      return first;\n    }\n\n    return Buffer.from(sha256(sortAndConcat(first, second)), \"hex\");\n  }\n\n  getRoot(): Buffer {\n    const root = this._layers[this._layers.length - 1]?.[0];\n    invariant(root, \"root\");\n    return root;\n  }\n\n  getHexRoot(): string {\n    return this.getRoot().toString(\"hex\");\n  }\n\n  getProof(el: Buffer): Buffer[] {\n    const initialIdx = this._bufferElementPositionIndex[el.toString(\"hex\")];\n\n    if (typeof initialIdx !== \"number\") {\n      throw new Error(\"Element does not exist in Merkle tree\");\n    }\n\n    let idx = initialIdx;\n    return this._layers.reduce((proof, layer) => {\n      const pairElement = getPairElement(idx, layer);\n\n      if (pairElement) {\n        proof.push(pairElement);\n      }\n\n      idx = Math.floor(idx / 2);\n\n      return proof;\n    }, []);\n  }\n\n  getHexProof(el: Buffer): string[] {\n    const proof = this.getProof(el);\n\n    return bufArrToHexArr(proof);\n  }\n}\n","import { AlphaVault } from \"./alpha-vault\";\n\nexport default AlphaVault;\nexport * from \"./alpha-vault/type\";\nexport * from \"./alpha-vault/constant\";\nexport * from \"./alpha-vault/idl\";\n"]}