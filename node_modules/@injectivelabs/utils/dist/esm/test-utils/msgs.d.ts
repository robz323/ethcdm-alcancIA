import { Network, NetworkEndpoints } from '@injectivelabs/networks';
import { ChainId, Coin, EthereumChainId } from '@injectivelabs/ts-types';
export declare const prepareEip712: <T>({ messages, gas, network, injectiveAddress, ethereumAddress, endpoints, accountNumber, sequence, timeoutHeight, memo, }: {
    ethereumAddress?: string;
    messages: T;
    network?: Network;
    gas?: number | string;
    accountNumber?: number;
    sequence?: number;
    timeoutHeight?: number;
    memo?: string;
    endpoints?: Partial<NetworkEndpoints>;
    injectiveAddress?: string;
}) => {
    endpoints: NetworkEndpoints;
    eip712Args: {
        msgs: any;
        tx: {
            memo: string;
            chainId: ChainId;
            sequence: string;
            ethereumChainId: EthereumChainId;
            accountNumber: string;
            timeoutHeight: string;
        };
        ethereumChainId: EthereumChainId;
        fee: {
            amount: Coin[];
            gas: string;
            payer: string;
        };
    };
    prepareEip712Request: {
        chainId: EthereumChainId;
        message: any[];
        address: string;
        memo: string;
        sequence: number;
        accountNumber: number;
        ethereumChainId: EthereumChainId;
        timeoutHeight: number;
    };
};
