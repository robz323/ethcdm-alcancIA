import { ChainId, type ExtendedChain } from '@lifi/types';
import type { SDKProvider } from './core/types.js';
import type { RPCUrls, SDKBaseConfig, SDKConfig } from './types/internal.js';
export declare const config: {
    loading: Promise<void>;
    get(): SDKBaseConfig;
    set(options: SDKConfig): SDKBaseConfig;
    setProviders(providers: SDKProvider[]): void;
    setChains(chains: ExtendedChain[]): void;
    getChains(): Promise<ExtendedChain[]>;
    getChainById(chainId: ChainId): Promise<ExtendedChain>;
    setRPCUrls(rpcUrls: RPCUrls, skipChains?: ChainId[]): void;
    getRPCUrls(): Promise<Partial<Record<ChainId, string[]>>>;
};
//# sourceMappingURL=config.d.ts.map