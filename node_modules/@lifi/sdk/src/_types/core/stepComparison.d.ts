import type { LiFiStep } from '@lifi/types';
import type { StatusManager } from './StatusManager.js';
import type { ExecutionOptions } from './types.js';
/**
 * This method checks whether the new and updated Step meets the required exchange rate conditions.
 * If yes it returns the updated Step.
 * If no and if user interaction is allowed it triggers the acceptExchangeRateUpdateHook. If no user interaction is allowed it aborts.
 * @param statusManager
 * @param oldStep
 * @param newStep
 * @param settings
 * @param allowUserInteraction
 * @param executionOptions
 * @returns Return LiFiStep
 */
export declare const stepComparison: (statusManager: StatusManager, oldStep: LiFiStep, newStep: LiFiStep, allowUserInteraction: boolean, executionOptions?: ExecutionOptions) => Promise<LiFiStep>;
//# sourceMappingURL=stepComparison.d.ts.map