import type { ExecutionOptions, RouteExtended, StepExecutor } from './types.js';
export interface ExecutionData {
    route: RouteExtended;
    executors: StepExecutor[];
    executionOptions?: ExecutionOptions;
    promise?: Promise<RouteExtended>;
}
export type ExecutionStateParams = Omit<ExecutionData, 'executors'>;
export interface ExecutionState {
    state: Partial<Record<string, ExecutionData>>;
    get(routeId: string): ExecutionData | undefined;
    create(params: ExecutionStateParams): ExecutionData;
    update(params: ExecutionStateParams): void;
    delete(routeId: string): void;
}
export declare const executionState: ExecutionState;
//# sourceMappingURL=executionState.d.ts.map