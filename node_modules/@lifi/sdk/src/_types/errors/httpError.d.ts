import type { UnavailableRoutes } from '@lifi/types';
import type { ExtendedRequestInit } from '../types/request.js';
import { BaseError } from './baseError.js';
import { ErrorName } from './constants.js';
interface ServerErrorResponseBody {
    code: number;
    message: string;
    errors?: UnavailableRoutes;
}
export declare class HTTPError extends BaseError {
    response: Response;
    status: number;
    url: RequestInfo | URL;
    fetchOptions: ExtendedRequestInit;
    type?: ErrorName;
    responseBody?: ServerErrorResponseBody;
    constructor(response: Response, url: RequestInfo | URL, options: ExtendedRequestInit);
    buildAdditionalDetails(): Promise<this>;
}
export {};
//# sourceMappingURL=httpError.d.ts.map