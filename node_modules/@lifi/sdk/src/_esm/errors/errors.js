import { BaseError } from './baseError.js';
import { ErrorName, LiFiErrorCode } from './constants.js';
export class RPCError extends BaseError {
    constructor(code, message, cause) {
        super(ErrorName.RPCError, code, message, cause);
    }
}
export class ProviderError extends BaseError {
    constructor(code, message, cause) {
        super(ErrorName.ProviderError, code, message, cause);
    }
}
export class TransactionError extends BaseError {
    constructor(code, message, cause) {
        super(ErrorName.TransactionError, code, message, cause);
    }
}
export class UnknownError extends BaseError {
    constructor(message, cause) {
        super(ErrorName.UnknownError, LiFiErrorCode.InternalError, message, cause);
    }
}
export class BalanceError extends BaseError {
    constructor(message, cause) {
        super(ErrorName.BalanceError, LiFiErrorCode.BalanceError, message, cause);
    }
}
export class ServerError extends BaseError {
    constructor(message) {
        super(ErrorName.ServerError, LiFiErrorCode.InternalError, message);
    }
}
export class ValidationError extends BaseError {
    constructor(message) {
        super(ErrorName.ValidationError, LiFiErrorCode.ValidationError, message);
    }
}
//# sourceMappingURL=errors.js.map