"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createChainsConfig = createChainsConfig;
exports.createConfig = createConfig;
const types_1 = require("@lifi/types");
const config_js_1 = require("./config.js");
const helpers_js_1 = require("./helpers.js");
const api_js_1 = require("./services/api.js");
const version_js_1 = require("./version.js");
function createBaseConfig(options) {
    if (!options.integrator) {
        throw new Error('Integrator not found. Please see documentation https://docs.li.fi/integrate-li.fi-js-sdk/set-up-the-sdk');
    }
    const _config = config_js_1.config.set(options);
    if (!options.disableVersionCheck && process.env.NODE_ENV === 'development') {
        (0, helpers_js_1.checkPackageUpdates)(version_js_1.name, version_js_1.version);
    }
    return _config;
}
async function createChainsConfig() {
    config_js_1.config.loading = (0, api_js_1.getChains)({
        chainTypes: [types_1.ChainType.EVM, types_1.ChainType.SVM, types_1.ChainType.UTXO],
    })
        .then((chains) => config_js_1.config.setChains(chains))
        .catch();
    await config_js_1.config.loading;
}
function createConfig(options) {
    const _config = createBaseConfig(options);
    if (_config.preloadChains) {
        createChainsConfig();
    }
    return _config;
}
//# sourceMappingURL=createConfig.js.map