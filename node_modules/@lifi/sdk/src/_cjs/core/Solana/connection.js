"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSolanaConnections = exports.ensureConnections = void 0;
exports.callSolanaWithRetry = callSolanaWithRetry;
const types_1 = require("@lifi/types");
const web3_js_1 = require("@solana/web3.js");
const rpc_js_1 = require("../rpc.js");
const connections = new Map();
const ensureConnections = async () => {
    const rpcUrls = await (0, rpc_js_1.getRpcUrls)(types_1.ChainId.SOL);
    for (const rpcUrl of rpcUrls) {
        if (!connections.get(rpcUrl)) {
            const connection = new web3_js_1.Connection(rpcUrl);
            connections.set(rpcUrl, connection);
        }
    }
};
exports.ensureConnections = ensureConnections;
const getSolanaConnections = async () => {
    await (0, exports.ensureConnections)();
    return Array.from(connections.values());
};
exports.getSolanaConnections = getSolanaConnections;
async function callSolanaWithRetry(fn) {
    await (0, exports.ensureConnections)();
    let lastError = null;
    for (const connection of connections.values()) {
        try {
            const result = await fn(connection);
            return result;
        }
        catch (error) {
            lastError = error;
        }
    }
    throw lastError;
}
//# sourceMappingURL=connection.js.map