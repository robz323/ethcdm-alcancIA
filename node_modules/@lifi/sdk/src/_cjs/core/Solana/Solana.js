"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Solana = Solana;
const types_1 = require("@lifi/types");
const SolanaStepExecutor_js_1 = require("./SolanaStepExecutor.js");
const getSNSAddress_js_1 = require("./getSNSAddress.js");
const getSolanaBalance_js_1 = require("./getSolanaBalance.js");
const isSVMAddress_js_1 = require("./isSVMAddress.js");
function Solana(options) {
    const _options = options ?? {};
    return {
        get type() {
            return types_1.ChainType.SVM;
        },
        isAddress: isSVMAddress_js_1.isSVMAddress,
        resolveAddress: getSNSAddress_js_1.getSNSAddress,
        getBalance: getSolanaBalance_js_1.getSolanaBalance,
        async getStepExecutor(options) {
            if (!_options.getWalletAdapter) {
                throw new Error('getWalletAdapter is not provided.');
            }
            const walletAdapter = await _options.getWalletAdapter();
            const executor = new SolanaStepExecutor_js_1.SolanaStepExecutor({
                walletAdapter,
                routeId: options.routeId,
                executionOptions: {
                    ...options.executionOptions,
                },
            });
            return executor;
        },
        setOptions(options) {
            Object.assign(_options, options);
        },
    };
}
//# sourceMappingURL=Solana.js.map