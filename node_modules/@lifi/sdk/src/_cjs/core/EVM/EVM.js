"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EVM = EVM;
const types_1 = require("@lifi/types");
const viem_1 = require("viem");
const EVMStepExecutor_js_1 = require("./EVMStepExecutor.js");
const getENSAddress_js_1 = require("./getENSAddress.js");
const getEVMBalance_js_1 = require("./getEVMBalance.js");
function EVM(options) {
    const _options = options ?? {};
    return {
        get type() {
            return types_1.ChainType.EVM;
        },
        get multisig() {
            return _options.multisig;
        },
        isAddress: viem_1.isAddress,
        resolveAddress: getENSAddress_js_1.getENSAddress,
        getBalance: getEVMBalance_js_1.getEVMBalance,
        async getStepExecutor(options) {
            if (!_options.getWalletClient) {
                throw new Error('Client is not provided.');
            }
            const walletClient = await _options.getWalletClient();
            const executor = new EVMStepExecutor_js_1.EVMStepExecutor({
                client: walletClient,
                multisig: _options.multisig,
                routeId: options.routeId,
                executionOptions: {
                    ...options.executionOptions,
                    switchChainHook: _options.switchChain ?? options.executionOptions?.switchChainHook,
                },
            });
            return executor;
        },
        setOptions(options) {
            Object.assign(_options, options);
        },
    };
}
//# sourceMappingURL=EVM.js.map