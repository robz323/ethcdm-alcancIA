"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.retryCount = exports.retryDelay = exports.getMulticallAddress = exports.getMaxPriorityFeePerGas = void 0;
const actions_1 = require("viem/actions");
const config_js_1 = require("../../config.js");
const median_js_1 = require("../../utils/median.js");
const getMaxPriorityFeePerGas = async (client) => {
    const block = await (0, actions_1.getBlock)(client, {
        includeTransactions: true,
    });
    const maxPriorityFeePerGasList = block.transactions
        .filter((tx) => tx.maxPriorityFeePerGas)
        .map((tx) => tx.maxPriorityFeePerGas);
    if (!maxPriorityFeePerGasList.length) {
        return;
    }
    let maxPriorityFeePerGasSum = 0n;
    for (const value of maxPriorityFeePerGasList) {
        maxPriorityFeePerGasSum += value;
    }
    const maxPriorityFeePerGasMedian = (0, median_js_1.median)(maxPriorityFeePerGasList) ?? 0n;
    const maxPriorityFeePerGasAvg = maxPriorityFeePerGasSum / BigInt(maxPriorityFeePerGasList.length);
    return maxPriorityFeePerGasMedian > maxPriorityFeePerGasAvg
        ? maxPriorityFeePerGasAvg
        : maxPriorityFeePerGasMedian;
};
exports.getMaxPriorityFeePerGas = getMaxPriorityFeePerGas;
const getMulticallAddress = async (chainId) => {
    const chains = await config_js_1.config.getChains();
    return chains.find((chain) => chain.id === chainId)?.multicallAddress;
};
exports.getMulticallAddress = getMulticallAddress;
const retryDelay = ({ count }) => Math.min(~~(1 << count) * 200, 3000);
exports.retryDelay = retryDelay;
exports.retryCount = 30;
//# sourceMappingURL=utils.js.map