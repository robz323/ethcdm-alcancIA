"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.promiseCache = exports.LruMap = void 0;
exports.withDedupe = withDedupe;
class LruMap extends Map {
    constructor(size) {
        super();
        Object.defineProperty(this, "maxSize", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.maxSize = size;
    }
    set(key, value) {
        super.set(key, value);
        if (this.maxSize && this.size > this.maxSize) {
            this.delete(this.keys().next().value);
        }
        return this;
    }
}
exports.LruMap = LruMap;
exports.promiseCache = new LruMap(8192);
function withDedupe(fn, { enabled = true, id }) {
    if (!enabled || !id) {
        return fn();
    }
    if (exports.promiseCache.get(id)) {
        return exports.promiseCache.get(id);
    }
    const promise = fn().finally(() => exports.promiseCache.delete(id));
    exports.promiseCache.set(id, promise);
    return promise;
}
//# sourceMappingURL=withDedupe.js.map