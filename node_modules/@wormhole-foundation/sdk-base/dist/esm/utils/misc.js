export function lazyInstantiate(factory) {
    let instance = null;
    return () => {
        if (!instance)
            instance = factory();
        return instance;
    };
}
export function onlyOnce(fn, ...args) {
    let called = false;
    return () => {
        if (!called) {
            called = true;
            fn(...args);
        }
    };
}
export function throws(fn) {
    try {
        fn();
        return false;
    }
    catch {
        return true;
    }
}
export function bound(value, min, max) {
    if (value < min)
        return min;
    if (value > max)
        return max;
    return value;
}
//# sourceMappingURL=misc.js.map