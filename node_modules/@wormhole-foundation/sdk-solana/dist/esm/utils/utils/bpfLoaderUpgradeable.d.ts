import type { PublicKeyInitData } from '@solana/web3.js';
import { PublicKey } from '@solana/web3.js';
export declare const BPF_LOADER_UPGRADEABLE_PROGRAM_ID: PublicKey;
export declare function deriveProgramDataAddress(programId: PublicKeyInitData): PublicKey;
export declare function programDataAddress(programId: PublicKeyInitData): PublicKey;
export declare const programDataLayout: readonly [{
    readonly size: 4;
    readonly custom: 3;
    readonly omit: true;
    readonly binary: "uint";
    readonly endianness: "little";
    readonly name: "programDataEnumVariant";
}, {
    readonly size: 8;
    readonly binary: "uint";
    readonly endianness: "little";
    readonly name: "slot";
}, {
    readonly name: "upgradeAuthority";
    readonly binary: "switch";
    readonly idSize: 1;
    readonly idTag: "isSome";
    readonly layouts: readonly [readonly [readonly [0, false], readonly [{
        readonly name: "_lastValueBeforeImmutability";
        readonly binary: "bytes";
        readonly size: 32;
    }]], readonly [readonly [1, true], readonly [{
        readonly name: "value";
        readonly binary: "bytes";
        readonly size: 32;
        readonly custom: {
            readonly to: (encoded: Uint8Array) => PublicKey;
            readonly from: (decoded: PublicKey) => Uint8Array;
        };
    }]]];
}, {
    readonly name: "bytecode";
    readonly binary: "bytes";
}];
//# sourceMappingURL=bpfLoaderUpgradeable.d.ts.map