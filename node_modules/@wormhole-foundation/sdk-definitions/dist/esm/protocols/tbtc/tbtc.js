import { lazyInstantiate, tbtc } from "@wormhole-foundation/sdk-base";
import { toNative } from "../../address.js";
import { payloadDiscriminator } from "./../../vaa/index.js";
import "../../registry.js";
export var TBTCBridge;
(function (TBTCBridge) {
    const _protocol = "TBTCBridge";
    const _transferPayloads = ["GatewayTransfer", "Transfer"];
    const _payloads = [..._transferPayloads];
    TBTCBridge.getTransferDiscriminator = lazyInstantiate(() => payloadDiscriminator([_protocol, _transferPayloads]));
    TBTCBridge.getNativeTbtcToken = (chain) => {
        const addr = tbtc.tbtcTokens.get("Mainnet", chain);
        if (addr) {
            return {
                chain,
                address: toNative(chain, addr),
            };
        }
    };
})(TBTCBridge || (TBTCBridge = {}));
//# sourceMappingURL=tbtc.js.map