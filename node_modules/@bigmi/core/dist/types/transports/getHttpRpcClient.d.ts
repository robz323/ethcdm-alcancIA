import type { HttpRequestReturnType, HttpRpcClientOptions } from 'viem/utils';
export type RpcRequest = {
    jsonrpc?: '2.0';
    method: string;
    params?: any;
    id?: number;
};
export type HttpRequestParameters<body extends RpcRequest | RpcRequest[] = RpcRequest> = {
    url?: string;
    /** The RPC request body. */
    body?: body;
    /** Request configuration to pass to `fetch`. */
    fetchOptions?: HttpRpcClientOptions['fetchOptions'] | undefined;
    /** A callback to handle the response. */
    onRequest?: ((request: Request) => Promise<void> | void) | undefined;
    /** A callback to handle the response. */
    onResponse?: ((response: Response) => Promise<void> | void) | undefined;
    /** The timeout (in ms) for the request. */
    timeout?: HttpRpcClientOptions['timeout'] | undefined;
};
export type HttpRpcClient = {
    request<body extends RpcRequest | RpcRequest[]>(params: HttpRequestParameters<body>): Promise<HttpRequestReturnType<body>>;
};
export declare function getHttpRpcClient(url: string, options?: HttpRpcClientOptions): HttpRpcClient;
//# sourceMappingURL=getHttpRpcClient.d.ts.map