import { type Chain, type Client, type Transport } from 'viem';
import { type GetBlockCountReturnType } from './getBlockCount.js';
export type OnBlockNumberParameter = GetBlockCountReturnType;
export type OnBlockNumberFn = (blockNumber: OnBlockNumberParameter, prevBlockNumber: OnBlockNumberParameter | undefined) => Promise<void>;
export type WatchBlockNumberParameters = {
    onBlockNumber: OnBlockNumberFn;
    onError?: ((error: Error) => void) | undefined;
} & {
    emitMissed?: boolean | undefined;
    emitOnBegin?: boolean | undefined;
    pollingInterval?: number | undefined;
};
export type WatchBlockNumberReturnType = () => void;
export declare function watchBlockNumber<chain extends Chain | undefined, transport extends Transport>(client: Client<transport, chain>, { emitOnBegin, emitMissed, onBlockNumber, onError, pollingInterval, }: WatchBlockNumberParameters): WatchBlockNumberReturnType;
