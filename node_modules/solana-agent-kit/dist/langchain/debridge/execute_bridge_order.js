"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExecuteDebridgeOrderTool = void 0;
const tools_1 = require("langchain/tools");
const executeBridgeOrder_1 = require("../../tools/debridge/executeBridgeOrder");
class ExecuteDebridgeOrderTool extends tools_1.Tool {
    constructor(solanaKit) {
        super();
        this.solanaKit = solanaKit;
        this.name = "execute_bridge_order";
        this.description = `Execute a cross-chain bridge transaction on Solana.

  Inputs (input is a JSON string):
  - transactionData: string, hex-encoded transaction data from create_bridge_order (e.g., "0x23b872dd...")`;
    }
    async _call(input) {
        try {
            const parsedInput = JSON.parse(input);
            const signature = await (0, executeBridgeOrder_1.executeDebridgeBridgeOrder)(this.solanaKit, parsedInput.transactionData);
            return JSON.stringify({
                status: "success",
                message: "Bridge transaction executed successfully",
                signature,
            });
        }
        catch (error) {
            return JSON.stringify({
                status: "error",
                message: error.message,
                code: error.code || "UNKNOWN_ERROR",
            });
        }
    }
}
exports.ExecuteDebridgeOrderTool = ExecuteDebridgeOrderTool;
//# sourceMappingURL=execute_bridge_order.js.map