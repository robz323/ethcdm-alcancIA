"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SolanaSwitchboardSimulateFeed = void 0;
const tools_1 = require("langchain/tools");
class SolanaSwitchboardSimulateFeed extends tools_1.Tool {
    constructor(solanaKit) {
        super();
        this.solanaKit = solanaKit;
        this.name = "switchboard_simulate_feed";
        this.description = `Simluates a Switchboard price feed given the feed's public key.
  Input should be a JSON string with the following format:
  {
    "feed": string (required) - the public key (a.k.a. feed hash) of the feed to simulate
    "crossbarUrl": string (optional) - the url of the crossbar instance to use. Defaults to "https://crossbar.switchboard.xyz"
  }
  `;
    }
    async _call(input) {
        try {
            const InputFormat = JSON.parse(input);
            const feed = InputFormat.feed;
            const crossbarUrl = InputFormat.crossbarUrl;
            const value = await this.solanaKit.simulateSwitchboardFeed(feed, crossbarUrl);
            const response = {
                status: "success",
                feed,
                value: Number.parseInt(value),
            };
            return JSON.stringify(response);
        }
        catch (error) {
            const response = {
                status: "error",
                message: error.message,
                code: error.code,
            };
            return JSON.stringify(response);
        }
    }
}
exports.SolanaSwitchboardSimulateFeed = SolanaSwitchboardSimulateFeed;
//# sourceMappingURL=switchboard_simulate_feed.js.map