"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateWrappedTokenTool = void 0;
const tools_1 = require("langchain/tools");
class CreateWrappedTokenTool extends tools_1.Tool {
    constructor(solanaKit) {
        super();
        this.solanaKit = solanaKit;
        this.name = "create_wrapped_token";
        this.description = `Create a wrapped token on a destination chain for a token from Solana.

  Inputs (input is a JSON string):
  - destinationChain: string, eg "Ethereum" or "BaseSepolia"
  - tokenAddress: string, eg "EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v"
  - network: string, eg "Mainnet" or "Testnet"`;
    }
    async _call(input) {
        const parsedInput = JSON.parse(input);
        const result = await this.solanaKit.createWrappedToken(parsedInput);
        return JSON.stringify(result);
    }
}
exports.CreateWrappedTokenTool = CreateWrappedTokenTool;
//# sourceMappingURL=createWrappedToken.js.map