"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TokenTransferTool = void 0;
const tools_1 = require("langchain/tools");
class TokenTransferTool extends tools_1.Tool {
    constructor(solanaKit) {
        super();
        this.solanaKit = solanaKit;
        this.name = "token_transfer";
        this.description = `Transfer a token from Solana to another chain.

  Inputs (input is a JSON string):
  - destinationChain: string, eg "Ethereum" or "BaseSepolia"
  - network: string, eg "Mainnet" or "Testnet"
  - transferAmount: string, eg "1"
  - tokenAddress: string, eg "0x0000000000000000000000000000000000000000 (in case of solana/sol, it is empty)`;
    }
    async _call(input) {
        const parsedInput = JSON.parse(input);
        const result = await this.solanaKit.tokenTransfer(parsedInput);
        return JSON.stringify(result);
    }
}
exports.TokenTransferTool = TokenTransferTool;
//# sourceMappingURL=tokenTransfer.js.map