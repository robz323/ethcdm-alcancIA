"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTokens = getTokens;
const utils_1 = require("./utils");
/**
 * Get list of tokens supported by OKX DEX
 * @param agent SolanaAgentKit instance
 * @returns List of supported tokens
 */
async function getTokens(agent) {
    try {
        const dexClient = (0, utils_1.initDexClient)(agent);
        const tokens = await dexClient.dex.getTokens("501");
        // Format the token list for better readability
        const formattedTokens = tokens.data.map((token) => ({
            symbol: token.symbol,
            name: token.name,
            address: token.address,
            decimals: token.decimal,
        }));
        return {
            status: "success",
            summary: `Found ${formattedTokens.length} tokens on Solana via OKX DEX`,
            tokens: formattedTokens.slice(0, 10), // Include first 10 tokens in summary
            data: tokens,
        };
    }
    catch (error) {
        return {
            status: "error",
            message: error.message || "Failed to get tokens",
        };
    }
}
//# sourceMappingURL=get_tokens.js.map