import type { SolanaAgentKit } from "../../agent";
import type { InputAssetStruct, TargetTokenStruct, PriorityFee } from "./types";
/**
 * Close token accounts
 * @param agent SolanaAgentKit instance
 * @param mints Array of mint addresses to close
 */
export declare function closeAccounts(agent: SolanaAgentKit, mints: string[]): Promise<string[]>;
/**
 * Burns tokens using SolutioFi
 * @param agent SolanaAgentKit instance
 * @param mints Array of mint addresses for the tokens to burn
 * @returns Array of versioned transactions
 */
export declare function burnTokens(agent: SolanaAgentKit, mints: string[]): Promise<string[]>;
/**
 * Merge multiple tokens into one
 * @param agent SolanaAgentKit instance
 * @param inputAssets Array of input assets to merge
 * @param outputMint Output token mint address
 * @param priorityFee Transaction priority level
 */
export declare function mergeTokens(agent: SolanaAgentKit, inputAssets: InputAssetStruct[], outputMint: string, priorityFee: PriorityFee): Promise<string[]>;
/**
 * Split a token into multiple tokens
 * @param agent SolanaAgentKit instance
 * @param inputAsset Input asset to spread
 * @param targetTokens Array of target tokens and their allocations
 * @param priorityFee Transaction priority level
 */
export declare function spreadToken(agent: SolanaAgentKit, inputAsset: InputAssetStruct, targetTokens: TargetTokenStruct[], priorityFee: PriorityFee): Promise<string[]>;
//# sourceMappingURL=solutiofi.d.ts.map