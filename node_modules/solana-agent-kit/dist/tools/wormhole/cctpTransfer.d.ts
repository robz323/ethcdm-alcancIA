import { CctpTransferInput } from "../../types";
/**
 * Executes a USDC transfer across different blockchains using Circle's Cross-Chain Transfer Protocol (CCTP)
 * via the Wormhole bridge infrastructure.
 *
 * @param input - Object containing transfer details (destination chain, amount, network)
 * @returns Object with transfer status and transaction details or error information
 */
export declare const cctpTransfer: (input: CctpTransferInput) => Promise<{
    success: boolean;
    status: string;
    sourceChain: string;
    destinationChain: "Solana" | "Ethereum" | "Terra" | "Bsc" | "Polygon" | "Avalanche" | "Oasis" | "Algorand" | "Aurora" | "Fantom" | "Karura" | "Acala" | "Klaytn" | "Celo" | "Near" | "Moonbeam" | "Neon" | "Terra2" | "Injective" | "Osmosis" | "Sui" | "Aptos" | "Arbitrum" | "Optimism" | "Gnosis" | "Pythnet" | "Xpla" | "Btc" | "Base" | "Sei" | "Scroll" | "Mantle" | "Blast" | "Xlayer" | "Linea" | "Berachain" | "Seievm" | "Snaxchain" | "Unichain" | "Worldchain" | "Ink" | "HyperEVM" | "Monad" | "Wormchain" | "Cosmoshub" | "Evmos" | "Kujira" | "Neutron" | "Celestia" | "Stargaze" | "Seda" | "Dymension" | "Provenance" | "Noble" | "Sepolia" | "ArbitrumSepolia" | "BaseSepolia" | "OptimismSepolia" | "Holesky" | "PolygonSepolia";
    amount: string;
    sourceTransaction: string[];
    attestation: any[];
    destinationTransaction: string[];
    automatic: boolean;
    error?: never;
} | {
    success: boolean;
    error: string;
    status?: never;
    sourceChain?: never;
    destinationChain?: never;
    amount?: never;
    sourceTransaction?: never;
    attestation?: never;
    destinationTransaction?: never;
    automatic?: never;
}>;
//# sourceMappingURL=cctpTransfer.d.ts.map