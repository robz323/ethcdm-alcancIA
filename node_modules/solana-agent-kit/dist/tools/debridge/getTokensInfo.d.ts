import { deBridgeTokensInfoResponse, GetDebridgeTokensInfoParams } from "../../types";
/**
 * Get token information from a chain. Chain ID must be specified (e.g., '1' for Ethereum, '56' for BSC, '137' for Polygon).
 * For EVM chains: use 0x-prefixed address. For Solana: use base58 token address.
 *
 * @param params - Parameters for getting token info
 * @param params.chainId - Chain ID to get token information for (e.g., '1' for Ethereum, '56' for BSC)
 * @param params.tokenAddress - Optional specific token address to query information for
 * @param params.search - Optional search term to filter tokens by name or symbol
 * @returns Token information including name, symbol, and decimals
 * @throws {Error} If the API request fails or returns an error
 *
 * @example
 * ```typescript
 * // Get USDC on Ethereum
 * const ethUSDC = await getDebridgeTokensInfo({
 *   chainId: "1",
 *   search: "USDC"
 * });
 *
 * // Get USDC on BSC
 * const bscUSDC = await getDebridgeTokensInfo({
 *   chainId: "56",
 *   search: "USDC"
 * });
 * ```
 */
export declare function getDebridgeTokensInfo(parameters: GetDebridgeTokensInfoParams): Promise<deBridgeTokensInfoResponse>;
//# sourceMappingURL=getTokensInfo.d.ts.map