"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createWrappedTokenAction = void 0;
const zod_1 = require("zod");
exports.createWrappedTokenAction = {
    name: "create_wrapped_token",
    description: "Create a wrapped token on a destination chain for a token from Solana",
    similes: [
        "create wrapped token",
        "wrap token on another chain",
        "create wrapped USDC on Ethereum",
        "attest token to another chain",
    ],
    examples: [
        [
            {
                input: {
                    destinationChain: "BaseSepolia",
                    tokenAddress: "EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v",
                    network: "Testnet",
                },
                output: {
                    success: true,
                    wrappedToken: {
                        chain: "BaseSepolia",
                        address: "0x1234567890abcdef1234567890abcdef12345678",
                    },
                    attestationTxid: "5UYkBtRBMY92juhxH5ZbjitVsEaJwBXyXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
                },
                explanation: "Create a wrapped USDC token on BaseSepolia testnet",
            },
        ],
    ],
    schema: zod_1.z.object({
        destinationChain: zod_1.z
            .string()
            .describe("The destination chain to create the wrapped token on"),
        tokenAddress: zod_1.z.string().describe("The address of the token to wrap"),
        network: zod_1.z
            .string()
            .optional()
            .describe("The network to use for the wrapped token"),
    }),
    handler: async (agent, input) => {
        const result = await agent.createWrappedToken(input);
        return result;
    },
};
exports.default = exports.createWrappedTokenAction;
//# sourceMappingURL=createWrappedToken.js.map