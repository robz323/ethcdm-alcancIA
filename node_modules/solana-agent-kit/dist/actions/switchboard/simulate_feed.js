"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const zod_1 = require("zod");
const tools_1 = require("../../tools");
const constants_1 = require("../../constants");
const switchboardSimulateFeedAction = {
    name: "SWITCHBOARD_SIMULATE_FEED",
    similes: [
        "simulate switchboard price feed",
        "simulate switchboard feed",
        "switchboard oracle feed",
        "get switchboard price",
        "check switchboard price",
        "switchboard price",
        "switchbaord feed",
    ],
    description: "Simulates a given switchboard price feed and returns the value.",
    examples: [
        [
            {
                input: {
                    feed: "6qmsMwtMmeqMgZEhyLv1Pe4wcqT5iKwJAWnmzmnKjf83", // BTC/USDT price feed
                },
                output: {
                    status: "success",
                    value: "104097.59",
                    message: "Simulation result: 104097.59",
                },
                explanation: "Get the current BTC/USDT price by simulating a Switchbaord feed",
            },
        ],
    ],
    schema: zod_1.z.object({
        feed: zod_1.z
            .string()
            .describe("The address of the Switchboard feed to simulate"),
        crossbarUrl: zod_1.z
            .string()
            .default(constants_1.SWITCHBOARD_DEFAULT_CROSSBAR)
            .describe("The url of the crossbar server to use"),
    }),
    handler: async (agent, input) => {
        try {
            const { feedAddress, crossbarUrl } = input;
            const result = await (0, tools_1.simulate_switchboard_feed)(feedAddress, crossbarUrl);
            return {
                status: "success",
                feed: feedAddress,
                message: `Simulation result: ${result}`,
            };
        }
        catch (error) {
            return {
                status: "error",
                message: `Failed to simulate Switchboard feed: ${error.message}`,
            };
        }
    },
};
exports.default = switchboardSimulateFeedAction;
//# sourceMappingURL=simulate_feed.js.map