"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.sortPubkeys = sortPubkeys;
exports.getCpmmPoolPda = getCpmmPoolPda;
exports.getAmmPda = getAmmPda;
const bytes_1 = require("@coral-xyz/anchor/dist/cjs/utils/bytes");
const web3_js_1 = require("@solana/web3.js");
function sortPubkeys(pubkeys) {
    return pubkeys.sort((a, b) => {
        const aBytes = bytes_1.bs58.decode(a);
        const bBytes = bytes_1.bs58.decode(b);
        for (let i = 0; i < aBytes.length; i++) {
            if (aBytes[i] < bBytes[i])
                return -1;
            if (aBytes[i] > bBytes[i])
                return 1;
        }
        return 0;
    });
}
function getCpmmPoolPda(programId, tokenA, tokenB, ammConfig) {
    return web3_js_1.PublicKey.findProgramAddressSync([
        Buffer.from("pool"),
        ammConfig.toBuffer(),
        tokenA.toBuffer(),
        tokenB.toBuffer(),
    ], programId)[0];
}
function getAmmPda(index, programId) {
    const indexBuffer = Buffer.alloc(2);
    indexBuffer.writeUint16BE(index);
    return web3_js_1.PublicKey.findProgramAddressSync([Buffer.from("amm_config"), indexBuffer], programId)[0];
}
