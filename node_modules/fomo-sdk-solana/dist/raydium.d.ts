import { Cluster, Connection, Keypair, PublicKey, VersionedTransaction } from "@solana/web3.js";
import { Raydium } from "@raydium-io/raydium-sdk-v2";
import { Program } from "@coral-xyz/anchor";
import { FomoContract } from "./idl/fomo_contract.devnet";
export declare class FomoRaydium {
    private program;
    raydium: Raydium;
    private cluster;
    private connection;
    private authority?;
    constructor(connection: Connection, cluster: Cluster, program: Program<FomoContract>, authority?: Keypair | undefined);
    createPool(token: PublicKey, priorityFee: number): Promise<{
        sig: string;
        poolAddress: PublicKey;
        lpMint: PublicKey;
    }>;
    burnLp(mint: PublicKey): Promise<string>;
    private getConfig;
    trade(wallet: PublicKey, priorityFee: number, amount: number, from: PublicKey, to: PublicKey, slippage: number): Promise<VersionedTransaction>;
    private get raydiumProgramId();
    private get poolFee();
}
