/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */
import * as beet from '@metaplex-foundation/beet';
import * as web3 from '@solana/web3.js';
import { WrapperBatchUpdateParams } from '../types/WrapperBatchUpdateParams';
/**
 * @category Instructions
 * @category BatchUpdate
 * @category generated
 */
export type BatchUpdateInstructionArgs = {
    params: WrapperBatchUpdateParams;
};
/**
 * @category Instructions
 * @category BatchUpdate
 * @category generated
 */
export declare const BatchUpdateStruct: beet.FixableBeetArgsStruct<BatchUpdateInstructionArgs & {
    instructionDiscriminator: number;
}>;
/**
 * Accounts required by the _BatchUpdate_ instruction
 *
 * @property [_writable_] wrapperState
 * @property [] manifestProgram
 * @property [_writable_, **signer**] owner
 * @property [_writable_] market
 * @property [] baseMint (optional)
 * @property [_writable_] baseGlobal (optional)
 * @property [] baseGlobalVault (optional)
 * @property [] baseMarketVault (optional)
 * @property [] baseTokenProgram (optional)
 * @property [] quoteMint (optional)
 * @property [_writable_] quoteGlobal (optional)
 * @property [] quoteGlobalVault (optional)
 * @property [] quoteMarketVault (optional)
 * @property [] quoteTokenProgram (optional)
 * @category Instructions
 * @category BatchUpdate
 * @category generated
 */
export type BatchUpdateInstructionAccounts = {
    wrapperState: web3.PublicKey;
    manifestProgram: web3.PublicKey;
    owner: web3.PublicKey;
    market: web3.PublicKey;
    systemProgram?: web3.PublicKey;
    baseMint?: web3.PublicKey;
    baseGlobal?: web3.PublicKey;
    baseGlobalVault?: web3.PublicKey;
    baseMarketVault?: web3.PublicKey;
    baseTokenProgram?: web3.PublicKey;
    quoteMint?: web3.PublicKey;
    quoteGlobal?: web3.PublicKey;
    quoteGlobalVault?: web3.PublicKey;
    quoteMarketVault?: web3.PublicKey;
    quoteTokenProgram?: web3.PublicKey;
};
export declare const batchUpdateInstructionDiscriminator = 4;
/**
 * Creates a _BatchUpdate_ instruction.
 *
 * Optional accounts that are not provided will be omitted from the accounts
 * array passed with the instruction.
 * An optional account that is set cannot follow an optional account that is unset.
 * Otherwise an Error is raised.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category BatchUpdate
 * @category generated
 */
export declare function createBatchUpdateInstruction(accounts: BatchUpdateInstructionAccounts, args: BatchUpdateInstructionArgs, programId?: web3.PublicKey): web3.TransactionInstruction;
//# sourceMappingURL=BatchUpdate.d.ts.map