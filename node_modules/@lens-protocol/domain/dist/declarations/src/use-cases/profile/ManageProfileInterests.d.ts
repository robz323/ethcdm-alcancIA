export type ProfileInterestsRequest<T> = {
    interests: T[];
};
export interface IProfileInterestsGateway<T> {
    add(request: ProfileInterestsRequest<T>): Promise<void>;
    remove(request: ProfileInterestsRequest<T>): Promise<void>;
}
export interface IProfileInterestsPresenter<T> {
    add(request: ProfileInterestsRequest<T>): Promise<void>;
    remove(request: ProfileInterestsRequest<T>): Promise<void>;
}
export declare class ManageProfileInterests<T> {
    private readonly gateway;
    private readonly presenter;
    constructor(gateway: IProfileInterestsGateway<T>, presenter: IProfileInterestsPresenter<T>);
    add(request: ProfileInterestsRequest<T>): Promise<void>;
    remove(request: ProfileInterestsRequest<T>): Promise<void>;
}
