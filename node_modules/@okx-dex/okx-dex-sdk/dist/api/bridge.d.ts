import { HTTPClient } from '../core/http-client';
export interface CrossChainQuoteParams {
    [key: string]: string | undefined;
    fromChainId: string;
    toChainId: string;
    fromTokenAddress: string;
    toTokenAddress: string;
    amount: string;
    slippage: string;
    sort?: string;
    feePercent?: string;
    allowBridge?: string;
    denyBridge?: string;
    priceImpactProtectionPercentage?: string;
}
export interface CrossChainSwapParams extends CrossChainQuoteParams {
    userWalletAddress: string;
    receiveAddress?: string;
    referrerAddress?: string;
    onlyBridge?: string;
    memo?: string;
}
export declare class BridgeAPI {
    private readonly client;
    constructor(client: HTTPClient);
    getSupportedTokens(chainId: string): Promise<unknown>;
    getSupportedBridges(chainId: string): Promise<unknown>;
    getBridgeTokenPairs(fromChainId: string): Promise<unknown>;
    getCrossChainQuote(params: CrossChainQuoteParams): Promise<unknown>;
    buildCrossChainSwap(params: CrossChainSwapParams): Promise<unknown>;
}
