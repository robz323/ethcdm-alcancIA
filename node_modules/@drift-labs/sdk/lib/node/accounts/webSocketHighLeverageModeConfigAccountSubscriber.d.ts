/// <reference types="node" />
import { DataAndSlot, AccountSubscriber, HighLeverageModeConfigAccountEvents, HighLeverageModeConfigAccountSubscriber } from './types';
import { Program } from '@coral-xyz/anchor';
import StrictEventEmitter from 'strict-event-emitter-types';
import { EventEmitter } from 'events';
import { Commitment, PublicKey } from '@solana/web3.js';
import { HighLeverageModeConfig } from '../types';
export declare class WebSocketHighLeverageModeConfigAccountSubscriber implements HighLeverageModeConfigAccountSubscriber {
    isSubscribed: boolean;
    resubTimeoutMs?: number;
    commitment?: Commitment;
    program: Program;
    eventEmitter: StrictEventEmitter<EventEmitter, HighLeverageModeConfigAccountEvents>;
    highLeverageModeConfigAccountPublicKey: PublicKey;
    highLeverageModeConfigDataAccountSubscriber: AccountSubscriber<HighLeverageModeConfig>;
    constructor(program: Program, highLeverageModeConfigAccountPublicKey: PublicKey, resubTimeoutMs?: number, commitment?: Commitment);
    subscribe(highLeverageModeConfigAccount?: HighLeverageModeConfig): Promise<boolean>;
    fetch(): Promise<void>;
    unsubscribe(): Promise<void>;
    assertIsSubscribed(): void;
    getHighLeverageModeConfigAccountAndSlot(): DataAndSlot<HighLeverageModeConfig>;
    updateData(highLeverageModeConfig: HighLeverageModeConfig, slot: number): void;
}
