import { WrappedEvent, EventType } from './types';
declare class Node {
    key: string;
    value: WrappedEvent<EventType>[];
    next?: Node;
    prev?: Node;
    constructor(key: string, value: WrappedEvent<EventType>[], next?: Node, prev?: Node);
}
export declare class TxEventCache {
    maxTx: number;
    size: number;
    head?: Node;
    tail?: Node;
    cacheMap: {
        [key: string]: Node;
    };
    constructor(maxTx?: number);
    add(key: string, events: WrappedEvent<EventType>[]): void;
    has(key: string): boolean;
    get(key: string): WrappedEvent<EventType>[] | undefined;
    detach(node: Node): void;
    clear(): void;
}
export {};
