{"version":3,"file":"token.js","sourceRoot":"","sources":["../../../src/contracts-wrappers/token.ts"],"names":[],"mappings":"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","sourcesContent":["import { Args, bytesToStr, U256, U8 } from '../basicElements'\nimport { Operation } from '../operation'\nimport { CallSCOptions, ReadSCOptions, SmartContract } from '../smartContracts'\nimport { ErrorDataEntryNotFound } from '../errors/dataEntryNotFound'\n\n/**\n * @class MRC20\n *\n *\n * Class representing an MRC20 token smart contract.\n * Extends the SmartContract class to provide methods for interacting with an MRC20 token.\n * MRC20 contract is available here: https://github.com/massalabs/massa-standards/blob/main/smart-contracts/assembly/contracts/FT/token.ts\n *\n *  @example\n * ```typescript\n * const token = new MRC20(provider, <tokenAddr>);\n * const balance = await token.balanceOf(<accountAddr>);\n * console.log(`Your balance: ${balance}`);\n *\n * const transferOperation = await token.transfer(<recipientAddr>, BigInt(10000));\n * console.log(`Transfer operation id: ${transferOperation.id}`);\n * ```\n */\n\nexport class MRC20 extends SmartContract {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  private _version: string\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  private _name: string\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  private _symbol: string\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  private _decimals: number\n\n  async version(options?: ReadSCOptions): Promise<string> {\n    if (this._version) {\n      return this._version\n    }\n    const res = await this.read('version', undefined, options)\n    return (this._version = bytesToStr(res.value))\n  }\n\n  async name(): Promise<string> {\n    if (this._name) {\n      return this._name\n    }\n    const res = await this.provider.readStorage(this.address, ['NAME'], true)\n    if (!res[0]) {\n      throw new ErrorDataEntryNotFound({ key: 'NAME', address: this.address })\n    }\n    return (this._name = bytesToStr(res[0]))\n  }\n\n  async symbol(): Promise<string> {\n    if (this._symbol) {\n      return this._symbol\n    }\n    const res = await this.provider.readStorage(this.address, ['SYMBOL'], true)\n    if (!res[0]) {\n      throw new ErrorDataEntryNotFound({ key: 'SYMBOL', address: this.address })\n    }\n    return (this._symbol = bytesToStr(res[0]))\n  }\n\n  async decimals(): Promise<number> {\n    if (this._decimals) {\n      return this._decimals\n    }\n    const res = await this.provider.readStorage(\n      this.address,\n      ['DECIMALS'],\n      true\n    )\n    if (!res[0]) {\n      throw new ErrorDataEntryNotFound({\n        key: 'DECIMALS',\n        address: this.address,\n      })\n    }\n    return (this._decimals = Number(U8.fromBytes(res[0])))\n  }\n\n  async totalSupply(final = true): Promise<bigint> {\n    const res = await this.provider.readStorage(\n      this.address,\n      ['TOTAL_SUPPLY'],\n      final\n    )\n    if (!res[0]) {\n      throw new ErrorDataEntryNotFound({\n        key: 'TOTAL_SUPPLY',\n        address: this.address,\n      })\n    }\n    return U256.fromBytes(res[0])\n  }\n\n  async balanceOf(address: string, options?: ReadSCOptions): Promise<bigint> {\n    const res = await this.read(\n      'balanceOf',\n      new Args().addString(address),\n      options\n    )\n    return U256.fromBytes(res.value)\n  }\n\n  async balancesOf(\n    addresses: string[],\n    final = true\n  ): Promise<\n    {\n      address: string\n      balance: bigint\n    }[]\n  > {\n    const res = await this.provider.readStorage(\n      this.address,\n      addresses.map((a) => `BALANCE${a}`),\n      final\n    )\n\n    return res.map((v, i) => ({\n      address: addresses[i],\n      balance: v ? U256.fromBytes(v) : 0n,\n    }))\n  }\n\n  async transfer(\n    to: string,\n    amount: bigint,\n    options?: CallSCOptions\n  ): Promise<Operation> {\n    return this.call(\n      'transfer',\n      new Args().addString(to).addU256(amount),\n      options\n    )\n  }\n\n  async allowance(\n    ownerAddress: string,\n    spenderAddress: string,\n    options?: ReadSCOptions\n  ): Promise<bigint> {\n    const res = await this.read(\n      'allowance',\n      new Args().addString(ownerAddress).addString(spenderAddress),\n      options\n    )\n    return U256.fromBytes(res.value)\n  }\n\n  async increaseAllowance(\n    spenderAddress: string,\n    amount: bigint,\n    options?: CallSCOptions\n  ): Promise<Operation> {\n    return this.call(\n      'increaseAllowance',\n      new Args().addString(spenderAddress).addU256(amount),\n      options\n    )\n  }\n\n  async decreaseAllowance(\n    spenderAddress: string,\n    amount: bigint,\n    options?: CallSCOptions\n  ): Promise<Operation> {\n    return this.call(\n      'decreaseAllowance',\n      new Args().addString(spenderAddress).addU256(amount),\n      options\n    )\n  }\n\n  async transferFrom(\n    spenderAddress: string,\n    recipientAddress: string,\n    amount: bigint,\n    options?: CallSCOptions\n  ): Promise<Operation> {\n    return this.call(\n      'transferFrom',\n      new Args()\n        .addString(spenderAddress)\n        .addString(recipientAddress)\n        .addU256(amount),\n      options\n    )\n  }\n}\n"]}