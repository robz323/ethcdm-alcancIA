{"version":3,"file":"storage.js","sourceRoot":"","sources":["../../../src/basicElements/storage.ts"],"names":[],"mappings":";;;AAAA,wBAA8B;AAC9B,+BAAuC;AAEvC,MAAM,kBAAkB,GAAG,EAAE,CAAA;AAE7B,MAAM,iBAAiB,GAAG,IAAA,gBAAU,EAAC,QAAQ,CAAC,CAAA;AAC9C,MAAM,sBAAsB,GAAG,EAAE,CAAA;AAEjC;;;;;;GAMG;AACH,SAAgB,KAAK,CAAC,aAAqB;IACzC,OAAO,MAAM,CAAC,aAAa,CAAC,GAAG,iBAAiB,CAAA;AAClD,CAAC;AAFD,sBAEC;AAED;;;;GAIG;AACH,SAAgB,OAAO;IACrB,OAAO,KAAK,CAAC,kBAAkB,CAAC,CAAA;AAClC,CAAC;AAFD,0BAEC;AAED;;;;;;;;;GASG;AACH,SAAgB,mBAAmB,CAAC,aAAqB;IACvD,OAAO,KAAK,CAAC,aAAa,CAAC,GAAG,OAAO,EAAE,CAAA;AACzC,CAAC;AAFD,kDAEC;AAED;;;;;;GAMG;AACH,SAAgB,cAAc,CAC5B,GAAwB,EACxB,KAA0B;IAE1B,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE,CAAC;QAC5B,GAAG,GAAG,IAAA,aAAU,EAAC,GAAG,CAAC,CAAA;IACvB,CAAC;IACD,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,CAAC;QAC9B,KAAK,GAAG,IAAA,aAAU,EAAC,KAAK,CAAC,CAAA;IAC3B,CAAC;IACD,OAAO,CACL,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,sBAAsB,CAAC;QACpE,iBAAiB,CAClB,CAAA;AACH,CAAC;AAdD,wCAcC","sourcesContent":["import { strToBytes } from '.'\nimport { Mas, fromString } from './mas'\n\nconst ACCOUNT_SIZE_BYTES = 10\n\nconst STORAGE_BYTE_COST = fromString('0.0001')\nconst NEW_STORAGE_ENTRY_COST = 4n\n\n/**\n * Calculates the cost of a given number of bytes.\n *\n * @param numberOfBytes - The number of bytes.\n *\n * @returns The cost in the smallest unit of the Massa currency.\n */\nexport function bytes(numberOfBytes: number): Mas {\n  return BigInt(numberOfBytes) * STORAGE_BYTE_COST\n}\n\n/**\n * Calculates the cost of creating a new account.\n *\n * @returns The cost in the smallest unit of the Massa currency.\n */\nexport function account(): Mas {\n  return bytes(ACCOUNT_SIZE_BYTES)\n}\n\n/**\n * Calculates the cost of deploying a smart contract.\n *\n * @remarks\n * The cost of deploying a smart contract includes the cost of creating a new account.\n *\n * @param numberOfBytes - The number of bytes of the smart contract.\n *\n * @returns The cost in the smallest unit of the Massa currency.\n */\nexport function smartContractDeploy(numberOfBytes: number): Mas {\n  return bytes(numberOfBytes) + account()\n}\n\n/**\n * Compute the storage cost for a given key and value size based on the documentation at:\n * https://docs.massa.net/docs/learn/storage-costs\n * @param key- The key to store\n * @param value - The value to store\n * @returns the storage cost for the given key and value size\n */\nexport function datastoreEntry(\n  key: Uint8Array | string,\n  value: Uint8Array | string\n): bigint {\n  if (typeof key === 'string') {\n    key = strToBytes(key)\n  }\n  if (typeof value === 'string') {\n    value = strToBytes(value)\n  }\n  return (\n    (BigInt(key.length) + BigInt(value.length) + NEW_STORAGE_ENTRY_COST) *\n    STORAGE_BYTE_COST\n  )\n}\n"]}