{"version":3,"file":"strings.js","sourceRoot":"","sources":["../../../../src/basicElements/serializers/strings.ts"],"names":[],"mappings":";;;AAAA;;;;;;GAMG;AACH,SAAgB,UAAU,CAAC,GAAW;IACpC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;QAChB,+DAA+D;QAC/D,OAAO,IAAI,UAAU,CAAC,CAAC,CAAC,CAAA;IAC1B,CAAC;IACD,OAAO,IAAI,WAAW,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;AACtC,CAAC;AAND,gCAMC;AAED;;;;;;GAMG;AACH,SAAgB,UAAU,CAAC,GAAe;IACxC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;QAChB,OAAO,EAAE,CAAA;IACX,CAAC;IACD,OAAO,IAAI,WAAW,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;AACtC,CAAC;AALD,gCAKC","sourcesContent":["/**\n * Converts utf-16 string to a Uint8Array.\n *\n * @param str - the string to convert\n *\n * @returns the converted string\n */\nexport function strToBytes(str: string): Uint8Array {\n  if (!str.length) {\n    // eslint-disable-next-line @typescript-eslint/no-magic-numbers\n    return new Uint8Array(0)\n  }\n  return new TextEncoder().encode(str)\n}\n\n/**\n * Converts Uint8Array to a string.\n *\n * @param arr - the array to convert\n *\n * @returns A string representation of the array in utf-8 encoding\n */\nexport function bytesToStr(arr: Uint8Array): string {\n  if (!arr.length) {\n    return ''\n  }\n  return new TextDecoder().decode(arr)\n}\n"]}