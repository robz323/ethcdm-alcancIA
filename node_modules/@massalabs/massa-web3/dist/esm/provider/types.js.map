{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../src/provider/types.ts"],"names":[],"mappings":"","sourcesContent":["import { Args } from '../basicElements'\nimport { Mas } from '../basicElements/mas'\nimport { U64_t } from '../basicElements/serializers/number/u64'\nimport { rpcTypes as t } from '../generated'\n\nexport type SignOptions = {\n  description?: string\n  displayData?: boolean\n}\n\ntype OperationParams = {\n  coins?: Mas\n  fee?: Mas\n  maxGas?: U64_t\n}\n\ntype CallSCCommons = {\n  func: string\n  target: string\n  parameter?: Args | Uint8Array\n}\n\nexport type ReadSCParams = CallSCCommons &\n  OperationParams & {\n    caller?: string\n  }\n\nexport type CallSCParams = CallSCCommons &\n  OperationParams & {\n    periodToLive?: number\n  }\n\nexport type DeploySCParams = OperationParams & {\n  parameter?: Args | Uint8Array\n  maxCoins?: Mas\n  byteCode: Uint8Array\n  periodToLive?: number\n  waitFinalExecution?: boolean\n}\n\nexport type ExecuteScParams = {\n  byteCode: Uint8Array\n  datastore?: Map<Uint8Array, Uint8Array>\n  periodToLive?: number\n  fee?: Mas\n  maxGas?: Mas\n  maxCoins?: Mas\n}\n\nexport type ReadSCData = {\n  value: Uint8Array\n  info: {\n    error?: string\n    events: t.OutputEvents\n    gasCost: number\n  }\n}\n\nexport type SignedData = {\n  /** Public key of the signer account */\n  publicKey: string\n  /** Base58 encoded representation of the signature */\n  signature: string\n}\n\nexport type NodeStatusInfo = {\n  config: Config\n  connectedNodes: Record<string, unknown>\n  consensusStats: ConsensusStats\n  currentCycle: number\n  currentTime: number\n  currentCycleTime: number\n  nextCycleTime: number\n  lastSlot: t.Slot\n  nextSlot: t.Slot\n  networkStats: NetworkStats\n  nodeId: string\n  nodeIp?: null | string\n  poolStats: number[]\n  version: string\n  executionStats: ExecutionStats\n  chainId: number\n  minimalFees?: string\n}\n\nexport type Config = {\n  blockReward: string\n  deltaF0: number\n  endTimestamp?: number | null\n  genesisTimestamp: number\n  maxBlockSize?: number\n  operationValidityPeriods: number\n  periodsPerCycle: number\n  rollPrice: string\n  t0: number\n  threadCount: number\n}\n\nexport type ConsensusStats = {\n  cliqueCount: number\n  endTimespan: number\n  finalBlockCount: number\n  staleBlockCount: number\n  startTimespan: number\n}\n\nexport type NetworkStats = {\n  activeNodeCount: number\n  bannedPeerCount: number\n  inConnectionCount: number\n  knownPeerCount: number\n  outConnectionCount: number\n}\n\nexport type ExecutionStats = {\n  timeWindowStart: number\n  timeWindowEnd: number\n  finalBlockCount: number\n  finalExecutedOperationsCount: number\n  activeCursor: t.Slot\n  finalCursor: t.Slot\n}\n"]}