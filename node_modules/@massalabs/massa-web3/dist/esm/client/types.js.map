{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../src/client/types.ts"],"names":[],"mappings":"","sourcesContent":["import { rpcTypes as t } from '../generated'\n\nexport type ClientOptions = {\n  retry: { retries: number; delay: number }\n}\n\nexport type SendOperationInput = {\n  data: Uint8Array\n  publicKey: string\n  signature: string\n}\n\nexport type EventFilter = {\n  start?: t.Slot\n  end?: t.Slot\n  smartContractAddress?: string\n  callerAddress?: string\n  operationId?: string\n  isFinal?: boolean\n  isError?: boolean\n}\n\nexport type ReadOnlyCallResult = {\n  value: Uint8Array\n  info: {\n    gasCost: number\n    error?: string\n    events: t.OutputEvents\n    stateChanges: {\n      ledgerChanges: Record<string, unknown>\n      asyncPoolChanges: Record<string, unknown>[]\n      posChanges: Record<string, unknown>\n      executedOpsChanges: Record<string, unknown>\n      executedDenunciationsChanges: Record<string, unknown>\n      executionTrailHashChange: t.ExecutionTrailHashChange\n    }\n  }\n}\n\nexport type DatastoreEntry = {\n  address: string\n  key: Uint8Array | string\n}\n"]}