{"version":3,"file":"mns.js","sourceRoot":"","sources":["../../../src/deweb/mns.ts"],"names":[],"mappings":"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","sourcesContent":["export const DEWEB_REDIRECT_URL = 'https://deweb.massa.network/deweb_redirect'\n\nexport async function resolveDeweb(uri: string): Promise<string> {\n  if (typeof window === 'undefined') {\n    throw new Error('This function can only be used in a browser environment')\n  }\n\n  if (!uri.includes('://')) {\n    uri = `http://${uri}`\n  }\n\n  if (!URL.canParse(uri)) {\n    throw new Error('Invalid URI')\n  }\n\n  // Retrieve the uri informations\n  const { hostname: mns, pathname: mnsPath, search: mnsSearch } = new URL(uri)\n\n  // If the current domain is not a MNS domain, we throw an error\n  if (!mns.includes('.massa')) {\n    throw new Error('Not a MNS domain')\n  }\n\n  /* -- Check if mns domain are natively supported by the current browser -- */\n  try {\n    const response = await fetch(`http://${mns}/__deweb_info`)\n    if (response.ok) {\n      return uri\n    }\n  } catch (error) {\n    // ignore error\n  }\n\n  const mnsDomain = mns.replace('.massa', '')\n\n  /* -- Check if a localhost deweb provider is available -- */\n  try {\n    const response = await fetch('http://localhost:8080/__deweb_info')\n    if (await isDewebInfoData(response)) {\n      return `http://${mnsDomain}.localhost:8080${mnsPath}${mnsSearch}`\n    }\n  } catch (error) {\n    // ignore error\n  }\n\n  /* -- Check if the current domain is a Deweb provider -- */\n  // retrieve current url informations\n  const { host: currentHost, protocol: currentProtocol } = window.location\n  const subdomains = currentHost.split('.')\n\n  // If the current domain is not a Deweb provider, we redirect to the default URL\n  const defaultUrl = `${DEWEB_REDIRECT_URL}?deweb_url=\"${mns}${mnsPath}${mnsSearch}\"`\n\n  /* \n    If the current domain has no subdomains, it can't be a Deweb provider.\n    So we redirect to the default URL \n    */\n  // eslint-disable-next-line @typescript-eslint/no-magic-numbers\n  if (subdomains.length < 2) {\n    return defaultUrl\n  }\n\n  try {\n    const response = await fetch(\n      `${currentProtocol}//${subdomains.slice(1).join('.')}/__deweb_info`\n    )\n    if (await isDewebInfoData(response)) {\n      subdomains[0] = mnsDomain\n      return `${currentProtocol}//${subdomains.join('.')}/${mnsPath}${mnsSearch}`\n    }\n    return defaultUrl\n  } catch (error) {\n    return defaultUrl\n  }\n}\n\nasync function isDewebInfoData(response: Response): Promise<boolean> {\n  if (response.ok) {\n    const data = await response.json()\n    return data.app && data.app == 'deweb'\n  }\n  return false\n}\n"]}