{"version":3,"file":"client-types.js","sourceRoot":"","sources":["../../../src/generated/client-types.ts"],"names":[],"mappings":"","sourcesContent":["/**\n *\n * Amount of gas\n *\n */\nexport type GasAmount = number;\nexport type Integer2AHOqbcQ = number;\n/**\n *\n * Byte array\n *\n */\nexport type Bytes = Integer2AHOqbcQ[];\nexport type NullQu0Arl1F = null;\n/**\n *\n * Address\n *\n */\nexport type Address = string;\n/**\n *\n * Caller's address, optional\n *\n */\nexport type AddressOption = NullQu0Arl1F | Address;\n/**\n *\n * Operation datastore TO FIX (https://github.com/massalabs/massa/issues/4775)\n *\n */\nexport type OperationDatastore = NullQu0Arl1F | Bytes;\n/**\n *\n * MAS amount in float string\n *\n */\nexport type Amount = string;\n/**\n *\n * MAS amount in float string\n *\n */\nexport type AmountOption = NullQu0Arl1F | Amount;\n/**\n *\n * Read only bytecode execution\n *\n */\nexport interface ReadOnlyBytecodeExecution {\n  max_gas: GasAmount;\n  bytecode: Bytes;\n  address?: AddressOption;\n  operation_datastore?: OperationDatastore;\n  fee?: AmountOption;\n}\n/**\n *\n * Target function\n *\n */\nexport type TargetFunction = string;\n/**\n *\n * Read only call\n *\n */\nexport interface ReadOnlyCall {\n  max_gas: GasAmount;\n  target_address: Address;\n  target_function: TargetFunction;\n  parameter: Bytes;\n  caller_address: AddressOption;\n  coins: AmountOption;\n  fee: AmountOption;\n}\n/**\n *\n * Operation is final\n *\n */\nexport type IsFinal = boolean;\n/**\n *\n * Address filter\n *\n */\nexport interface AddressFilter {\n  address?: Address;\n  is_final?: IsFinal;\n}\n/**\n *\n * Block identifier\n *\n */\nexport type BlockId = string;\n/**\n *\n * after `expire_period` slot the operation won't be included in a block\n *\n */\nexport type Period = number;\n/**\n *\n * Thread in which the operation can be included\n *\n */\nexport type Thread = number;\nexport interface DatastoreEntryInput {\n  address: Address;\n  key: Bytes;\n}\n/**\n *\n * Slot\n *\n */\nexport interface Slot {\n  period: Period;\n  thread: Thread;\n}\n/**\n *\n * Endorsement id\n *\n */\nexport type EndorsementId = string;\n/**\n *\n * Operation id\n *\n */\nexport type OperationId = string;\n/**\n *\n * Whether the event was generated in a failed executed or not\n *\n */\nexport type Error = boolean;\nexport type NumberHo1ClIqD = number;\nexport interface DeferredCallsQuoteRequest {\n  target_slot: Slot;\n  max_gas_request: NumberHo1ClIqD;\n  params_size: NumberHo1ClIqD;\n  [k: string]: any;\n}\nexport type StringDoaGddGA = string;\n/**\n *\n * `PrivateKey` is used for signature and decryption\n *\n */\nexport type PrivateKey = string;\n/**\n *\n * Ipv4 or Ipv6 address\n *\n */\nexport type IpAddress = string;\n/**\n *\n * the content creator public key\n *\n */\nexport type PublicKey = string;\n/**\n *\n * signature\n *\n */\nexport type Signature = string;\n/**\n *\n * Operation input\n *\n */\nexport interface OperationInput {\n  creator_public_key: PublicKey;\n  signature: Signature;\n  serialized_content: Bytes;\n}\n/**\n *\n * An PageRequest object, which contains limit (max elements par page) and a page offset.\n *\n */\nexport interface Pagination {\n  limit: NumberHo1ClIqD;\n  offset: NumberHo1ClIqD;\n}\n/**\n *\n * Included in case of error. The error message\n *\n */\nexport type StringOz2F8Z2Y = string;\n/**\n *\n * The result of a read-only execution\n *\n */\nexport interface ReadOnlyResult {\n  Ok?: Bytes;\n  Error?: StringOz2F8Z2Y;\n}\n/**\n *\n * String of the event\n *\n */\nexport type EventData = string;\nexport type BlockIdOption = NullQu0Arl1F | BlockId;\n/**\n *\n * Wether the event was generated during  read only call\n *\n */\nexport type IsReadonly = boolean;\n/**\n *\n * Addresses, most recent at the end\n *\n */\nexport type AddressStack = Address[];\n/**\n *\n * Index of the event in the slot\n *\n */\nexport type IndexInSlot = number;\n/**\n *\n * Context generated by the execution context\n *\n */\nexport interface EventExecutionContext {\n  slot: Slot;\n  block?: BlockIdOption;\n  read_only: IsReadonly;\n  call_stack: AddressStack;\n  index_in_slot: IndexInSlot;\n  origin_operation_id?: OperationId;\n  is_final: IsFinal;\n  is_error?: Error;\n}\nexport interface SCOutputEvent {\n  data: EventData;\n  context: EventExecutionContext;\n}\nexport type OutputEvents = SCOutputEvent[];\n/**\n *\n * ledger changes\n *\n */\nexport interface ObjectD93Z4FAG { [key: string]: any; }\nexport interface ObjectHAgrRKSz { [key: string]: any; }\n/**\n *\n * async pool changes\n *\n */\nexport type UnorderedSetOfObjectHAgrRKSz46QV1Tyv = ObjectHAgrRKSz[];\n/**\n *\n * pos changes\n *\n */\nexport interface ObjectYWuwfL0B { [key: string]: any; }\n/**\n *\n * executed operations changes\n *\n */\nexport interface ObjectTK16EAH4 { [key: string]: any; }\n/**\n *\n * deferred call changes\n *\n */\nexport interface Object8GtTSzoU { [key: string]: any; }\n/**\n *\n * executed denunciation changes\n *\n */\nexport interface Object413CQ8L2 { [key: string]: any; }\nexport interface ObjectOfStringDoaGddGANwpLofVw {\n  Set: StringDoaGddGA;\n  [k: string]: any;\n}\n/**\n *\n * execution trail hash change\n *\n */\nexport type ExecutionTrailHashChange = ObjectOfStringDoaGddGANwpLofVw | StringDoaGddGA;\nexport interface StateChanges {\n  ledger_changes: ObjectD93Z4FAG;\n  async_pool_changes: UnorderedSetOfObjectHAgrRKSz46QV1Tyv;\n  pos_changes: ObjectYWuwfL0B;\n  executed_ops_changes: ObjectTK16EAH4;\n  deferred_call_changes: Object8GtTSzoU;\n  executed_denunciations_changes: Object413CQ8L2;\n  execution_trail_hash_change: ExecutionTrailHashChange;\n}\nexport interface ExecuteReadOnlyResponse {\n  executed_at: Slot;\n  result: ReadOnlyResult;\n  output_events: OutputEvents;\n  gas_cost: GasAmount;\n  state_changes: StateChanges;\n}\n/**\n *\n * Amount of rolls\n *\n */\nexport type RollAmount = number;\nexport type DatastoreKeys = Bytes[];\nexport interface ObjectOfSlotAmountWrpyYBUS {\n  slot?: Slot;\n  amount?: Amount;\n  [k: string]: any;\n}\nexport type DeferredCredits = ObjectOfSlotAmountWrpyYBUS[];\nexport type UnorderedSetOfSlotwrpyYBUS = Slot[];\nexport interface ObjectOfSlotNumberHo1ClIqDWrpyYBUS {\n  slot?: Slot;\n  index?: NumberHo1ClIqD;\n  [k: string]: any;\n}\n/**\n *\n * The next endorsement draws\n *\n */\nexport type UnorderedSetOfObjectOfSlotNumberHo1ClIqDWrpyYBUSwrpyYBUS = ObjectOfSlotNumberHo1ClIqDWrpyYBUS[];\n/**\n *\n * Block ids\n *\n */\nexport type BlockIdList = BlockId[];\n/**\n *\n * Operations\n *\n */\nexport type UnorderedSetOfOperationIdwrpyYBUS = OperationId[];\n/**\n *\n * EndorsementIds of created endorsements\n *\n */\nexport type UnorderedSetOfEndorsementIdwrpyYBUS = EndorsementId[];\nexport type OneOfRollAmountNullQu0Arl1FGg9ZJg6R = NullQu0Arl1F | RollAmount;\nexport interface ExecutionAddressCycleInfo {\n  cycle: NumberHo1ClIqD;\n  is_final: IsFinal;\n  ok_count: NumberHo1ClIqD;\n  nok_count: NumberHo1ClIqD;\n  active_rolls?: OneOfRollAmountNullQu0Arl1FGg9ZJg6R;\n}\n/**\n *\n * Cycle infos\n *\n */\nexport type UnorderedSetOfExecutionAddressCycleInfowrpyYBUS = ExecutionAddressCycleInfo[];\nexport interface AddressInfo {\n  address: Address;\n  thread: Thread;\n  final_balance: Amount;\n  final_roll_count: RollAmount;\n  final_datastore_keys: DatastoreKeys;\n  candidate_balance: Amount;\n  candidate_roll_count: RollAmount;\n  candidate_datastore_keys: DatastoreKeys;\n  deferred_credits: DeferredCredits;\n  next_block_draws: UnorderedSetOfSlotwrpyYBUS;\n  next_endorsement_draws: UnorderedSetOfObjectOfSlotNumberHo1ClIqDWrpyYBUSwrpyYBUS;\n  created_blocks: BlockIdList;\n  created_operations: UnorderedSetOfOperationIdwrpyYBUS;\n  created_endorsements: UnorderedSetOfEndorsementIdwrpyYBUS;\n  cycle_infos: UnorderedSetOfExecutionAddressCycleInfowrpyYBUS;\n}\n/**\n *\n * true if candidate\n *\n */\nexport type IsCandidate = boolean;\n/**\n *\n * true if discarded\n *\n */\nexport type IsDiscarded = boolean;\n/**\n *\n * true if in the last clique\n *\n */\nexport type InBlockClique = boolean;\n/**\n *\n * Current version\n *\n */\nexport type NumberTbrodUsH = number;\n/**\n *\n * Announced version\n *\n */\nexport type OneOfNullQu0Arl1FNumberHo1ClIqD4U4GpKJM = NullQu0Arl1F | NumberHo1ClIqD;\n/**\n *\n * Endorsement content\n *\n */\nexport interface EndorsementContent {\n  slot: Slot;\n  index: NumberHo1ClIqD;\n  endorsed_block: BlockId;\n}\nexport interface ObjectOfSignatureEndorsementIdPublicKeyAddressEndorsementContentWrpyYBUS {\n  content?: EndorsementContent;\n  signature?: Signature;\n  content_creator_pub_key?: PublicKey;\n  content_creator_address?: Address;\n  id?: EndorsementId;\n  [k: string]: any;\n}\n/**\n *\n * Endorsements\n *\n */\nexport type UnorderedSetOfObjectOfSignatureEndorsementIdPublicKeyAddressEndorsementContentWrpyYBUSwrpyYBUS = ObjectOfSignatureEndorsementIdPublicKeyAddressEndorsementContentWrpyYBUS[];\nexport interface ObjectOfSlotSignatureSignaturePublicKeyInteger2AHOqbcQStringDoaGddGAStringDoaGddGAWrpyYBUS {\n  public_key?: PublicKey;\n  slot?: Slot;\n  index?: Integer2AHOqbcQ;\n  hash_1?: StringDoaGddGA;\n  hash_2?: StringDoaGddGA;\n  signature_1?: Signature;\n  signature_2?: Signature;\n  [k: string]: any;\n}\nexport interface ObjectOfSlotSignatureSignaturePublicKeyStringDoaGddGAStringDoaGddGAWrpyYBUS {\n  public_key?: PublicKey;\n  slot?: Slot;\n  hash_1?: StringDoaGddGA;\n  hash_2?: StringDoaGddGA;\n  signature_1?: Signature;\n  signature_2?: Signature;\n  [k: string]: any;\n}\nexport type OneOfObjectOfSlotSignatureSignaturePublicKeyInteger2AHOqbcQStringDoaGddGAStringDoaGddGAWrpyYBUSObjectOfSlotSignatureSignaturePublicKeyStringDoaGddGAStringDoaGddGAWrpyYBUSTKq8XnCL = ObjectOfSlotSignatureSignaturePublicKeyInteger2AHOqbcQStringDoaGddGAStringDoaGddGAWrpyYBUS | ObjectOfSlotSignatureSignaturePublicKeyStringDoaGddGAStringDoaGddGAWrpyYBUS;\n/**\n *\n * Denunciations\n *\n */\nexport type UnorderedSetOfOneOfObjectOfSlotSignatureSignaturePublicKeyInteger2AHOqbcQStringDoaGddGAStringDoaGddGAWrpyYBUSObjectOfSlotSignatureSignaturePublicKeyStringDoaGddGAStringDoaGddGAWrpyYBUSTKq8XnCLwrpyYBUS = OneOfObjectOfSlotSignatureSignaturePublicKeyInteger2AHOqbcQStringDoaGddGAStringDoaGddGAWrpyYBUSObjectOfSlotSignatureSignaturePublicKeyStringDoaGddGAStringDoaGddGAWrpyYBUSTKq8XnCL[];\nexport interface Header {\n  current_version?: NumberTbrodUsH;\n  announced_version?: OneOfNullQu0Arl1FNumberHo1ClIqD4U4GpKJM;\n  operation_merkle_root: StringDoaGddGA;\n  parents: BlockIdList;\n  slot: Slot;\n  endorsements?: UnorderedSetOfObjectOfSignatureEndorsementIdPublicKeyAddressEndorsementContentWrpyYBUSwrpyYBUS;\n  denunciations?: UnorderedSetOfOneOfObjectOfSlotSignatureSignaturePublicKeyInteger2AHOqbcQStringDoaGddGAStringDoaGddGAWrpyYBUSObjectOfSlotSignatureSignaturePublicKeyStringDoaGddGAStringDoaGddGAWrpyYBUSTKq8XnCLwrpyYBUS;\n}\n/**\n *\n * signed operation\n *\n */\nexport interface WrappedHeader {\n  content: Header;\n  signature: Signature;\n  content_creator_pub_key: PublicKey;\n  content_creator_address: Address;\n  id?: BlockId;\n}\nexport interface Block {\n  header: WrappedHeader;\n  operations: UnorderedSetOfOperationIdwrpyYBUS;\n}\nexport interface BlockInfoContent {\n  is_final: IsFinal;\n  is_candidate: IsCandidate;\n  is_discarded?: IsDiscarded;\n  is_in_blockclique: InBlockClique;\n  block: Block;\n}\nexport interface BlockInfo {\n  id: BlockId;\n  content?: BlockInfoContent;\n}\n/**\n *\n * Depends on descendants and endorsement count\n *\n */\nexport type Number7BVjpZ2Z = number;\n/**\n *\n * True if it is the clique of higher fitness\n *\n */\nexport type BooleanXIboFXzF = boolean;\n/**\n *\n * Clique\n *\n */\nexport interface Clique {\n  block_ids: BlockIdList;\n  fitness: Number7BVjpZ2Z;\n  is_blockclique: BooleanXIboFXzF;\n}\n/**\n *\n * The final datastore entry value bytes\n *\n */\nexport type BytesOption = NullQu0Arl1F | Bytes;\n/**\n *\n * Datastore entry\n *\n */\nexport interface DatastoreEntryOutput {\n  candidate_value: BytesOption;\n  final_value: BytesOption;\n}\n/**\n *\n * Context of the transfer : operation or asynchronous execution\n *\n */\nexport interface Context { [key: string]: any; }\n/**\n *\n * True if the operation succeed otherwise false\n *\n */\nexport type IsSuccess = boolean;\n/**\n *\n * MAS Transfer operation receipt\n *\n */\nexport interface TransferReceipt {\n  from: Address;\n  to: Address;\n  amount: Amount;\n  effective_amount_received: Amount;\n  context: Context;\n  succeed: IsSuccess;\n  fee: Amount;\n  block_id: BlockId;\n}\nexport type UnorderedSetOfTransferReceiptzpyvh8AY = TransferReceipt[];\nexport type BooleanVyG3AETh = boolean;\n/**\n *\n * Endorsement\n *\n */\nexport interface Endorsement {\n  content: EndorsementContent;\n  content_creator_pub_key: PublicKey;\n  content_creator_address?: Address;\n  id?: EndorsementId;\n  signature: Signature;\n}\n/**\n *\n * Endorsement info\n *\n */\nexport interface EndorsementInfo {\n  id: EndorsementId;\n  in_pool: BooleanVyG3AETh;\n  in_blocks: BlockIdList;\n  is_final: IsFinal;\n  endorsement: Endorsement;\n}\n/**\n *\n * true if incompatible with a final block\n *\n */\nexport type Stale = boolean;\nexport interface GraphInterval {\n  creator: PublicKey;\n  id: BlockId;\n  is_final: IsFinal;\n  is_in_blockclique: InBlockClique;\n  is_stale: Stale;\n  parents: BlockIdList;\n  slot: Slot;\n}\n/**\n *\n * True if operation is still in pool\n *\n */\nexport type BooleanSJ3TNusg = boolean;\n/**\n *\n * True if the operation is final (for example in a final block)\n *\n */\nexport type IsFinalOperation = NullQu0Arl1F | IsFinal;\n/**\n *\n * transfer coins from sender to recipient\n *\n */\nexport interface TransactionReceipt {\n  amount: Amount;\n  recipient_address: Address;\n}\nexport type UnorderedSetOfBytes0JFPBP6Z = Bytes[];\n/**\n *\n * A tuple which contains (key, value)\n *\n */\nexport type DatastoreEntry = UnorderedSetOfBytes0JFPBP6Z[];\n/**\n *\n * Execute a smart contract.\n *\n */\nexport interface ExecuteSCReceipt {\n  data: Bytes;\n  max_gas: GasAmount;\n  datastore: DatastoreEntry;\n}\n/**\n *\n * Contract Function name to call\n *\n */\nexport type FunctionName = string;\n/**\n *\n * Calls an exported function from a stored smart contract\n *\n */\nexport interface CallSCReceipt {\n  target_addr: Address;\n  target_func: FunctionName;\n  param: Bytes;\n  max_gas: GasAmount;\n  coins: Amount;\n}\n/**\n *\n * the sender buys `roll_count` rolls. Roll price is defined in configuration\n *\n */\nexport interface RollBuyReceipt {\n  roll_count: RollAmount;\n}\n/**\n *\n * the sender sells `roll_count` rolls. Roll price is defined in configuration\n *\n */\nexport interface RollSellReceipt {\n  roll_count: RollAmount;\n}\n/**\n *\n * the type specific operation part\n *\n */\nexport interface OperationType {\n  Transaction?: TransactionReceipt;\n  ExecuteSC?: ExecuteSCReceipt;\n  CallSC?: CallSCReceipt;\n  RollBuy?: RollBuyReceipt;\n  RollSell?: RollSellReceipt;\n}\n/**\n *\n * Operation\n *\n */\nexport interface Operation {\n  fee: Amount;\n  expire_period: Period;\n  op: OperationType;\n}\n/**\n *\n * signed operation\n *\n */\nexport interface WrappedOperation {\n  content: Operation;\n  signature: Signature;\n  content_creator_pub_key?: PublicKey;\n  content_creator_address?: Address;\n  id?: OperationId;\n}\n/**\n *\n * true if the operation execution succeeded, false if failed, None means unknown\n *\n */\nexport type OneOfBooleanVyG3AEThNullQu0Arl1FE3Qax0Os = NullQu0Arl1F | BooleanVyG3AETh;\n/**\n *\n * Operation info\n *\n */\nexport interface OperationInfo {\n  id: OperationId;\n  in_blocks: BlockIdList;\n  in_pool: BooleanSJ3TNusg;\n  is_operation_final: IsFinalOperation;\n  thread: Thread;\n  operation: WrappedOperation;\n  op_exec_status?: OneOfBooleanVyG3AEThNullQu0Arl1FE3Qax0Os;\n}\nexport interface ObjectOfAddressRollAmountUf3B9Cb5 {\n  address?: Address;\n  active_rolls?: RollAmount;\n  [k: string]: any;\n}\n/**\n *\n * A tuple which contains (address, active_rolls)\n *\n */\nexport interface Staker { [key: string]: any; }\n/**\n *\n * Used to compute finality threshold\n *\n */\nexport type Number2A9FvvYh = number;\n/**\n *\n * (Only in testnets)\nTime in milliseconds when the blockclique started.\n *\n */\nexport type OneOfNullQu0Arl1FNumberHo1ClIqD73O8PHnh = NullQu0Arl1F | NumberHo1ClIqD;\n/**\n *\n * Time in milliseconds when the blockclique started.\n *\n */\nexport type NumberSgfzurLm = number;\n/**\n *\n * Maximum size (in bytes) of a block\n *\n */\nexport type NumberUwkWWxaa = number;\n/**\n *\n * Maximum operation validity period count\n *\n */\nexport type NumberTs6Cn6JQ = number;\n/**\n *\n * cycle duration in periods\n *\n */\nexport type NumberGrsxxfaH = number;\n/**\n *\n * Time between the periods in the same thread.\n *\n */\nexport type Number8ImKBhpQ = number;\n/**\n *\n * Number of threads\n *\n */\nexport type NumberAxwlzLso = number;\n/**\n *\n * Compact configuration\n *\n */\nexport interface Config {\n  block_reward: Amount;\n  delta_f0: Number2A9FvvYh;\n  end_timestamp?: OneOfNullQu0Arl1FNumberHo1ClIqD73O8PHnh;\n  genesis_timestamp: NumberSgfzurLm;\n  max_block_size?: NumberUwkWWxaa;\n  operation_validity_periods: NumberTs6Cn6JQ;\n  periods_per_cycle: NumberGrsxxfaH;\n  roll_price: Amount;\n  t0: Number8ImKBhpQ;\n  thread_count: NumberAxwlzLso;\n}\nexport interface ObjectOfStringDoaGddGAIpAddressWrpyYBUS {\n  node_id?: StringDoaGddGA;\n  ip_address?: IpAddress;\n  [k: string]: any;\n}\n/**\n *\n * Connected nodes (node id, ip address, true if the connection is outgoing, false if incoming)\n *\n */\nexport interface ConnectedNodes { [key: string]: any; }\n/**\n *\n * Stats time interval, millis since 1970-01-01\n *\n */\nexport type NumberLpoULYcx = number;\n/**\n *\n * Consensus stats\n *\n */\nexport interface ConsensusStats {\n  clique_count: NumberHo1ClIqD;\n  end_timespan: NumberLpoULYcx;\n  final_block_count: NumberHo1ClIqD;\n  stale_block_count: NumberHo1ClIqD;\n  start_timespan: NumberLpoULYcx;\n}\n/**\n *\n * Current cycle\n *\n */\nexport type NumberSWFW9I8Z = number;\n/**\n *\n * Time in milliseconds since 1970-01-01\n *\n */\nexport type NumberYQZ1VVuw = number;\n/**\n *\n * current cycle starting time in milliseconds since 1970-01-01\n *\n */\nexport type NumberQuWRP8Oa = number;\n/**\n *\n * next cycle starting time in milliseconds since 1970-01-01\n *\n */\nexport type NumberSDEXjSo6 = number;\n/**\n *\n * Active node count\n *\n */\nexport type NumberWc2YJi2H = number;\n/**\n *\n * Banned node count\n *\n */\nexport type NumberZdt4Udf4 = number;\n/**\n *\n * In connections count\n *\n */\nexport type NumberLgEVA2Rp = number;\n/**\n *\n * Total known peers count\n *\n */\nexport type NumberNw53IytE = number;\n/**\n *\n * Out connections count\n *\n */\nexport type NumberXuleKeT9 = number;\n/**\n *\n * Network stats\n *\n */\nexport interface NetworkStats {\n  active_node_count: NumberWc2YJi2H;\n  banned_peer_count: NumberZdt4Udf4;\n  in_connection_count: NumberLgEVA2Rp;\n  known_peer_count: NumberNw53IytE;\n  out_connection_count: NumberXuleKeT9;\n}\n/**\n *\n * Our node id\n *\n */\nexport type StringOFgZzVe7 = string;\n/**\n *\n * Optional node ip if provided\n *\n */\nexport type OneOfIpAddressNullQu0Arl1FXaFV5TPI = NullQu0Arl1F | IpAddress;\n/**\n *\n * Pool stats\n *\n */\nexport type PoolStats = NumberHo1ClIqD[];\n/**\n *\n * Application version, checked during handshakes\n *\n */\nexport type Version = string;\n/**\n *\n * Time window start\n *\n */\nexport type NumberDk8ZmyGi = number;\n/**\n *\n * Time window end\n *\n */\nexport type NumberWbCeho3I = number;\n/**\n *\n * number of final blocks in the time window\n *\n */\nexport type NumberGCfSuERd = number;\n/**\n *\n * number of final executed operations in the time window\n *\n */\nexport type NumberJ4Dz6P30 = number;\n/**\n *\n * Execution stats\n *\n */\nexport interface ExecutionStats {\n  time_window_start: NumberDk8ZmyGi;\n  time_window_end: NumberWbCeho3I;\n  final_block_count: NumberGCfSuERd;\n  final_executed_operations_count: NumberJ4Dz6P30;\n  active_cursor: Slot;\n  final_cursor: Slot;\n}\n/**\n *\n * Chain id\n *\n */\nexport type NumberBte4OVdF = number;\nexport interface DeferredCallsQuoteResponse {\n  target_slot: Slot;\n  max_gas_request: NumberHo1ClIqD;\n  available: BooleanVyG3AETh;\n  price: NumberHo1ClIqD;\n  [k: string]: any;\n}\nexport type UnorderedSetOfNumberHo1ClIqDAokMKuEf = NumberHo1ClIqD[];\nexport interface DeferredCall {\n  sender_address: Address;\n  target_slot: Slot;\n  target_address: Address;\n  target_function: StringDoaGddGA;\n  parameters: UnorderedSetOfNumberHo1ClIqDAokMKuEf;\n  coins: NumberHo1ClIqD;\n  max_gas: NumberHo1ClIqD;\n  fee: NumberHo1ClIqD;\n  cancelled: BooleanVyG3AETh;\n  [k: string]: any;\n}\nexport interface DeferredCallResponse {\n  call_id: StringDoaGddGA;\n  call: DeferredCall;\n  [k: string]: any;\n}\nexport type UnorderedSetOfStringDoaGddGADvj0XlFa = StringDoaGddGA[];\nexport interface DeferredCallsSlotResponse {\n  slot?: Slot;\n  call_ids?: UnorderedSetOfStringDoaGddGADvj0XlFa;\n  [k: string]: any;\n}\ntype AlwaysFalse = any;\nexport type UnorderedSetOfStakerdplIH7J8 = Staker[];\nexport interface ObjectOfPeriodBlockIdWrpyYBUS {\n  BlockId?: BlockId;\n  period?: Period;\n  [k: string]: any;\n}\n/**\n *\n * A tuple which contains (BlockId, period)\n *\n */\nexport interface BlockParent { [key: string]: any; }\n/**\n *\n * Operations\n *\n */\nexport type Operations = OperationInfo[];\n/**\n *\n * filled block\n *\n */\nexport interface FilledBlock {\n  header: WrappedHeader;\n  operations: Operations;\n}\nexport interface FilledBlockInfoContent {\n  is_final: IsFinal;\n  is_stale: Stale;\n  is_in_blockclique: InBlockClique;\n  block: FilledBlock;\n}\nexport type UnorderedSetOfReadOnlyBytecodeExecutionNzcRfs8A = ReadOnlyBytecodeExecution[];\nexport type UnorderedSetOfReadOnlyCallfpPkkjmf = ReadOnlyCall[];\nexport type UnorderedSetOfAddressjJsnATCO = Address[];\nexport type AddressList = AddressFilter[];\nexport type UnorderedSetOfDatastoreEntryInputLrTgdYH8 = DatastoreEntryInput[];\nexport type UnorderedSetOfEndorsementIdqnHAk5M0 = EndorsementId[];\n/**\n *\n * Event filter\n *\n */\nexport interface EventFilter {\n  start?: Slot;\n  end?: Slot;\n  emitter_address?: Address;\n  original_caller_address?: Address;\n  original_operation_id?: OperationId;\n  is_final?: IsFinal;\n  is_error?: Error;\n}\nexport interface ObjectOfNumberHo1ClIqDNumberHo1ClIqDTmeT75Fq {\n  start?: NumberHo1ClIqD;\n  end?: NumberHo1ClIqD;\n}\nexport type UnorderedSetOfOperationId5TxbV4NZ = OperationId[];\nexport type UnorderedSetOfDeferredCallsQuoteRequestwrpyYBUS = DeferredCallsQuoteRequest[];\nexport type UnorderedSetOfPrivateKeyG69QLiLP = PrivateKey[];\n/**\n *\n * Array of Ipv4 or Ipv6 address\n *\n */\nexport type IpAddressList = IpAddress[];\nexport type UnorderedSetOfIpAddressiIc9WbOi = IpAddress[];\nexport type UnorderedSetOfOperationInputx51DfMZX = OperationInput[];\n/**\n *\n * ApiRequest for apiV2\n *\n */\nexport interface ApiRequest {\n  page_request?: Pagination;\n}\nexport type UnorderedSetOfExecuteReadOnlyResponsewrpyYBUS = ExecuteReadOnlyResponse[];\nexport type UnorderedSetOfAddressInfowrpyYBUS = AddressInfo[];\nexport type BytecodeList = Bytes[];\nexport type UnorderedSetOfBlockInfowrpyYBUS = BlockInfo[];\nexport type UnorderedSetOfCliqueMz9JAAOV = Clique[];\nexport type UnorderedSetOfDatastoreEntryOutputgBhWTzxI = DatastoreEntryOutput[];\nexport type UnorderedSetOfUnorderedSetOfTransferReceiptzpyvh8AYeEDRSdp7 = UnorderedSetOfTransferReceiptzpyvh8AY[];\nexport type UnorderedSetOfEndorsementInfowrpyYBUS = EndorsementInfo[];\nexport type UnorderedSetOfGraphIntervalwrpyYBUS = GraphInterval[];\nexport type UnorderedSetOfOperationInfowrpyYBUS = OperationInfo[];\n/**\n *\n * Node status\n *\n */\nexport interface NodeStatus {\n  config: Config;\n  connected_nodes: ConnectedNodes;\n  consensus_stats: ConsensusStats;\n  current_cycle: NumberSWFW9I8Z;\n  current_time: NumberYQZ1VVuw;\n  current_cycle_time: NumberQuWRP8Oa;\n  next_cycle_time: NumberSDEXjSo6;\n  last_slot: Slot;\n  network_stats: NetworkStats;\n  next_slot: Slot;\n  node_id: StringOFgZzVe7;\n  node_ip?: OneOfIpAddressNullQu0Arl1FXaFV5TPI;\n  pool_stats: PoolStats;\n  version: Version;\n  execution_stats: ExecutionStats;\n  chain_id: NumberBte4OVdF;\n  minimal_fees?: Amount;\n}\nexport type UnorderedSetOfDeferredCallsQuoteResponsewrpyYBUS = DeferredCallsQuoteResponse[];\nexport type UnorderedSetOfDeferredCallResponsewrpyYBUS = DeferredCallResponse[];\nexport type UnorderedSetOfDeferredCallsSlotResponsewrpyYBUS = DeferredCallsSlotResponse[];\n/**\n *\n * Public key and a signature it has produced used for serialization/deserialization purpose\n *\n */\nexport interface PubkeySig {\n  public_key: PublicKey;\n  signature: Signature;\n}\n/**\n *\n * PagedVec of stakers for apiV2\n *\n */\nexport interface PagedVecStaker {\n  content?: UnorderedSetOfStakerdplIH7J8;\n  total_count?: NumberHo1ClIqD;\n}\nexport type UnorderedSetOfBlockParentwrpyYBUS = BlockParent[];\nexport interface FilledBlockInfo {\n  id: OperationId;\n  content?: FilledBlockInfoContent;\n}\n/**\n *\n * Generated! Represents an alias to any of the provided schemas\n *\n */\nexport type AnyOfUnorderedSetOfReadOnlyBytecodeExecutionNzcRfs8AUnorderedSetOfReadOnlyCallfpPkkjmfUnorderedSetOfAddressjJsnATCOAddressListBlockIdListSlotUnorderedSetOfDatastoreEntryInputLrTgdYH8UnorderedSetOfSlotwrpyYBUSUnorderedSetOfEndorsementIdqnHAk5M0EventFilterObjectOfNumberHo1ClIqDNumberHo1ClIqDTmeT75FqUnorderedSetOfOperationId5TxbV4NZPaginationUnorderedSetOfDeferredCallsQuoteRequestwrpyYBUSUnorderedSetOfStringDoaGddGADvj0XlFaUnorderedSetOfSlotwrpyYBUSUnorderedSetOfPrivateKeyG69QLiLPIpAddressListIpAddressListIpAddressListUnorderedSetOfStringDoaGddGADvj0XlFaIpAddressListIpAddressListIpAddressListIpAddressListIpAddressListUnorderedSetOfAddressjJsnATCOBytesUnorderedSetOfIpAddressiIc9WbOiIpAddressListIpAddressListUnorderedSetOfOperationInputx51DfMZXApiRequestInteger2AHOqbcQInteger2AHOqbcQInteger2AHOqbcQInteger2AHOqbcQUnorderedSetOfExecuteReadOnlyResponsewrpyYBUSUnorderedSetOfExecuteReadOnlyResponsewrpyYBUSUnorderedSetOfAddressInfowrpyYBUSBytecodeListUnorderedSetOfBlockInfowrpyYBUSBlockUnorderedSetOfCliqueMz9JAAOVUnorderedSetOfDatastoreEntryOutputgBhWTzxIUnorderedSetOfUnorderedSetOfTransferReceiptzpyvh8AYeEDRSdp7UnorderedSetOfEndorsementInfowrpyYBUSOutputEventsUnorderedSetOfGraphIntervalwrpyYBUSUnorderedSetOfOperationInfowrpyYBUSUnorderedSetOfStakerdplIH7J8NodeStatusUnorderedSetOfDeferredCallsQuoteResponsewrpyYBUSUnorderedSetOfDeferredCallResponsewrpyYBUSUnorderedSetOfDeferredCallsSlotResponsewrpyYBUSAlwaysFalseUnorderedSetOfAddressjJsnATCOAlwaysFalseAlwaysFalseAlwaysFalseAlwaysFalseAlwaysFalseIpAddressListIpAddressListAlwaysFalseIpAddressListAlwaysFalseAlwaysFalseAlwaysFalseAlwaysFalseAlwaysFalsePubkeySigAlwaysFalseAlwaysFalseAlwaysFalseAlwaysFalseUnorderedSetOfOperationId5TxbV4NZPagedVecStakerUnorderedSetOfBlockParentwrpyYBUSVersionBlockInfoWrappedHeaderFilledBlockInfoOperationBooleanVyG3AEThBooleanVyG3AEThBooleanVyG3AEThBooleanVyG3AETh = UnorderedSetOfReadOnlyBytecodeExecutionNzcRfs8A | UnorderedSetOfReadOnlyCallfpPkkjmf | UnorderedSetOfAddressjJsnATCO | AddressList | BlockIdList | Slot | UnorderedSetOfDatastoreEntryInputLrTgdYH8 | UnorderedSetOfSlotwrpyYBUS | UnorderedSetOfEndorsementIdqnHAk5M0 | EventFilter | ObjectOfNumberHo1ClIqDNumberHo1ClIqDTmeT75Fq | UnorderedSetOfOperationId5TxbV4NZ | Pagination | UnorderedSetOfDeferredCallsQuoteRequestwrpyYBUS | UnorderedSetOfStringDoaGddGADvj0XlFa | UnorderedSetOfPrivateKeyG69QLiLP | IpAddressList | Bytes | UnorderedSetOfIpAddressiIc9WbOi | UnorderedSetOfOperationInputx51DfMZX | ApiRequest | Integer2AHOqbcQ | UnorderedSetOfExecuteReadOnlyResponsewrpyYBUS | UnorderedSetOfAddressInfowrpyYBUS | BytecodeList | UnorderedSetOfBlockInfowrpyYBUS | Block | UnorderedSetOfCliqueMz9JAAOV | UnorderedSetOfDatastoreEntryOutputgBhWTzxI | UnorderedSetOfUnorderedSetOfTransferReceiptzpyvh8AYeEDRSdp7 | UnorderedSetOfEndorsementInfowrpyYBUS | OutputEvents | UnorderedSetOfGraphIntervalwrpyYBUS | UnorderedSetOfOperationInfowrpyYBUS | UnorderedSetOfStakerdplIH7J8 | NodeStatus | UnorderedSetOfDeferredCallsQuoteResponsewrpyYBUS | UnorderedSetOfDeferredCallResponsewrpyYBUS | UnorderedSetOfDeferredCallsSlotResponsewrpyYBUS | AlwaysFalse | PubkeySig | PagedVecStaker | UnorderedSetOfBlockParentwrpyYBUS | Version | BlockInfo | WrappedHeader | FilledBlockInfo | Operation | BooleanVyG3AETh;\nexport type ExecuteReadOnlyBytecode = (ReadOnlyBytecodeExecution: UnorderedSetOfReadOnlyBytecodeExecutionNzcRfs8A) => Promise<UnorderedSetOfExecuteReadOnlyResponsewrpyYBUS>;\nexport type ExecuteReadOnlyCall = (ReadOnlyCall: UnorderedSetOfReadOnlyCallfpPkkjmf) => Promise<UnorderedSetOfExecuteReadOnlyResponsewrpyYBUS>;\nexport type GetAddresses = (address: UnorderedSetOfAddressjJsnATCO) => Promise<UnorderedSetOfAddressInfowrpyYBUS>;\nexport type GetAddressesBytecode = (addressFilter: AddressList) => Promise<BytecodeList>;\nexport type GetBlocks = (blockIds: BlockIdList) => Promise<UnorderedSetOfBlockInfowrpyYBUS>;\nexport type GetBlockcliqueBlockBySlot = (slot: Slot) => Promise<Block>;\nexport type GetCliques = () => Promise<UnorderedSetOfCliqueMz9JAAOV>;\nexport type GetDatastoreEntries = (DatastoreEntryInputs: UnorderedSetOfDatastoreEntryInputLrTgdYH8) => Promise<UnorderedSetOfDatastoreEntryOutputgBhWTzxI>;\nexport type GetSlotsTransfers = (slots: UnorderedSetOfSlotwrpyYBUS) => Promise<UnorderedSetOfUnorderedSetOfTransferReceiptzpyvh8AYeEDRSdp7>;\nexport type GetEndorsements = (endorsementId: UnorderedSetOfEndorsementIdqnHAk5M0) => Promise<UnorderedSetOfEndorsementInfowrpyYBUS>;\nexport type GetFilteredScOutputEvent = (EventFilter: EventFilter) => Promise<OutputEvents>;\nexport type GetGraphInterval = (TimeInterval: ObjectOfNumberHo1ClIqDNumberHo1ClIqDTmeT75Fq) => Promise<UnorderedSetOfGraphIntervalwrpyYBUS>;\nexport type GetOperations = (operationId: UnorderedSetOfOperationId5TxbV4NZ) => Promise<UnorderedSetOfOperationInfowrpyYBUS>;\nexport type GetStakers = (PageRequest: Pagination) => Promise<UnorderedSetOfStakerdplIH7J8>;\nexport type GetStatus = () => Promise<NodeStatus>;\nexport type GetDeferredCallQuote = (req: UnorderedSetOfDeferredCallsQuoteRequestwrpyYBUS) => Promise<UnorderedSetOfDeferredCallsQuoteResponsewrpyYBUS>;\nexport type GetDeferredCallInfo = (arg: UnorderedSetOfStringDoaGddGADvj0XlFa) => Promise<UnorderedSetOfDeferredCallResponsewrpyYBUS>;\nexport type GetDeferredCallIdsBySlot = (slots: UnorderedSetOfSlotwrpyYBUS) => Promise<UnorderedSetOfDeferredCallsSlotResponsewrpyYBUS>;\nexport type AddStakingSecretKeys = (SecretKeys: UnorderedSetOfPrivateKeyG69QLiLP) => Promise<AlwaysFalse>;\nexport type GetStakingAddresses = () => Promise<UnorderedSetOfAddressjJsnATCO>;\nexport type NodeAddToBootstrapBlacklist = (ip: IpAddressList) => Promise<AlwaysFalse>;\nexport type NodeAddToBootstrapWhitelist = (ip: IpAddressList) => Promise<AlwaysFalse>;\nexport type NodeAddToPeersWhitelist = (ip: IpAddressList) => Promise<AlwaysFalse>;\nexport type NodeBanById = (id: UnorderedSetOfStringDoaGddGADvj0XlFa) => Promise<AlwaysFalse>;\nexport type NodeBanByIp = (ip: IpAddressList) => Promise<AlwaysFalse>;\nexport type NodeBootstrapBlacklist = () => Promise<IpAddressList>;\nexport type NodeBootstrapWhitelist = () => Promise<IpAddressList>;\nexport type NodeBootstrapWhitelistAllowAll = () => Promise<AlwaysFalse>;\nexport type NodePeersWhitelist = () => Promise<IpAddressList>;\nexport type NodeRemoveFromBootstrapBlacklist = (ip: IpAddressList) => Promise<AlwaysFalse>;\nexport type NodeRemoveFromBootstrapWhitelist = (ip: IpAddressList) => Promise<AlwaysFalse>;\nexport type NodeRemoveFromPeersWhitelist = (ip: IpAddressList) => Promise<AlwaysFalse>;\nexport type NodeRemoveFromWhitelist = (ip: IpAddressList) => Promise<AlwaysFalse>;\nexport type RemoveStakingAddresses = (addresses: UnorderedSetOfAddressjJsnATCO) => Promise<AlwaysFalse>;\nexport type NodeSignMessage = (message: Bytes) => Promise<PubkeySig>;\nexport type StopNode = () => Promise<AlwaysFalse>;\nexport type NodeUnbanById = (id: UnorderedSetOfIpAddressiIc9WbOi) => Promise<AlwaysFalse>;\nexport type NodeUnbanByIp = (ip: IpAddressList) => Promise<AlwaysFalse>;\nexport type NodeWhitelist = (ip: IpAddressList) => Promise<AlwaysFalse>;\nexport type SendOperations = (OperationInput: UnorderedSetOfOperationInputx51DfMZX) => Promise<UnorderedSetOfOperationId5TxbV4NZ>;\nexport type GetLargestStakers = (ApiRequest: ApiRequest) => Promise<PagedVecStaker>;\nexport type GetNextBlockBestParents = () => Promise<UnorderedSetOfBlockParentwrpyYBUS>;\nexport type GetVersion = () => Promise<Version>;\nexport type SubscribeNewBlocks = () => Promise<BlockInfo>;\nexport type SubscribeNewBlocksHeaders = () => Promise<WrappedHeader>;\nexport type SubscribeNewFilledBlocks = () => Promise<FilledBlockInfo>;\nexport type SubscribeNewOperations = () => Promise<Operation>;\nexport type UnsubscribeNewBlocks = (subscriptionId: Integer2AHOqbcQ) => Promise<BooleanVyG3AETh>;\nexport type UnsubscribeNewBlocksHeaders = (subscriptionId: Integer2AHOqbcQ) => Promise<BooleanVyG3AETh>;\nexport type UnsubscribeNewFilledBlocks = (subscriptionId: Integer2AHOqbcQ) => Promise<BooleanVyG3AETh>;\nexport type UnsubscribeNewOperations = (subscriptionId: Integer2AHOqbcQ) => Promise<BooleanVyG3AETh>;"]}