"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const anon_1 = require("../../anon");
const anon_socks_client_1 = require("../../anon-socks-client");
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        try {
            // connect to AnonControl
            const anon = new anon_1.Anon({ displayLog: true, socksPort: 9050, controlPort: 9051 });
            const anonSocksClient = new anon_socks_client_1.AnonSocksClient(anon);
            yield anon.start();
            // make a request
            const response = yield anonSocksClient.get('https://api.ipify.org?format=json');
            console.log('Response:', response.data);
            // stop Anon
            yield anon.stop();
        }
        catch (error) {
            console.error('Error:', error);
        }
    });
}
main();
