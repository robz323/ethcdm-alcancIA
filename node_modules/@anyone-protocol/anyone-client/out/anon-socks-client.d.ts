import { AxiosInstance, AxiosRequestConfig, AxiosResponse } from 'axios';
import { Anon } from './anon';
export declare class AnonSocksClient {
    private anon?;
    private agent;
    axios: AxiosInstance;
    private socksPort;
    private host;
    constructor(anon: Anon, host?: string);
    constructor(socksPort: number, host?: string);
    private createAgent;
    /**
     * Sends a GET request to the specified URL through the Anon network.
     * @param {string} url - The URL to send the GET request to.
     * @param {AxiosRequestConfig} [config] - Optional Axios request configuration.
     * @returns {Promise<AxiosResponse<T>>} A promise that resolves with the response data.
     */
    get<T = any>(url: string, config?: AxiosRequestConfig): Promise<AxiosResponse<T>>;
    /**
     * Sends a POST request to the specified URL through the Anon network.
     * @param {string} url - The URL to send the POST request to.
     * @param {any} [data] - The data to be sent as the request body.
     * @param {AxiosRequestConfig} [config] - Optional Axios request configuration.
     * @returns {Promise<AxiosResponse<T>>} A promise that resolves with the response data.
     */
    post<T = any>(url: string, data?: any, config?: AxiosRequestConfig): Promise<AxiosResponse<T>>;
    /**
     * Sends a PUT request to the specified URL through the Anon network.
     * @param {string} url - The URL to send the PUT request to.
     * @param {any} [data] - The data to be sent as the request body.
     * @param {AxiosRequestConfig} [config] - Optional Axios request configuration.
     * @returns {Promise<AxiosResponse<T>>} A promise that resolves with the response data.
     */
    put<T = any>(url: string, data?: any, config?: AxiosRequestConfig): Promise<AxiosResponse<T>>;
    /**
     * Sends a DELETE request to the specified URL through the Anon network.
     * @param {string} url - The URL to send the DELETE request to.
     * @param {AxiosRequestConfig} [config] - Optional Axios request configuration.
     * @returns {Promise<AxiosResponse<T>>} A promise that resolves with the response data.
     */
    delete<T = any>(url: string, config?: AxiosRequestConfig): Promise<AxiosResponse<T>>;
    /**
     * Sends a PATCH request to the specified URL through the Anon network.
     * @param {string} url - The URL to send the PATCH request to.
     * @param {any} [data] - The data to be sent as the request body.
     * @param {AxiosRequestConfig} [config] - Optional Axios request configuration.
     * @returns {Promise<AxiosResponse<T>>} A promise that resolves with the response data.
     */
    patch<T = any>(url: string, data?: any, config?: AxiosRequestConfig): Promise<AxiosResponse<T>>;
}
