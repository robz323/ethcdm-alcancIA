"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCpiEventsFromTransaction = exports.getAndValidateEvent = void 0;
var anchor_1 = require("@coral-xyz/anchor");
var perpetuals_1 = require("../idl/perpetuals");
var bytes_1 = require("@coral-xyz/anchor/dist/cjs/utils/bytes");
function getAndValidateEvent(previousProgram, currentProgram, eventAuthority, eventCoder, ixData) {
    var eventTag = Buffer.from([0x1d, 0x9a, 0xcb, 0x51, 0x2e, 0xa5, 0x45, 0xe4].reverse());
    if (!ixData.slice(0, 8).equals(eventTag)) {
        throw new Error("Invalid CPI Event: Event tag mismatch");
    }
    var expectedAuthority = anchor_1.web3.PublicKey.findProgramAddressSync([Buffer.from("__event_authority")], currentProgram)[0];
    if (expectedAuthority.toString() !== eventAuthority.toString()) {
        throw new Error("Invalid CPI Event: Event authority does not match");
    }
    var event = eventCoder.decode(bytes_1.base64.encode(ixData.slice(8)));
    if (!event) {
        throw new Error("Invalid CPI Event: Failed to decode event");
    }
    return event;
}
exports.getAndValidateEvent = getAndValidateEvent;
var getCpiEventsFromTransaction = function (response) { return __awaiter(void 0, void 0, void 0, function () {
    var instructions, innerInstructions, accounts, eventCoder, events, _loop_1, _i, innerInstructions_1, packet;
    var _a, _b;
    return __generator(this, function (_c) {
        instructions = response.transaction.message.compiledInstructions;
        innerInstructions = response.meta.innerInstructions;
        accounts = response.transaction.message.staticAccountKeys
            .concat((_a = response.meta.loadedAddresses.writable) !== null && _a !== void 0 ? _a : [])
            .concat((_b = response.meta.loadedAddresses.readonly) !== null && _b !== void 0 ? _b : []);
        eventCoder = new anchor_1.BorshEventCoder(perpetuals_1.IDL);
        events = [];
        _loop_1 = function (packet) {
            var previousProgram = accounts[instructions[packet.index].programIdIndex];
            packet.instructions.forEach(function (instruction, indexofInnerIns) {
                var bytes = bytes_1.bs58.decode(instruction.data);
                var currentProgram = accounts[instruction.programIdIndex];
                var eventAuthority = accounts[instruction.accounts[0]];
                try {
                    var event_1 = getAndValidateEvent(previousProgram, currentProgram, eventAuthority, eventCoder, bytes);
                    events.push(event_1);
                }
                catch (err) {
                }
            });
        };
        for (_i = 0, innerInstructions_1 = innerInstructions; _i < innerInstructions_1.length; _i++) {
            packet = innerInstructions_1[_i];
            _loop_1(packet);
        }
        return [2, events];
    });
}); };
exports.getCpiEventsFromTransaction = getCpiEventsFromTransaction;
