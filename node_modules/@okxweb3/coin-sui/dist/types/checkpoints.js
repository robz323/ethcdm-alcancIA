"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CheckpointPage = exports.Checkpoint = exports.ExecutionDigests = exports.EndOfEpochData = exports.CheckpointCommitment = exports.ECMHLiveObjectSetDigest = exports.CheckpointDigest = exports.CheckPointContentsDigest = exports.GasCostSummary = void 0;
const superstruct_1 = require("superstruct");
const common_1 = require("./common");
exports.GasCostSummary = (0, superstruct_1.object)({
    computationCost: (0, superstruct_1.number)(),
    storageCost: (0, superstruct_1.number)(),
    storageRebate: (0, superstruct_1.number)(),
    nonRefundableStorageFee: (0, superstruct_1.number)(),
});
exports.CheckPointContentsDigest = (0, superstruct_1.string)();
exports.CheckpointDigest = (0, superstruct_1.string)();
exports.ECMHLiveObjectSetDigest = (0, superstruct_1.object)({
    digest: (0, superstruct_1.array)((0, superstruct_1.number)()),
});
exports.CheckpointCommitment = (0, superstruct_1.any)();
exports.EndOfEpochData = (0, superstruct_1.object)({
    nextEpochCommittee: (0, superstruct_1.array)((0, superstruct_1.tuple)([(0, superstruct_1.string)(), (0, superstruct_1.number)()])),
    nextEpochProtocolVersion: (0, superstruct_1.number)(),
    epochCommitments: (0, superstruct_1.array)(exports.CheckpointCommitment),
});
exports.ExecutionDigests = (0, superstruct_1.object)({
    transaction: common_1.TransactionDigest,
    effects: common_1.TransactionEffectsDigest,
});
exports.Checkpoint = (0, superstruct_1.object)({
    epoch: (0, superstruct_1.number)(),
    sequenceNumber: (0, superstruct_1.string)(),
    digest: exports.CheckpointDigest,
    networkTotalTransactions: (0, superstruct_1.number)(),
    previousDigest: (0, superstruct_1.optional)(exports.CheckpointDigest),
    epochRollingGasCostSummary: exports.GasCostSummary,
    timestampMs: (0, superstruct_1.number)(),
    endOfEpochData: (0, superstruct_1.optional)(exports.EndOfEpochData),
    transactions: (0, superstruct_1.array)(common_1.TransactionDigest),
    checkpointCommitments: (0, superstruct_1.array)(exports.CheckpointCommitment),
});
exports.CheckpointPage = (0, superstruct_1.object)({
    data: (0, superstruct_1.array)(exports.Checkpoint),
    nextCursor: (0, superstruct_1.union)([(0, superstruct_1.string)(), (0, superstruct_1.literal)(null)]),
    hasNextPage: (0, superstruct_1.boolean)(),
});
//# sourceMappingURL=checkpoints.js.map