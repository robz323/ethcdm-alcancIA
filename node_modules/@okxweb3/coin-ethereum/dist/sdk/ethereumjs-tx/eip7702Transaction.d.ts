/// <reference types="node" />
import { BN } from "@okxweb3/crypto-lib";
import { BaseTransaction } from './baseTransaction';
import { AccessList, AccessListBuffer, EOACodeEIP7702TxData, JsonTx, AuthorizationListBytes, AuthorizationList, EOACode7702TxValuesArray } from './types';
export default class EOACodeEIP7702Transaction extends BaseTransaction<EOACodeEIP7702Transaction> {
    readonly chainId: BN;
    readonly accessList: AccessListBuffer;
    readonly AccessListJSON: AccessList;
    readonly maxPriorityFeePerGas: BN;
    readonly maxFeePerGas: BN;
    readonly authorizationList: AuthorizationListBytes;
    readonly AuthorizationListJSON: AuthorizationList;
    static fromTxData(txData: EOACodeEIP7702TxData): EOACodeEIP7702Transaction;
    static fromSerializedTx(serialized: Buffer): EOACodeEIP7702Transaction;
    static fromValuesArray(values: EOACode7702TxValuesArray): EOACodeEIP7702Transaction;
    constructor(txData: EOACodeEIP7702TxData);
    raw(): EOACode7702TxValuesArray;
    serialize(): Buffer;
    getMessageToSign(hashMessage?: boolean): Buffer;
    hash(): Buffer;
    _processSignature(v: number, r: Buffer, s: Buffer): EOACodeEIP7702Transaction;
    _processSignatureWithRawV(v: number, r: Buffer, s: Buffer): EOACodeEIP7702Transaction;
    toJSON(): JsonTx;
    errorStr(): string;
    protected _errorMsg(msg: string): string;
}
