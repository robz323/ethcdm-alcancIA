import { AddressLookupTableAccount, Connection, PublicKey, RecentPrioritizationFees } from "@solana/web3.js";
import { Instruction } from "./types";
export declare const MICROLAMPORTS_PER_LAMPORT = 1000000;
export declare const DEFAULT_PRIORITY_FEE_PERCENTILE = 0.9;
export declare const DEFAULT_MAX_PRIORITY_FEE_LAMPORTS = 1000000;
export declare const DEFAULT_MIN_PRIORITY_FEE_LAMPORTS = 0;
export declare const DEFAULT_MAX_COMPUTE_UNIT_LIMIT = 1400000;
export declare function estimateComputeBudgetLimit(connection: Connection, instructions: Instruction[], lookupTableAccounts: AddressLookupTableAccount[] | undefined, payer: PublicKey, margin: number): Promise<number>;
export declare function getPriorityFeeInLamports(connection: Connection, computeBudgetLimit: number, lockedWritableAccounts: PublicKey[], percentile?: number, getRecentPrioritizationFees?: (lockedWritableAccounts: PublicKey[]) => Promise<RecentPrioritizationFees[]>): Promise<number>;
export declare function getLockWritableAccounts(instructions: Instruction[]): PublicKey[];
