/// <reference types="bn.js" />
/// <reference types="node" />
import { PublicKey } from '@solana/web3.js';
import { Market, BookSideAccount, Side } from '..';
import { BN } from '@coral-xyz/anchor';
import { Order } from '../structs/order';
export declare class BookSide {
    market: Market;
    pubkey: PublicKey;
    account: BookSideAccount;
    side: Side;
    clusterTime: BN;
    constructor(market: Market, pubkey: PublicKey, account: BookSideAccount, side: Side);
    static decodeAccountfromBuffer(data: Buffer): BookSideAccount;
    items(): Generator<Order>;
    get rootFixed(): {
        maybeNode: number;
        leafCount: number;
    };
    get rootOraclePegged(): {
        maybeNode: number;
        leafCount: number;
    };
    fixedItems(): Generator<Order>;
    oraclePeggedItems(): Generator<Order>;
    compareOrders(a: Order, b: Order): boolean;
    best(): Order | undefined;
    getL2(depth: number): [number, number, BN, BN][];
    private static INNER_NODE_TAG;
    private static LEAF_NODE_TAG;
    private toInnerNode;
    private toLeafNode;
}
