import { VersionedTransaction } from "@solana/web3.js";
import { AssetType, InputAssetStruct, MergeResponse, PriceResponse, PriorityFee, SolutioFiSdkOptions, SpreadResponse, TargetTokenStruct, TokenResponse } from "./types";
declare class SolutioFi {
    private client;
    private apiKey;
    private bearerToken;
    constructor(options: SolutioFiSdkOptions);
    authenticate(): Promise<void>;
    close(owner: string, mints: string[]): Promise<VersionedTransaction[]>;
    burn(owner: string, mints: string[]): Promise<VersionedTransaction[]>;
    merge(owner: string, inputAssets: InputAssetStruct[], outputMint: string, priorityFee: PriorityFee): Promise<MergeResponse>;
    spread(owner: string, inputAsset: InputAssetStruct, targetTokens: TargetTokenStruct[], priorityFee: PriorityFee): Promise<SpreadResponse>;
    getTokenPrices(mints: string[]): Promise<PriceResponse>;
    getUserTokens(owner: string, type: AssetType): Promise<TokenResponse>;
}
export default SolutioFi;
